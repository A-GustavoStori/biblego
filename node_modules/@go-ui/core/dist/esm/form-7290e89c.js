import { b as hasSlot, a as inheritComponentAttrs } from './helper-bc7b4586.js';
import { k as kebabCase } from './kebabCase-147fb3bf.js';

const fieldSlotNames = ['icon-before', 'icon-after', 'prefix', 'suffix', 'hint', 'label'];
const fieldPropNames = [
    'prefix',
    'value',
    'error',
    'controlId',
    'labelId',
    'prefixId',
    'suffixId',
    'hintId',
    'errorId',
    'name',
    'label',
    'disabled',
    'hint',
    'readonly',
];
function loadFieldProps(compInstance) {
    let props = {};
    fieldPropNames.forEach((propKey) => {
        props[propKey] = compInstance[propKey];
    });
    const specialPropMap = {
        // controlId: 'id',
        idPrefix: 'prefix',
    };
    Object.keys(specialPropMap).forEach((key) => {
        const instancePropKey = specialPropMap[key];
        props[key] = compInstance[instancePropKey];
    });
    return props;
}
function loadFieldSlots(rootEl) {
    let result = {};
    fieldSlotNames.forEach((slotName) => {
        result[slotName] = hasSlot(rootEl, slotName);
    });
    return result;
}
function inheritNonFieldAttrs(compInstance, ignoreAttrs = []) {
    return inheritComponentAttrs(compInstance, [...fieldPropNames.map(kebabCase), ...ignoreAttrs]);
}

export { fieldPropNames as a, loadFieldSlots as b, fieldSlotNames as f, inheritNonFieldAttrs as i, loadFieldProps as l };

//# sourceMappingURL=form-7290e89c.js.map