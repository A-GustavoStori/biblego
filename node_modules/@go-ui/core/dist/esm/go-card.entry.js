import { r as registerInstance, h, H as Host, g as getElement } from './index-a73e6b51.js';
import { b as hasSlot } from './helper-bc7b4586.js';
import './index-30633753.js';
import './uniqueId-0b35bc55.js';

const goCardCss = "go-card{--go-card-outer-padding:1.25rem 1rem;--go-card-inner-gap:1rem;--go-card-bg:var(--go-color-bg);--go-card-fg:var(--go-color-text);--go-card-heading-font-size:var(--go-size-2);--go-card-heading-font-weight:500;--go-card-heading-color:var(--go-card-fg);--go-card-subheading-font-size:var(--go-size-1);--go-card-subheading-font-weight:400;--go-card-subheading-color:var(--go-color-neutral-600);--go-card-border-width:0.0625rem;--go-card-border-color:var(--go-color-neutral-300);--go-card-media-basis:40%;--go-card-media-height:auto;--go-card-media-aspect-ratio:auto;--go-card-media-object-position:center;--go-card-radius:var(--radius-2);--go-card-shadow:var(--shadow-2);display:block;background:var(--go-card-bg);color:var(--go-card-text);border-radius:var(--go-card-radius);box-shadow:var(--go-card-shadow);width:100%;height:100%}go-card .card-inner{padding:var(--go-card-outer-padding);overflow:auto;display:flex;height:100%;flex:1;flex-direction:column;gap:var(--go-card-inner-gap)}go-card .card-inner .card-heading-section .card-heading{font-size:var(--go-card-heading-font-size);font-weight:var(--go-card-heading-font-weight);color:var(--go-card-heading-color)}go-card .card-inner .card-heading-section .card-subheading{font-size:var(--go-card-subheading-font-size);font-weight:var(--go-card-subheading-font-weight);color:var(--go-card-subheading-color)}go-card .card-media{overflow:hidden;flex-basis:var(--go-card-media-basis)}go-card .card-media img,go-card .card-media video,go-card .card-media object,go-card .card-media iframe{display:block;width:100%;height:100%;object-fit:cover;object-position:var(--go-card-media-object-position);aspect-ratio:var(--go-card-media-aspect-ratio)}go-card.media{display:flex;justify-content:space-between;overflow:hidden}go-card.media.top .card-media,go-card.media.bottom .card-media{width:100%;height:var(--go-card-media-height);flex-basis:auto}go-card.media.top{flex-direction:column}go-card.media.top .card-inner{border-top-left-radius:0;border-top-right-radius:0}go-card.media.bottom{flex-direction:column-reverse}go-card.media.bottom .card-inner{border-bottom-left-radius:0;border-bottom-right-radius:0}go-card.media.left{flex-direction:row;align-items:stretch}go-card.media.left .card-media{width:var(--go-card-media-width)}go-card.media.right{flex-direction:row-reverse;align-items:stretch}go-card.media.right .card-media{width:var(--go-card-media-width)}go-card.has-link{position:relative}go-card.has-link:focus-within{outline:0.125rem solid var(--go-color-link);outline-offset:0.125rem}go-card.has-link .card-heading .go-link:focus-visible{outline:none}go-card.flat{--go-card-shadow:none}go-card.border{border:var(--go-card-border-width) solid var(--go-card-border-color)}go-card .card-content{flex:1 0 auto;line-height:1.5}go-card .card-footer{flex:0 0 auto}.equal-height-row{align-items:stretch}";
const GoCardStyle0 = goCardCss;

const GoCard = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.heading = undefined;
        this.subHeading = undefined;
        this.mediaPosition = 'top';
        this.href = undefined;
        this.target = undefined;
        this.flat = false;
        this.border = false;
    }
    componentWillLoad() {
        this.hasCustomHeading = hasSlot(this.el, 'heading');
        this.hasMedia = hasSlot(this.el, 'media');
        this.hasPreHeading = hasSlot(this.el, 'pre-heading');
        this.hasFooter = hasSlot(this.el, 'footer');
    }
    render() {
        const { hasMedia, mediaPosition, hasCustomHeading, heading, subHeading, hasPreHeading, hasFooter, href, target, flat, border, } = this;
        return (h(Host, { key: 'd6b827cefb8d09129ab32122ced68a115233c458', class: { [`media ${mediaPosition}`]: hasMedia, 'has-link': !!href, flat, border } }, hasMedia && (h("div", { class: "card-media" }, h("slot", { name: "media" }))), h("section", { key: '5871f3ecfa1e11a118e301343343da2b6c75e5b0', class: "card-inner" }, hasCustomHeading || heading || subHeading ? (h("div", { class: "card-heading-section" }, hasPreHeading ? h("slot", { name: "pre-heading" }) : null, h("slot", { name: "heading" }, heading ? (h("h2", { class: "card-heading" }, href ? (h("go-link", { href: href, target: target ? target : null, "expand-clickable-area": true }, heading)) : (heading))) : null, subHeading ? h("h3", { class: "card-subheading" }, subHeading) : null))) : null, h("div", { key: '1cf30b00981775b265fde21e9dfcea24e9ae796a', class: "card-content" }, h("slot", { key: 'f42ea7ea41002a042120ec0a13f20ccf7b4de577' })), hasFooter ? (h("div", { class: "card-footer" }, h("slot", { name: "footer" }))) : null)));
    }
    get el() { return getElement(this); }
};
GoCard.style = GoCardStyle0;

export { GoCard as go_card };

//# sourceMappingURL=go-card.entry.js.map