{"file":"go-icon.go-nav-link.entry.js","mappings":"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","names":[],"sources":["src/components/go-icon/go-icon.scss?tag=go-icon","src/components/go-icon/go-icon.tsx","src/components/navigation/go-nav-link/go-nav-link.scss?tag=go-nav-link","src/components/navigation/go-nav-link/go-nav-link.tsx"],"sourcesContent":["go-icon {\n  --icon-size: 1em;\n  --icon-color: currentColor;\n\n  &[icon-set^='material'] {\n    --icon-size: 1.5em;\n    vertical-align: middle;\n    .go-icon {\n      transform: rotate(0.03deg); // https://github.com/google/material-design-icons/issues/648\n      line-height: 1em;\n      display: inherit;\n    }\n  }\n\n  display: inline-block;\n  line-height: 1;\n  .go-icon {\n    font-size: var(--icon-size);\n    color: var(--icon-color);\n  }\n}\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\nimport { IconProps } from '../../interfaces';\nimport { $attrs } from '../../utils/helper';\nexport type MaterialIconVariants =\n  | `material-icons`\n  | `material-icons-outlined`\n  | `material-icons-round`\n  | `material-icons-sharp`;\n/**\n * https://fontawesome.com/v5.15/how-to-use/on-the-web/referencing-icons/basic-use\n */\nexport type FontAwesomeVariants = 'fas' | 'far' | 'fal' | 'fad' | 'fab';\n/**\n * https://boxicons.com/usage @see type\n */\nexport type BoxiconVariants = 'bx' | 'bxs' | 'bxl';\n\n@Component({\n  tag: 'go-icon',\n  styleUrl: 'go-icon.scss',\n  shadow: false,\n})\nexport class GoIcon implements IconProps {\n  @Element() el: HTMLElement;\n  /**\n   * Specify the icon set being referenced.\n   * Icon font CSS files must be included in the page.\n   */\n  @Prop({ reflect: true }) iconSet: MaterialIconVariants | FontAwesomeVariants | BoxiconVariants = 'material-icons';\n\n  /**\n   * Name of the icon\n   */\n  @Prop() name: string;\n\n  /**\n   * Size of the icon, supports CSS units and variables.\n   * Default: 1.5em for material icons, 1em for other icon sets.\n   */\n  @Prop() size?: string;\n\n  /**\n   * Color of the icon,  supports CSS units and variables.\n   * Default: `currentColor`\n   */\n  @Prop() color?: string;\n\n  /**\n   * provide label for screen reader\n   */\n  @Prop() label?: string;\n\n  private attrs = {} as any;\n  componentWillLoad() {\n    this.attrs = $attrs.bind(this)(false);\n  }\n\n  render() {\n    const { iconSet, name, size, color, label, attrs } = this;\n    const { class: customClasses } = attrs;\n    return (\n      // prettier-ignore\n      <Host\n        aria-hidden={label ? 'false' : 'true'}\n        style={{\n          '--icon-size': size ? size : null,\n          '--icon-color': color ? color : null,\n        }}>{label ? <span class=\"visually-hidden\">{label}</span> : null}{iconSet.startsWith('material') ? <span class={`${iconSet} go-icon ${customClasses ? customClasses : ''}`}>{name}</span> : null}{iconSet.startsWith('fa') ? <i class={`${iconSet} fa-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}{iconSet.startsWith('bx') ? <i class={`bx ${iconSet}-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}</Host>\n    );\n  }\n}\n","go-nav-link {\n  /**\n    @prop --nav-link-padding:\n      padding on nav link\n      - default: 0.25em 0\n  */\n  --nav-link-padding: 0.25em 0;\n\n  /**\n    @prop --nav-link-current-bar-width:\n      width of underline on current nav link\n      - default: 2px\n  */\n  --nav-link-current-bar-width: 2px;\n\n  /**\n    @prop --nav-link-current-bar-color:\n      color of underline on current nav link\n      - default: currentColor\n  */\n  --nav-link-current-bar-color: currentColor;\n\n  /**\n    @prop --nav-link-hover-fg-color:\n      text color on hover\n      - default: var(--go-color-link-hover)\n  */\n  --nav-link-hover-fg-color: var(--go-color-link-hover);\n\n  /**\n    @prop --nav-link-hover-bg-color:\n      background color on hover\n      - default: var(--go-color-link-hover-bg)\n  */\n  --nav-link-hover-bg-color: var(--go-color-link-hover-bg);\n\n  /**\n    @prop --nav-link-arrow-gap:\n      gap between arrow icon and link text\n      - default: var(--go-base-spacing)\n  */\n  --nav-link-arrow-gap: var(--go-base-spacing);\n\n  /**\n    @prop --nav-link-arrow-color:\n      icon color on nav link\n      - default: currentColor\n  */\n  --nav-link-arrow-color: currentColor;\n\n  /**\n    @prop --nav-link-arrow-color-hover:\n      icon color on hover\n      - default: currentColor\n  */\n  --nav-link-arrow-color-hover: currentColor;\n\n  /**\n    @prop --nav-link-align-y:\n      vertical alignment of icon and text\n      - default: flex-start\n  */\n  --nav-link-align-y: flex-start;\n\n  /**\n    @prop --nav-link-radius:\n      border radius of nav link\n      - default: var(--radius-2)\n  */\n  --nav-link-radius: var(--radius-2);\n\n  /**\n    @prop --nav-link-bg-color:\n      background color of nav link\n      - default: var(--go-color-neutral-200)\n  */\n  --nav-link-bg-color: var(--go-color-neutral-200);\n\n  /**\n    @prop --nav-link-text-color:\n      text color of nav link\n      - default: var(--go-color-darkest)\n  */\n  --nav-link-text-color: var(--go-color-darkest);\n\n  /**\n    @prop --nav-link-description-fs:\n    font size of description\n    - default: 0.85em\n  */\n  --nav-link-description-fs: 0.85em;\n  /**\n    @prop --nav-link-description-fw:\n    font weight of description\n    - default: normal\n  */\n  --nav-link-description-fw: normal;\n\n  /**\n    @prop --nav-link-description-color:\n    color of description\n    - default: var(--go-color-neutral-800)\n  */\n  --nav-link-description-color: var(--go-color-neutral-800);\n\n  --nav-link-description-color-hover: var(--go-color-neutral-700);\n\n  --nav-link-current-fw: 700;\n  --nav-link-current-text-color: var(--go-color-neutral-200);\n  --nav-link-current-bg-color: var(--go-color-darkest);\n  --nav-link-current-description-color: var(--go-color-neutral-300);\n\n  --nav-link-text-decoration: underline;\n\n  display: inline-flex;\n  align-items: var(--nav-link-align-y);\n  color: var(--go-color-link);\n  position: relative;\n\n  &[block] {\n    display: flex;\n    go-link {\n      display: block;\n      flex: 1;\n    }\n    .nav-item-link {\n      display: flex;\n      align-items: var(--nav-link-align-y);\n      width: 100%;\n    }\n  }\n\n  .nav-item-link {\n    @include transition(background);\n\n    display: inline-flex;\n    align-items: flex-start;\n    gap: 0.5rem;\n    padding: var(--nav-link-padding);\n    border-radius: var(--nav-link-radius);\n    // border-left: var(--nav-link-current-bar-width) solid transparent;\n    text-decoration: none;\n\n    go-icon {\n      text-decoration: none;\n    }\n    .nav-link-text {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      line-height: 1.25;\n      .nav-link-text-description {\n        font-size: var(--nav-link-description-fs);\n        font-weight: var(--nav-link-description-fw);\n        color: var(--nav-link-description-color);\n        text-decoration: none;\n      }\n    }\n\n    &.current {\n      color: var(--nav-link-current-text-color);\n      background: var(--nav-link-current-bg-color);\n\n      .nav-link-text-label {\n        font-weight: var(--nav-link-current-fw);\n        text-decoration: none;\n      }\n      .nav-link-text-description {\n        color: var(--nav-link-current-description-color);\n      }\n    }\n  }\n\n  // interactable states only applicable to a tag\n  a.nav-item-link {\n    svg.external-link-icon {\n      flex: 0 0 auto;\n      transform: none;\n    }\n    .arrow {\n      @include transition(transform);\n\n      stroke: var(--nav-link-arrow-color);\n      flex: 0 0 auto;\n      height: 1.25em;\n      margin-left: calc(var(--nav-link-arrow-gap) + 4px);\n      transform: translateX(-4px);\n    }\n    .nav-link-text-label {\n      text-decoration: var(--nav-link-text-decoration);\n      text-underline-offset: 0.2em;\n    }\n    &:hover,\n    &:focus-visible {\n      background-color: var(--nav-link-bg-color);\n      color: var(--nav-link-text-color);\n      .nav-link-text {\n        .nav-link-text-label {\n          text-decoration: none;\n        }\n        .nav-link-text-description {\n          color: var(--nav-link-description-color-hover);\n        }\n      }\n      .arrow {\n        transform: translateX(0);\n      }\n    }\n    &::after {\n      // expand clickable area to include arrow\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  }\n}\n","import { Component, h, Host, Prop, Element, Event, EventEmitter, State, Watch } from '@stencil/core';\nimport { IIcon, INavItem, UnknownObject } from '../../../interfaces';\nimport { $attrs, parseJsonProp } from '../../../utils/helper';\n\n@Component({\n  tag: 'go-nav-link',\n  styleUrl: 'go-nav-link.scss',\n  shadow: false,\n})\nexport class GoNavLink {\n  @Element() el: HTMLElement;\n\n  /**\n   * navigation item\n   */\n  @Prop() item?: INavItem | string;\n\n  @State() parsedItem: INavItem;\n\n  // developers can also chose to not pass in an item prop\n  // but use the following INavItem keys as props to construct the link\n\n  @Prop() label?: string;\n  @Prop() url?: string;\n  @Prop() icon?: IIcon | string;\n  @Prop() description?: string;\n  @Prop() isCurrent?: boolean;\n  @Prop() linkAttrs?: UnknownObject | string;\n\n  @Watch('item')\n  parseNavItem() {\n    if (this.item) {\n      this.parsedItem = parseJsonProp(this.item);\n    }\n\n    // component props will override item data if both are present\n    const icon = parseJsonProp(this.icon) ?? this.parsedItem?.icon;\n    const linkAttrs = parseJsonProp(this.linkAttrs) ?? this.parsedItem?.linkAttrs;\n    this.parsedItem = {\n      ...this.parsedItem,\n      label: this.label ?? this.parsedItem?.label,\n      url: this.url ?? this.parsedItem?.url,\n      icon,\n      description: this.description ?? this.parsedItem?.description,\n      isCurrent: this.isCurrent ?? this.parsedItem?.isCurrent,\n      linkAttrs,\n    };\n  }\n\n  /**\n   * show arrow at the end of the link\n   */\n  @Prop() showArrow?: boolean = false;\n\n  /**\n   * full width\n   */\n  @Prop({ reflect: true }) block = false;\n\n  @Event({\n    eventName: 'navigate',\n    cancelable: true,\n    bubbles: true,\n  })\n  navEvent: EventEmitter;\n\n  private inheritedAttrs = {};\n  componentWillLoad() {\n    this.inheritedAttrs = $attrs.bind(this)();\n    this.parseNavItem();\n  }\n\n  render() {\n    const { inheritedAttrs } = this;\n    if (!this.parsedItem) {\n      return (\n        <a {...inheritedAttrs}>\n          <slot></slot>\n        </a>\n      );\n    }\n    const { isCurrent, url, icon, label, description } = this.parsedItem;\n\n    const isSpan = isCurrent || !url;\n\n    let Tag = isSpan ? 'span' : 'go-link';\n    let attrs = {\n      ...this.parsedItem.linkAttrs,\n      ...inheritedAttrs,\n    };\n    attrs = !isSpan\n      ? {\n          href: url,\n          onClick: (event) => {\n            this.navEvent.emit({ event, item: this.item });\n          },\n          ...attrs,\n        }\n      : { ...attrs };\n    attrs['class'] = ` nav-item-link ${attrs['class'] ? attrs['class'] : ''}${isCurrent ? ' current' : ''}`;\n    return (\n      <Host>\n        <Tag {...attrs}>\n          {icon ? typeof icon === 'string' ? <go-icon name={icon}></go-icon> : <go-icon {...icon}></go-icon> : null}\n          <span class=\"nav-link-text\">\n            <span class=\"nav-link-text-label\">{label}</span>\n            {description ? <span class=\"nav-link-text-description\">{description}</span> : null}\n          </span>\n\n          {url && this.showArrow ? (\n            <svg\n              class=\"arrow\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              viewBox=\"0 0 24 24\"\n              focusable=\"false\"\n              aria-hidden=\"true\">\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n          ) : null}\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}