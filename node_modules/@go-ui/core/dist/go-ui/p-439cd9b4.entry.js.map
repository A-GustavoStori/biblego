{"version":3,"names":["goDialogCss","GoDialogStyle0","GoDialog","this","headingId","uniqueId","close","active","open","watchActiveHandler","isActive","handleOverlayClose","render","heading","persistent","headingTag","H","h","key","class","role","ref","el","overlayEl","onOverlayClose","id","name","flat","icon","stack","variant","onClick","xmlns","fill","stroke","viewBox","d"],"sources":["src/components/go-dialog/go-dialog.scss?tag=go-dialog","src/components/go-dialog/go-dialog.tsx"],"sourcesContent":["go-overlay.go-dialog {\n  --go-overlay-content-padding-y: 1.5rem;\n  --go-overlay-content-padding-x: 1.5rem;\n  --go-overlay-content-width: 80%;\n  --go-overlay-content-bg-color: var(--go-color-bg);\n  --go-overlay-content-max-width: 1140px;\n  --go-overlay-content-gap: 10vh;\n  --go-overlay-close-btn-text-color: currentColor;\n\n  display: grid;\n  place-items: center;\n\n  .overlay-content {\n    position: relative;\n    height: 100%;\n    width: 100%;\n    padding: var(--go-overlay-content-padding-y) var(--go-overlay-content-padding-x);\n    max-width: var(--go-overlay-content-max-width);\n    background: var(--go-overlay-content-bg-color);\n    @include tablet {\n      width: var(--go-overlay-content-width);\n      height: auto;\n      margin: var(--go-overlay-content-gap) auto;\n      border-radius: var(--radius-3);\n    }\n  }\n  .overlay-heading {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    .heading{\n      font-size: var(--go-size-3);\n      font-weight: 500;\n      line-height: 1.5;\n    }\n    .close-btn {\n      flex: 0;\n    }\n  }\n}\n","import { Component, h, Element, Prop, Method, Watch } from '@stencil/core';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-dialog',\n  styleUrl: 'go-dialog.scss',\n  shadow: false,\n})\nexport class GoDialog {\n  @Element() el: HTMLElement;\n  /**\n   * If this dialog is active\n   */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n   * If persistent, the overlay will not be closed when the user clicks outside of it or presses the escape key.\n   */\n  @Prop() persistent: boolean = false;\n  /**\n   * Heading of the overlay content\n   */\n  @Prop() heading?: string;\n\n  /**\n   * HTML tag for the heading\n   */\n  @Prop() headingTag?: string = 'h2';\n\n  // aria-labelledby https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html\n  headingId: string = uniqueId('overlay-label-');\n\n  overlayEl: HTMLElement;\n\n  @Method()\n  async close() {\n    this.active = false;\n  }\n\n  @Method()\n  async open() {\n    this.active = true;\n  }\n\n  @Watch('active')\n  watchActiveHandler(isActive: boolean): void {\n    if (isActive) {\n      this.open();\n      return;\n    }\n    this.close();\n  }\n\n  // keep active state in sync with overlay\n  handleOverlayClose() {\n    this.close();\n  }\n\n  render() {\n    const { active, heading, persistent, headingId, headingTag: H } = this;\n    return (\n      <go-overlay\n        class=\"go-dialog\"\n        persistent={persistent}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={headingId}\n        active={active}\n        aria-hidden={active ? 'false' : 'true'}\n        ref={(el) => (this.overlayEl = el)}\n        onOverlayClose={() => this.handleOverlayClose()}>\n        <div class=\"overlay-heading\" id={headingId}>\n          <slot name=\"heading\">\n            <H class=\"heading\">{heading}</H>\n          </slot>\n          {!persistent ? (\n            <go-button\n              class=\"close-btn\"\n              flat\n              icon\n              stack\n              variant=\"text\"\n              onClick={() => this.close()}\n              aria-label=\"Close dialog\">\n              <svg\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M18 6 6 18M6 6l12 12\" />\n              </svg>\n            </go-button>\n          ) : null}\n        </div>\n        <slot></slot>\n      </go-overlay>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAc,ygCACpB,MAAAC,EAAeD,E,MCOFE,EAAQ,M,yBAsBnBC,KAAAC,UAAoBC,EAAS,kB,YAjB6B,M,gBAK5B,M,uCASA,I,CAQ9B,WAAMC,GACJH,KAAKI,OAAS,K,CAIhB,UAAMC,GACJL,KAAKI,OAAS,I,CAIhB,kBAAAE,CAAmBC,GACjB,GAAIA,EAAU,CACZP,KAAKK,OACL,M,CAEFL,KAAKG,O,CAIP,kBAAAK,GACER,KAAKG,O,CAGP,MAAAM,GACE,MAAML,OAAEA,EAAMM,QAAEA,EAAOC,WAAEA,EAAUV,UAAEA,EAAWW,WAAYC,GAAMb,KAClE,OACEc,EAAA,cAAAC,IAAA,2CACEC,MAAM,YACNL,WAAYA,EACZM,KAAK,SAAQ,aACF,OAAM,kBACAhB,EACjBG,OAAQA,EAAM,cACDA,EAAS,QAAU,OAChCc,IAAMC,GAAQnB,KAAKoB,UAAYD,EAC/BE,eAAgB,IAAMrB,KAAKQ,sBAC3BM,EAAA,OAAAC,IAAA,2CAAKC,MAAM,kBAAkBM,GAAIrB,GAC/Ba,EAAA,QAAAC,IAAA,2CAAMQ,KAAK,WACTT,EAACD,EAAC,CAAAE,IAAA,2CAACC,MAAM,WAAWN,KAEpBC,EACAG,EAAA,aACEE,MAAM,YACNQ,KAAI,KACJC,KAAI,KACJC,MAAK,KACLC,QAAQ,OACRC,QAAS,IAAM5B,KAAKG,QAAO,aAChB,gBACXW,EAAA,qBACc,OACZe,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRlB,EAAA,QAAMmB,EAAE,2BAGV,MAENnB,EAAA,QAAAC,IAAA,6C"}