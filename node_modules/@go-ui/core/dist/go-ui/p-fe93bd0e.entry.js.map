{"version":3,"names":["goCardRowCss","GoCardRowStyle0","GoCardRow","this","cardClasses","componentWillLoad","hasHeadingSlot","hasSlot","el","stagger","inViewObserver","IntersectionObserver","entries","forEach","entry","i","isIntersecting","card","target","classList","add","style","cssText","unobserve","threshold","componentDidLoad","cols","colsTablet","colsDesktop","colsLarge","push","Math","ceil","loadCards","newCards","querySelectorAll","prepareCard","colClasses","wrapper","document","createElement","moveEl","rowEl","observe","render","noStretch","heading","moreLinkHref","moreLinkText","headingTag","headingRowProps","h","key","Object","assign","name","class","ref"],"sources":["src/patterns/go-card-row/go-card-row.scss?tag=go-card-row","src/patterns/go-card-row/go-card-row.tsx"],"sourcesContent":["go-card-row {\n  --card-row-gap: 1rem;\n\n  align-items: stretch;\n\n  --go-col-gap: var(--card-row-gap);\n  &.no-stretch {\n    align-items: flex-start;\n  }\n\n  go-card {\n    opacity: 0;\n    max-height: 200px;\n    &.loaded {\n      opacity: 1;\n      max-height: inherit;\n    }\n  }\n  .stagger {\n    go-card.loaded {\n      opacity: 0;\n    }\n  }\n\n  .card-col {\n    margin-bottom: var(--card-row-gap);\n  }\n}\n","import { Component, h, Element, Prop } from '@stencil/core';\nimport { moveEl } from '../../utils/dom';\nimport { hasSlot } from '../../utils/helper';\n\n/**\n * @slot default - Default slot, to be filled with `go-card` elements\n * @slot heading - Overwrite default `h2` heading for this card row section\n */\n@Component({\n  tag: 'go-card-row',\n  styleUrl: 'go-card-row.scss',\n  shadow: false,\n})\nexport class GoCardRow {\n  @Element() el: HTMLElement;\n\n  /**\n   * By default, `go-card-row` stretches all cards inside to the tallest card in view, unless this property is set to true.\n   */\n  @Prop() noStretch = false;\n\n  /**\n   * Number of columns from mobile breakpoint and up\n   */\n  @Prop() cols = 1;\n\n  /**\n   * Number of columns from tablet breakpoint and up\n   */\n  @Prop() colsTablet = 2;\n\n  /**\n   * Number of columns from desktop breakpoint and up\n   */\n  @Prop() colsDesktop = 3;\n\n  /**\n   * Number of columns from large breakpoint and up\n   */\n  @Prop() colsLarge = 4;\n\n  /**\n   * If set, cards will fade in one by one with the specified delay in milliseconds when they are in the viewport.\n   * uses `IntersectionObserver`, [see browser compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n   */\n  @Prop() stagger?: number;\n\n  /**\n   * If true, cards within the component will be wrapped inside a carousel\n   */\n  // @Prop() carousel = false;\n\n  /**\n   * Heading for this card row section\n   */\n  @Prop() heading?: string;\n\n  @Prop() headingTag?: string = 'h2';\n\n  /**\n   * View more link href\n   */\n  @Prop() moreLinkHref?: string;\n\n  /**\n   * View more link text\n   */\n  @Prop() moreLinkText?: string;\n\n  hasHeadingSlot: boolean;\n\n  /**\n   * the DOM ref of direct parent of the cards\n   */\n  rowEl: HTMLElement;\n\n  /**\n   * class list for each card\n   */\n  cardClasses = ['card-col'];\n\n  /**\n   * intersection observer to check if cards are in view\n   */\n  inViewObserver: IntersectionObserver;\n\n  componentWillLoad() {\n    // check if heading slot is used\n    this.hasHeadingSlot = hasSlot(this.el, 'heading');\n\n    // initialise intersection observer\n    if (this.stagger) {\n      this.inViewObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry, i) => {\n            if (!entry.isIntersecting) {\n              return;\n            }\n            const card = entry.target as HTMLElement;\n            // add stagger fade in effect\n            card.classList.add('stagger-fade-in');\n            card.style.cssText = `--stagger-delay: ${i * this.stagger}ms`;\n            // stop observing\n            this.inViewObserver.unobserve(card);\n          });\n        },\n        {\n          threshold: 0.2, // >= 1/5th of card is in view\n        },\n      );\n    }\n  }\n\n  async componentDidLoad() {\n    const { cols, colsTablet, colsDesktop, colsLarge } = this;\n\n    // mobile cols\n    this.cardClasses.push(`col-${Math.ceil(12 / cols)}`);\n    this.cardClasses.push(`col-tablet-${Math.ceil(12 / colsTablet)}`);\n    this.cardClasses.push(`col-desktop-${Math.ceil(12 / colsDesktop)}`);\n    this.cardClasses.push(`col-large-${Math.ceil(12 / colsLarge)}`);\n    this.loadCards();\n  }\n\n  loadCards() {\n    const newCards = this.el.querySelectorAll('go-card:not(.loaded)');\n    newCards.forEach((card: HTMLGoCardElement) => {\n      this.prepareCard(card, this.cardClasses);\n    });\n  }\n\n  prepareCard(card: HTMLGoCardElement, colClasses: string[]) {\n    // create wrapper container\n    const wrapper = document.createElement('div');\n    wrapper.classList.add(...colClasses);\n\n    // insert wrapper before el in the DOM tree\n    // card.parentNode.insertBefore(wrapper, card);\n\n    // move el into wrapper\n    moveEl(card, wrapper);\n\n    card.classList.add('loaded');\n    // move card into correct element\n    moveEl(wrapper, this.rowEl);\n\n    if (this.stagger) {\n      this.inViewObserver.observe(card);\n    }\n  }\n\n  render() {\n    const { noStretch, stagger, heading, moreLinkHref, moreLinkText, hasHeadingSlot, headingTag } = this;\n    const headingRowProps = {\n      heading,\n      moreLinkHref,\n      moreLinkText,\n      headingTag,\n    };\n    return (\n      <section>\n        <go-heading-row {...headingRowProps}>{hasHeadingSlot ? <slot name=\"heading\"></slot> : null}</go-heading-row>\n        <div\n          class={{\n            'card-row row': true,\n            'no-stretch': noStretch,\n            'stagger': !!stagger,\n          }}\n          ref={(el) => (this.rowEl = el)}>\n          <slot></slot>\n        </div>\n      </section>\n    );\n  }\n}\n"],"mappings":"0KAAA,MAAMA,EAAe,qVACrB,MAAAC,EAAeD,E,MCYFE,EAAS,M,yBAkEpBC,KAAAC,YAAc,CAAC,Y,eA5DK,M,UAKL,E,gBAKM,E,iBAKC,E,eAKF,E,8DAkBU,K,wDA6B9B,iBAAAC,GAEEF,KAAKG,eAAiBC,EAAQJ,KAAKK,GAAI,WAGvC,GAAIL,KAAKM,QAAS,CAChBN,KAAKO,eAAiB,IAAIC,sBACvBC,IACCA,EAAQC,SAAQ,CAACC,EAAOC,KACtB,IAAKD,EAAME,eAAgB,CACzB,M,CAEF,MAAMC,EAAOH,EAAMI,OAEnBD,EAAKE,UAAUC,IAAI,mBACnBH,EAAKI,MAAMC,QAAU,oBAAoBP,EAAIZ,KAAKM,YAElDN,KAAKO,eAAea,UAAUN,EAAK,GACnC,GAEJ,CACEO,UAAW,I,EAMnB,sBAAMC,GACJ,MAAMC,KAAEA,EAAIC,WAAEA,EAAUC,YAAEA,EAAWC,UAAEA,GAAc1B,KAGrDA,KAAKC,YAAY0B,KAAK,OAAOC,KAAKC,KAAK,GAAKN,MAC5CvB,KAAKC,YAAY0B,KAAK,cAAcC,KAAKC,KAAK,GAAKL,MACnDxB,KAAKC,YAAY0B,KAAK,eAAeC,KAAKC,KAAK,GAAKJ,MACpDzB,KAAKC,YAAY0B,KAAK,aAAaC,KAAKC,KAAK,GAAKH,MAClD1B,KAAK8B,W,CAGP,SAAAA,GACE,MAAMC,EAAW/B,KAAKK,GAAG2B,iBAAiB,wBAC1CD,EAASrB,SAASI,IAChBd,KAAKiC,YAAYnB,EAAMd,KAAKC,YAAY,G,CAI5C,WAAAgC,CAAYnB,EAAyBoB,GAEnC,MAAMC,EAAUC,SAASC,cAAc,OACvCF,EAAQnB,UAAUC,OAAOiB,GAMzBI,EAAOxB,EAAMqB,GAEbrB,EAAKE,UAAUC,IAAI,UAEnBqB,EAAOH,EAASnC,KAAKuC,OAErB,GAAIvC,KAAKM,QAAS,CAChBN,KAAKO,eAAeiC,QAAQ1B,E,EAIhC,MAAA2B,GACE,MAAMC,UAAEA,EAASpC,QAAEA,EAAOqC,QAAEA,EAAOC,aAAEA,EAAYC,aAAEA,EAAY1C,eAAEA,EAAc2C,WAAEA,GAAe9C,KAChG,MAAM+C,EAAkB,CACtBJ,UACAC,eACAC,eACAC,cAEF,OACEE,EAAA,WAAAC,IAAA,4CACED,EAAA,iBAAAE,OAAAC,OAAA,CAAAF,IAAA,4CAAoBF,GAAkB5C,EAAiB6C,EAAA,QAAMI,KAAK,YAAoB,MACtFJ,EAAA,OAAAC,IAAA,2CACEI,MAAO,CACL,eAAgB,KAChB,aAAcX,EACdpC,UAAaA,GAEfgD,IAAMjD,GAAQL,KAAKuC,MAAQlC,GAC3B2C,EAAA,QAAAC,IAAA,8C"}