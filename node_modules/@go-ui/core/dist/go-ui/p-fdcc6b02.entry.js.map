{"version":3,"names":["goNavDrawerCss","GoNavDrawerStyle0","GoNavDrawer","this","inheritedAttrs","subMenus","init","newItems","navItems","parseJsonProp","open","active","openEvent","emit","close","currentSubMenus","length","closeCurrentSubMenu","closeEvent","toggle","componentWillLoad","inheritAttributes","el","items","e","console","warn","lastSubMenu","slice","classList","remove","querySelector","setAttribute","openSubMenu","triggerBtn","target","menuItem","closest","add","trapFocus","handleNavItemClick","item","_a","linkAttrs","onClick","autoClose","navItemClickEvent","renderNavItems","parentItem","isSubNav","h","class","flat","stack","variant","compact","slot","xmlns","fill","stroke","viewBox","d","label","url","Object","assign","href","renderIcon","icon","map","renderNavItem","Tag","hasChildren","children","isCurrent","attrs","type","current","render","position","key","onOverlayClose"],"sources":["src/components/navigation/go-nav-drawer/go-nav-drawer.scss?tag=go-nav-drawer","src/components/navigation/go-nav-drawer/go-nav-drawer.tsx"],"sourcesContent":[".nav-drawer {\n  --drawer-bg-color: var(--go-color-lightest);\n  --drawer-max-width: 24rem;\n  --nav-item-text-color: var(--go-color-darkest);\n  --nav-item-bg-color: var(--go-color-lightest);\n  --nav-item-hover-bg-color: var(--go-color-neutral-200);\n  --nav-item-padding: var(--go-size--1) var(--go-size-0);\n  --nav-header-padding: var(--go-size--1) var(--go-size-0);\n  --nav-header-border-color: var(--go-color-neutral-200);\n  --nav-item-icon-gap: var(--go-size-0);\n  --nav-item-current-bar-width: 4px;\n  --nav-item-current-bar-color: var(--go-color-primary-500);\n  --submenu-parent-link-border-bottom: 1px solid var(--go-color-neutral-200);\n\n  display: block;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: var(--layer-important);\n  background: var(--drawer-bg-color);\n  transform: translateX(-100%);\n  @include transition(transform);\n  @include reduced-motion {\n    transition-duration: 0s;\n  }\n\n  @include tablet {\n    width: var(--drawer-max-width);\n  }\n\n  &.right {\n    left: auto;\n    right: 0;\n    transform: translateX(100%);\n  }\n  &.open {\n    transform: translateX(0);\n  }\n\n  .nav-container {\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n  }\n\n  .nav-menu {\n    @include transition(transform, visibility);\n    @include reduced-motion {\n      transition-duration: 0s;\n    }\n\n    visibility: visible;\n    transform: translateX(0);\n    padding: 0;\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 1;\n    background: var(--drawer-bg-color);\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    .nav-drawer-header {\n      .header-row {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: var(--nav-header-padding);\n        .back-btn {\n          margin-right: auto;\n        }\n        .close-btn {\n          margin-left: auto;\n          flex: 0 0 auto;\n        }\n        .title {\n          font-weight: bold;\n          font-size: var(--go-size-0);\n          flex: 1;\n        }\n      }\n    }\n\n    &.is-sub-nav {\n      .nav-drawer-header {\n        .title {\n          margin-left: 1rem;\n        }\n      }\n    }\n\n    nav {\n      border-top: 2px solid var(--nav-header-border-color);\n      height: 100%;\n      padding: 1rem 0;\n      flex: 1;\n      overflow: auto;\n    }\n\n    .nav-menu {\n      box-shadow: var(--shadow-4);\n      visibility: hidden;\n      transform: translateX(100%);\n    }\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .nav-item-inner {\n    @include reset-btn;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    padding: var(--nav-item-padding);\n    color: var(--nav-item-text-color);\n    text-decoration: none;\n    background: var(--nav-item-bg-color);\n    border-left: var(--nav-item-current-bar-width) solid transparent;\n    &:hover,\n    &:focus {\n      background: var(--nav-item-hover-bg-color);\n    }\n  }\n\n  .nav-item-label {\n    display: flex;\n    align-items: center;\n    gap: var(--nav-item-icon-gap);\n  }\n\n  .children-indicator {\n    width: 1.5em;\n    height: 1.5em;\n  }\n\n  // mobile menu item\n  li {\n    padding: 0;\n    line-height: 1.5;\n\n    &.active {\n      > .nav-menu {\n        visibility: visible;\n        transform: translateX(0);\n        z-index: 2;\n      }\n    }\n\n    &.current {\n      > .nav-item-inner {\n        border-left-color: var(--nav-item-current-bar-color);\n      }\n    }\n  }\n\n  .parent-link {\n    border-bottom: var(--submenu-parent-link-border-bottom);\n    a {\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      width: 100%;\n      padding: var(--nav-item-padding);\n      color: var(--nav-item-text-color);\n      text-decoration: none;\n      background: var(--nav-item-bg-color);\n      font-weight: bold;\n      border-left: var(--nav-item-current-bar-width) solid transparent;\n      svg {\n        @include transition(transform);\n\n        margin-left: 0.5rem;\n        width: 1.25em;\n        height: 1.25em;\n        transform: translateX(0);\n      }\n      &:hover,\n      &:focus {\n        background: var(--nav-item-hover-bg-color);\n        svg {\n          transform: translateX(5px);\n        }\n      }\n    }\n  }\n}\n","import { Component, h, Element, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\n\nimport { INavItem } from '../../../interfaces';\nimport { inheritAttributes, trapFocus, parseJsonProp } from '../../../utils';\nimport { renderIcon } from '../nav-helpers';\n\n@Component({\n  tag: 'go-nav-drawer',\n  styleUrl: 'go-nav-drawer.scss',\n  shadow: false,\n})\nexport class GoNavDrawer {\n  @Element() el: HTMLElement;\n\n  /**\n   * Position where the navigation should appear from\n   */\n  @Prop({ reflect: true }) position?: 'left' | 'right' = 'left';\n\n  /**\n   * Navigation items to be rendered\n   */\n  @Prop() items?: INavItem[] | string;\n\n  @State() navItems: INavItem[] = null;\n\n  /**\n   * keep track of open state of drawer\n   */\n  @Prop({ mutable: true, reflect: true }) active = false;\n\n  /**\n   * label for screen readers\n   */\n  @Prop() label = 'Drawer';\n\n  /**\n   * if true, clicking on nav item will close the drawer automatically\n   */\n  @Prop() autoClose = false;\n\n  // keep track of open submenus\n  @State() currentSubMenus: HTMLElement[] = [];\n\n  /**\n   * Initialise the menu\n   * @param items {INavItem[]} menu items to be rendered\n   */\n  @Method()\n  @Watch('items')\n  async init(newItems: INavItem[] | string) {\n    this.navItems = parseJsonProp(newItems);\n  }\n\n  /**\n   * Emitted when the nav drawer is opened\n   */\n  @Event({\n    eventName: 'open',\n    cancelable: true,\n    bubbles: true,\n  })\n  openEvent: EventEmitter<void>;\n\n  @Method()\n  async open() {\n    this.active = true;\n    this.openEvent.emit();\n  }\n\n  /**\n   * Emitted when the nav drawer is closed\n   */\n  @Event({\n    eventName: 'close',\n    cancelable: true,\n    bubbles: true,\n  })\n  closeEvent: EventEmitter<void>;\n\n  /**\n   * Emitted when the nav item is clicked\n   */\n  @Event({\n    eventName: 'navItemClick',\n    cancelable: true,\n    bubbles: true,\n  })\n  navItemClickEvent: EventEmitter<INavItem>;\n\n  @Method()\n  async close() {\n    while (this.currentSubMenus.length > 0) {\n      await this.closeCurrentSubMenu();\n    }\n    this.active = false;\n    this.closeEvent.emit();\n  }\n\n  @Method()\n  async toggle() {\n    if (this.active) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  // Store attributes inherited from the host element\n  private inheritedAttrs = {};\n  componentWillLoad() {\n    this.inheritedAttrs = inheritAttributes(this.el, ['class', 'style', 'items', 'active', 'position'], false);\n    try {\n      this.navItems = parseJsonProp(this.items);\n    } catch (e) {\n      console.warn('Could not parse nav items.', e);\n    }\n  }\n\n  async closeCurrentSubMenu() {\n    if (this.currentSubMenus.length === 0) {\n      return;\n    }\n    const lastSubMenu = this.currentSubMenus.slice(-1)[0];\n    lastSubMenu.classList.remove('active');\n    lastSubMenu.querySelector('.nav-item-inner').setAttribute('aria-expanded', 'false');\n    this.currentSubMenus = this.currentSubMenus.slice(0, -1);\n  }\n\n  private openSubMenu(e: MouseEvent) {\n    const triggerBtn = e.target as HTMLElement;\n    const menuItem = triggerBtn.closest('li');\n    menuItem.classList.add('active');\n    triggerBtn.setAttribute('aria-expanded', 'true');\n    trapFocus(menuItem.querySelector('.nav-menu') as HTMLElement);\n    this.currentSubMenus = [...this.currentSubMenus, menuItem];\n  }\n\n  subMenus: { string: INavItem[] } = null;\n\n  handleNavItemClick(e, item: INavItem) {\n    if (item.linkAttrs?.onClick) {\n      (item.linkAttrs.onClick as EventListener)(e);\n    }\n    if (this.autoClose) {\n      this.close();\n    }\n    this.navItemClickEvent.emit(item);\n  }\n\n  renderNavItems(items: INavItem[], parentItem?: INavItem) {\n    const isSubNav = !!parentItem;\n\n    return (\n      <div class={{ 'nav-menu': true, 'is-sub-nav': isSubNav }}>\n        <div class=\"nav-drawer-header\">\n          <div class=\"header-row\">\n            {parentItem ? (\n              <go-button class=\"back-btn\" flat stack variant=\"text\" compact onClick={() => this.closeCurrentSubMenu()}>\n                <svg\n                  slot=\"prefix\"\n                  aria-hidden=\"true\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M19 12H5M12 19l-7-7 7-7\" />\n                </svg>\n                <span>Back</span>\n              </go-button>\n            ) : (\n              <span></span>\n            )}\n\n            {/* <div class=\"title\">{isSubNav ? parentItem.label : this.label}</div> */}\n            {!isSubNav && <div class=\"title\">{this.label}</div>}\n            <go-button class=\"close-btn\" flat stack variant=\"text\" compact onClick={() => this.close()}>\n              <svg\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M18 6 6 18M6 6l12 12\" />\n              </svg>\n              <span>Close</span>\n            </go-button>\n          </div>\n        </div>\n        {items?.length > 0 ? (\n          <nav aria-label={isSubNav ? parentItem.label : this.label}>\n            {isSubNav && parentItem.url ? (\n              <div class=\"parent-link\">\n                <go-link\n                  href={parentItem.url}\n                  {...parentItem.linkAttrs}\n                  onClick={(e) => this.handleNavItemClick(e, parentItem)}>\n                  <span class=\"nav-item-label\">\n                    {renderIcon(parentItem.icon)}\n                    <span>{parentItem.label}</span>\n                  </span>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    viewBox=\"0 0 24 24\">\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </go-link>\n              </div>\n            ) : null}\n            <ul>{items.map((item) => this.renderNavItem(item))}</ul>\n          </nav>\n        ) : null}\n      </div>\n    );\n  }\n\n  renderNavItem(item: INavItem) {\n    let Tag = 'a';\n    const hasChildren = item?.children?.length > 0;\n    if (item.isCurrent) {\n      Tag = 'span';\n    }\n    if (hasChildren) {\n      Tag = 'button';\n    }\n\n    let attrs = null;\n\n    if (Tag === 'a') {\n      attrs = {\n        href: item.url,\n        ...item.linkAttrs,\n        onClick: (e) => this.handleNavItemClick(e, item),\n      };\n    }\n    if (Tag === 'button') {\n      attrs = {\n        'type': 'button',\n        'aria-haspopup': 'true',\n        'aria-expanded': 'false',\n        'onClick': (e) => this.openSubMenu(e),\n      };\n    }\n    return (\n      <li class={{ 'nav-item': true, 'has-children': hasChildren, 'current': item.isCurrent }}>\n        <Tag class=\"nav-item-inner\" {...attrs}>\n          <span class=\"nav-item-label\">\n            {renderIcon(item.icon)}\n            <span>{item.label}</span>\n          </span>\n          {hasChildren ? (\n            <svg\n              class=\"children-indicator\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              viewBox=\"0 0 24 24\">\n              <path d=\"m9 18 6-6-6-6\" />\n            </svg>\n          ) : null}\n        </Tag>\n        {item.children ? this.renderNavItems(item.children, item) : null}\n      </li>\n    );\n  }\n\n  render() {\n    let { navItems, active, position, inheritedAttrs } = this;\n    return (\n      <go-overlay active={active} {...inheritedAttrs} onOverlayClose={() => this.close()}>\n        <div class={{ 'nav-drawer': true, 'open': active, [position]: !!position }}>\n          {navItems ? <div class=\"nav-container\">{this.renderNavItems(navItems)}</div> : <slot></slot>}\n        </div>\n      </go-overlay>\n    );\n  }\n}\n"],"mappings":"kNAAA,MAAMA,EAAiB,qpIACvB,MAAAC,EAAeD,E,MCUFE,EAAW,M,2IAkGdC,KAAAC,eAAiB,GA6BzBD,KAAAE,SAAmC,K,cAzHoB,O,mCAOvB,K,YAKiB,M,WAKjC,S,eAKI,M,qBAGsB,E,CAQ1C,UAAMC,CAAKC,GACTJ,KAAKK,SAAWC,EAAcF,E,CAchC,UAAMG,GACJP,KAAKQ,OAAS,KACdR,KAAKS,UAAUC,M,CAwBjB,WAAMC,GACJ,MAAOX,KAAKY,gBAAgBC,OAAS,EAAG,OAChCb,KAAKc,qB,CAEbd,KAAKQ,OAAS,MACdR,KAAKe,WAAWL,M,CAIlB,YAAMM,GACJ,GAAIhB,KAAKQ,OAAQ,CACfR,KAAKW,O,KACA,CACLX,KAAKO,M,EAMT,iBAAAU,GACEjB,KAAKC,eAAiBiB,EAAkBlB,KAAKmB,GAAI,CAAC,QAAS,QAAS,QAAS,SAAU,YAAa,OACpG,IACEnB,KAAKK,SAAWC,EAAcN,KAAKoB,M,CACnC,MAAOC,GACPC,QAAQC,KAAK,6BAA8BF,E,EAI/C,yBAAMP,GACJ,GAAId,KAAKY,gBAAgBC,SAAW,EAAG,CACrC,M,CAEF,MAAMW,EAAcxB,KAAKY,gBAAgBa,OAAO,GAAG,GACnDD,EAAYE,UAAUC,OAAO,UAC7BH,EAAYI,cAAc,mBAAmBC,aAAa,gBAAiB,SAC3E7B,KAAKY,gBAAkBZ,KAAKY,gBAAgBa,MAAM,GAAI,E,CAGhD,WAAAK,CAAYT,GAClB,MAAMU,EAAaV,EAAEW,OACrB,MAAMC,EAAWF,EAAWG,QAAQ,MACpCD,EAASP,UAAUS,IAAI,UACvBJ,EAAWF,aAAa,gBAAiB,QACzCO,EAAUH,EAASL,cAAc,cACjC5B,KAAKY,gBAAkB,IAAIZ,KAAKY,gBAAiBqB,E,CAKnD,kBAAAI,CAAmBhB,EAAGiB,G,MACpB,IAAIC,EAAAD,EAAKE,aAAS,MAAAD,SAAA,SAAAA,EAAEE,QAAS,CAC1BH,EAAKE,UAAUC,QAA0BpB,E,CAE5C,GAAIrB,KAAK0C,UAAW,CAClB1C,KAAKW,O,CAEPX,KAAK2C,kBAAkBjC,KAAK4B,E,CAG9B,cAAAM,CAAexB,EAAmByB,GAChC,MAAMC,IAAaD,EAEnB,OACEE,EAAA,OAAKC,MAAO,CAAE,WAAY,KAAM,aAAcF,IAC5CC,EAAA,OAAKC,MAAM,qBACTD,EAAA,OAAKC,MAAM,cACRH,EACCE,EAAA,aAAWC,MAAM,WAAWC,KAAI,KAACC,MAAK,KAACC,QAAQ,OAAOC,QAAO,KAACX,QAAS,IAAMzC,KAAKc,uBAChFiC,EAAA,OACEM,KAAK,SAAQ,cACD,OACZC,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRV,EAAA,QAAMW,EAAE,6BAEVX,EAAA,qBAGFA,EAAA,cAIAD,GAAYC,EAAA,OAAKC,MAAM,SAAShD,KAAK2D,OACvCZ,EAAA,aAAWC,MAAM,YAAYC,KAAI,KAACC,MAAK,KAACC,QAAQ,OAAOC,QAAO,KAACX,QAAS,IAAMzC,KAAKW,SACjFoC,EAAA,qBACc,OACZO,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRV,EAAA,QAAMW,EAAE,0BAEVX,EAAA,yBAIL3B,IAAK,MAALA,SAAK,SAALA,EAAOP,QAAS,EACfkC,EAAA,oBAAiBD,EAAWD,EAAWc,MAAQ3D,KAAK2D,OACjDb,GAAYD,EAAWe,IACtBb,EAAA,OAAKC,MAAM,eACTD,EAAA,UAAAc,OAAAC,OAAA,CACEC,KAAMlB,EAAWe,KACbf,EAAWL,UAAS,CACxBC,QAAUpB,GAAMrB,KAAKqC,mBAAmBhB,EAAGwB,KAC3CE,EAAA,QAAMC,MAAM,kBACTgB,EAAWnB,EAAWoB,MACvBlB,EAAA,YAAOF,EAAWc,QAEpBZ,EAAA,OACEO,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRV,EAAA,QAAMW,EAAE,6BAIZ,KACJX,EAAA,UAAK3B,EAAM8C,KAAK5B,GAAStC,KAAKmE,cAAc7B,OAE5C,K,CAKV,aAAA6B,CAAc7B,G,MACZ,IAAI8B,EAAM,IACV,MAAMC,IAAc9B,EAAAD,IAAI,MAAJA,SAAI,SAAJA,EAAMgC,YAAQ,MAAA/B,SAAA,SAAAA,EAAE1B,QAAS,EAC7C,GAAIyB,EAAKiC,UAAW,CAClBH,EAAM,M,CAER,GAAIC,EAAa,CACfD,EAAM,Q,CAGR,IAAII,EAAQ,KAEZ,GAAIJ,IAAQ,IAAK,CACfI,EAAKX,OAAAC,OAAAD,OAAAC,OAAA,CACHC,KAAMzB,EAAKsB,KACRtB,EAAKE,WAAS,CACjBC,QAAUpB,GAAMrB,KAAKqC,mBAAmBhB,EAAGiB,I,CAG/C,GAAI8B,IAAQ,SAAU,CACpBI,EAAQ,CACNC,KAAQ,SACR,gBAAiB,OACjB,gBAAiB,QACjBhC,QAAYpB,GAAMrB,KAAK8B,YAAYT,G,CAGvC,OACE0B,EAAA,MAAIC,MAAO,CAAE,WAAY,KAAM,eAAgBqB,EAAaK,QAAWpC,EAAKiC,YAC1ExB,EAACqB,EAAGP,OAAAC,OAAA,CAACd,MAAM,kBAAqBwB,GAC9BzB,EAAA,QAAMC,MAAM,kBACTgB,EAAW1B,EAAK2B,MACjBlB,EAAA,YAAOT,EAAKqB,QAEbU,EACCtB,EAAA,OACEC,MAAM,qBACNO,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRV,EAAA,QAAMW,EAAE,mBAER,MAELpB,EAAKgC,SAAWtE,KAAK4C,eAAeN,EAAKgC,SAAUhC,GAAQ,K,CAKlE,MAAAqC,GACE,IAAItE,SAAEA,EAAQG,OAAEA,EAAMoE,SAAEA,EAAQ3E,eAAEA,GAAmBD,KACrD,OACE+C,EAAA,aAAAc,OAAAC,OAAA,CAAAe,IAAA,2CAAYrE,OAAQA,GAAYP,EAAc,CAAE6E,eAAgB,IAAM9E,KAAKW,UACzEoC,EAAA,OAAA8B,IAAA,2CAAK7B,MAAO,CAAE,aAAc,KAAMzC,KAAQC,EAAQoE,CAACA,KAAaA,IAC7DvE,EAAW0C,EAAA,OAAKC,MAAM,iBAAiBhD,KAAK4C,eAAevC,IAAmB0C,EAAA,c"}