{"version":3,"names":["goTabsCss","GoTabsStyle0","GoTabs","this","activeIndex","tabs","panels","componentWillLoad","initialiseTabChildren","initIconSlot","goTab","slotName","iconEl","querySelector","iconSlot","document","createElement","setAttribute","classList","add","removeAttribute","moveEl","children","Array","from","el","querySelectorAll","length","tabChildren","map","tabId","tId","uniqueId","panelId","pId","iconActiveSlot","label","active","iconPosition","iconOnly","findIndex","tab","i","Object","assign","activateTab","event","index","tabEl","detail","forEach","panel","setActive","tabActivated","emit","panelEl","_a","render","tabGroupLabel","vertical","auto","fill","justify","h","Host","key","class","items","onActivated","e"],"sources":["src/components/go-tabs/go-tabs.scss?tag=go-tabs","src/components/go-tabs/go-tabs.tsx"],"sourcesContent":["go-tabs {\n  --tab-padding: 0.75rem 1.25rem;\n  --tab-bg-color: transparent;\n  --tab-hover-bg-color: var(--go-color-neutral-200);\n  --tab-text-color: var(--go-color-neutral-700);\n  --tab-focus-color: var(--go-color-primary-600);\n  --tab-active-color: var(--go-color-primary-800);\n  --tab-active-bg-color: transparent;\n  --tab-border-width: 0.2em;\n  --tab-active-indicator-color: var(--tab-active-color);\n  --tabs-active-indicator-width: 0;\n  --tabs-active-indicator-height: 0.2em;\n  --tabs-active-indicator-color: var(--tab-active-color);\n  --tabs-vertical-tablist-max-width: 25%;\n  --tabs-tablist-gap: 1rem;\n\n  &.vertical {\n    display: grid;\n    grid-template-columns: minmax(min-content, var(--tabs-vertical-tablist-max-width)) 1fr;\n    gap: var(--tabs-tablist-gap);\n    [role='tablist'] {\n      .tabs-active-indicator-track {\n        width: auto;\n        top: 0;\n        left: auto;\n        .tabs-active-indicator {\n          --tabs-active-indicator-width: 4px;\n          transform: translateY(var(--tabs-active-indicator-top));\n        }\n      }\n    }\n    [role='tab'] {\n      text-align: start;\n      white-space: normal;\n      &:focus-visible {\n        border-top-color: transparent;\n        border-left-color: var(--tab-focus-color);\n      }\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { uniqueId } from 'lodash-es';\nimport { ActiveTabWithPanel, JustifyOption, TabItem } from './tabs.type';\nimport { moveEl } from '@/utils';\n\n@Component({\n  tag: 'go-tabs',\n  styleUrl: 'go-tabs.scss',\n  shadow: false,\n})\nexport class GoTabs {\n  @Element() el: HTMLElement;\n\n  /**\n   * Provides a label that describes the purpose of the set of tabs.\n   */\n  @Prop() tabGroupLabel?: string;\n\n  /**\n   * Set tabs orientation to vertical\n   */\n  @Prop() vertical?: boolean = false;\n\n  /**\n   * By default, tabs require user interaction (by clicking or pressing the `Enter` or `Space` key) to be activated.\n   * if `auto` is true, tabs are automatically activated when they receive focus.\n   */\n  @Prop() auto?: boolean = false;\n\n  /**\n   * Applies justify-content property to tablist (horizontal only)\n   * ie. `justify=\"between\"` applies `justify-content: space-between`\n   */\n  @Prop() justify?: JustifyOption = 'normal';\n\n  /**\n   * fill available space (horizontal only)\n   */\n  @Prop() fill?: boolean = false;\n\n  /**\n   * Tab activated event\n   * @param ActivatedTab {index, tabEl, panelEl}\n   */\n  @Event({\n    eventName: 'tabactivated',\n  })\n  tabActivated: EventEmitter<ActiveTabWithPanel>;\n\n  @State() tabChildren: TabItem[] = [];\n\n  @State() activeTabRect: DOMRect;\n\n  activeIndex = -1;\n  tabs: HTMLElement[] = [];\n  panels: HTMLGoTabElement[] = [];\n  tablistEl: HTMLElement;\n\n  componentWillLoad() {\n    this.initialiseTabChildren();\n  }\n\n  initIconSlot(goTab, slotName) {\n    const iconEl = goTab.querySelector(`[slot=\"${slotName}\"]`);\n    if (!iconEl) {\n      return;\n    }\n    let iconSlot = null;\n    iconSlot = document.createElement('span');\n    iconSlot.setAttribute('aria-hidden', 'true'); // icons are decorative only\n    iconSlot.classList.add(`go-tab-${slotName}`);\n    iconEl.removeAttribute('slot');\n    moveEl(iconEl, iconSlot);\n    return iconSlot;\n  }\n\n  initialiseTabChildren() {\n    const children = Array.from(this.el.querySelectorAll('go-tab')) as HTMLGoTabElement[];\n    if (children.length === 0) {\n      return;\n    }\n\n    this.tabChildren = children.map((goTab) => {\n      if (!goTab.tabId) {\n        const tId = uniqueId('tab-');\n        goTab.tabId = tId;\n      }\n      if (!goTab.panelId) {\n        const pId = goTab.tabId + '-panel';\n        goTab.panelId = pId;\n      }\n      const iconSlot = this.initIconSlot(goTab, 'icon');\n      const iconActiveSlot = this.initIconSlot(goTab, 'icon-active');\n\n      const { tabId, panelId, label, active, iconPosition, iconOnly } = goTab;\n      return {\n        tabId,\n        panelId,\n        label,\n        active,\n        iconPosition,\n        iconOnly,\n        iconSlot,\n        iconActiveSlot,\n      };\n    });\n    this.panels = children;\n    // if no active tab set, activate first tab\n    const activeIndex = this.tabChildren.findIndex((tab) => tab.active);\n    if (activeIndex === -1) {\n      this.tabChildren = this.tabChildren.map((tab, i) => ({ ...tab, active: i === 0 }));\n      this.panels[0].active = true;\n    }\n  }\n\n  activateTab(event) {\n    const { index, tabEl } = event.detail;\n\n    this.panels.forEach((panel, i) => {\n      if (i === index) {\n        panel.setActive(true);\n      } else {\n        panel.setActive(false);\n      }\n    });\n\n    this.tabActivated.emit({\n      index,\n      tabEl,\n      panelEl: this.panels[index] ?? null,\n    });\n  }\n\n  render() {\n    const { tabChildren, tabGroupLabel, vertical, auto, fill, justify } = this;\n\n    return (\n      <Host class={{ vertical }}>\n        <go-tablist\n          items={tabChildren}\n          label={tabGroupLabel}\n          auto={auto}\n          fill={fill}\n          vertical={vertical}\n          justify={justify}\n          onActivated={(e) => this.activateTab(e)}></go-tablist>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gKAAA,MAAMA,EAAY,+sCAClB,MAAAC,EAAeD,E,MCSFE,EAAM,M,oEA2CjBC,KAAAC,aAAe,EACfD,KAAAE,KAAsB,GACtBF,KAAAG,OAA6B,G,2CAlCA,M,UAMJ,M,aAMS,S,UAKT,M,iBAWS,G,6BASlC,iBAAAC,GACEJ,KAAKK,uB,CAGP,YAAAC,CAAaC,EAAOC,GAClB,MAAMC,EAASF,EAAMG,cAAc,UAAUF,OAC7C,IAAKC,EAAQ,CACX,M,CAEF,IAAIE,EAAW,KACfA,EAAWC,SAASC,cAAc,QAClCF,EAASG,aAAa,cAAe,QACrCH,EAASI,UAAUC,IAAI,UAAUR,KACjCC,EAAOQ,gBAAgB,QACvBC,EAAOT,EAAQE,GACf,OAAOA,C,CAGT,qBAAAN,GACE,MAAMc,EAAWC,MAAMC,KAAKrB,KAAKsB,GAAGC,iBAAiB,WACrD,GAAIJ,EAASK,SAAW,EAAG,CACzB,M,CAGFxB,KAAKyB,YAAcN,EAASO,KAAKnB,IAC/B,IAAKA,EAAMoB,MAAO,CAChB,MAAMC,EAAMC,EAAS,QACrBtB,EAAMoB,MAAQC,C,CAEhB,IAAKrB,EAAMuB,QAAS,CAClB,MAAMC,EAAMxB,EAAMoB,MAAQ,SAC1BpB,EAAMuB,QAAUC,C,CAElB,MAAMpB,EAAWX,KAAKM,aAAaC,EAAO,QAC1C,MAAMyB,EAAiBhC,KAAKM,aAAaC,EAAO,eAEhD,MAAMoB,MAAEA,EAAKG,QAAEA,EAAOG,MAAEA,EAAKC,OAAEA,EAAMC,aAAEA,EAAYC,SAAEA,GAAa7B,EAClE,MAAO,CACLoB,QACAG,UACAG,QACAC,SACAC,eACAC,WACAzB,WACAqB,iBACD,IAEHhC,KAAKG,OAASgB,EAEd,MAAMlB,EAAcD,KAAKyB,YAAYY,WAAWC,GAAQA,EAAIJ,SAC5D,GAAIjC,KAAiB,EAAG,CACtBD,KAAKyB,YAAczB,KAAKyB,YAAYC,KAAI,CAACY,EAAKC,IAACC,OAAAC,OAAAD,OAAAC,OAAA,GAAWH,GAAG,CAAEJ,OAAQK,IAAM,MAC7EvC,KAAKG,OAAO,GAAG+B,OAAS,I,EAI5B,WAAAQ,CAAYC,G,MACV,MAAMC,MAAEA,EAAKC,MAAEA,GAAUF,EAAMG,OAE/B9C,KAAKG,OAAO4C,SAAQ,CAACC,EAAOT,KAC1B,GAAIA,IAAMK,EAAO,CACfI,EAAMC,UAAU,K,KACX,CACLD,EAAMC,UAAU,M,KAIpBjD,KAAKkD,aAAaC,KAAK,CACrBP,QACAC,QACAO,SAASC,EAAArD,KAAKG,OAAOyC,MAAM,MAAAS,SAAA,EAAAA,EAAI,M,CAInC,MAAAC,GACE,MAAM7B,YAAEA,EAAW8B,cAAEA,EAAaC,SAAEA,EAAQC,KAAEA,EAAIC,KAAEA,EAAIC,QAAEA,GAAY3D,KAEtE,OACE4D,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAO,CAAEP,aACbI,EAAA,cAAAE,IAAA,2CACEE,MAAOvC,EACPQ,MAAOsB,EACPE,KAAMA,EACNC,KAAMA,EACNF,SAAUA,EACVG,QAASA,EACTM,YAAcC,GAAMlE,KAAK0C,YAAYwB,KACvCN,EAAA,QAAAE,IAAA,6C"}