{"version":3,"names":["goCheckboxCss","GoCheckboxStyle0","GoCheckbox","updateErrorState","this","hasError","error","handleChange","e","checked","target","componentWillLoad","hasHintSlot","hasSlot","el","initIdProps","render","label","controlId","hint","hintId","indeterminate","name","disabled","value","errorId","describedByIds","push","props","id","h","Host","key","class","Object","assign","type","String","join","onChange","xmlns","fill","stroke","viewBox","d","htmlFor"],"sources":["src/components/form/go-checkbox/go-checkbox.scss?tag=go-checkbox","src/components/form/go-checkbox/go-checkbox.tsx"],"sourcesContent":["@import '../../../global/scss/form/mixins';\n\ngo-checkbox {\n  /**\n    @prop --cb-border-color:\n      Default border color\n      - default: var(--input-border-color)\n  */\n  --cb-border-color: var(--input-border-color);\n\n  /**\n    @prop --cb-border-width:\n      Default border width\n      - default: 2px\n  */\n  --cb-border-width: 2px;\n\n  /**\n    @prop --cb-border:\n      Checkbox default border\n      - default: var(--cb-border-width) solid var(--cb-border-color)\n  */\n  --cb-border: var(--cb-border-width) solid var(--cb-border-color);\n\n  /**\n    @prop --cb-border-color-hover:\n      Checkbox hover state color\n      - default: var(--go-color-neutral-700)\n  */\n  --cb-border-color-hover: var(--go-color-neutral-700);\n\n  /**\n    @prop --cb-size:\n      Size of checkbox\n      - default: 1.5rem\n  */\n  --cb-size: 1.5rem;\n\n  /**\n    @prop --cb-radius:\n      Checkbox border radius\n      - default: var(--input-radius)\n  */\n  --cb-radius: var(--input-radius);\n\n  /**\n    @prop --cb-checked-bg:\n      Checkbox background color when checked\n      - default: var(--control-selected-bg-color)\n  */\n  --cb-checked-bg: var(--control-selected-bg-color);\n  /**\n    @prop --cb-checked-text:\n      Foreground color of checked checkbox\n      - default: var(--control-selected-fg-color)\n  */\n  --cb-checked-text: var(--control-selected-fg-color);\n\n  /**:\n    drop shadow for selected mark\n    - default: 1px 1px 2px rgba(0, 0, 0, 0.4)\n*/\n  --cb-mark-shadow-inner: 1px 1px 2px rgba(0, 0, 0, 0.4);\n  .control-wrapper {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--input-gap-inner);\n  }\n  input,\n  label {\n    cursor: pointer;\n  }\n  &[error] {\n    @include error-state;\n    --cb-border-color: var(--input-error-color);\n    input {\n      &:checked {\n        ~ .mark {\n          --cb-checked-bg: var(--input-error-color);\n        }\n      }\n    }\n    .error-msg {\n      margin: var(--input-gap-inner) 0;\n    }\n  }\n  &[disabled] {\n    input,\n    label {\n      cursor: not-allowed;\n    }\n    .box {\n      .mark {\n        background: var(--input-bg-disabled-color);\n        stroke: var(--input-text-disabled-color);\n        border-color: var(--input-text-disabled-color);\n      }\n    }\n  }\n  label {\n    @include typography(body);\n    line-height: var(--cb-size);\n    & ~ .hint {\n      margin-top: 4px;\n    }\n  }\n  :where(.box) {\n    flex-shrink: 0;\n    flex-grow: 0;\n    position: relative;\n    width: var(--cb-size);\n    height: var(--cb-size);\n\n    .mark {\n      display: block;\n      stroke: var(--cb-checked-text);\n      border: var(--cb-border);\n      border-radius: var(--cb-radius);\n      stroke-dasharray: 24;\n      stroke-dashoffset: -24;\n      @include transition(background-color var(--go-duration-fast) ease var(--go-duration-fast), stroke-dashoffset var(--go-duration-fast));\n    }\n    input {\n      ~ .mark.minus {\n        display: none;\n      }\n      &:checked {\n        ~ .mark {\n          @include transition(background-color var(--go-duration-fast), stroke-dashoffset var(--go-duration-fast) ease var(--go-duration-fast));\n          stroke-dashoffset: 0;\n          background: var(--cb-checked-bg);\n          border-color: var(--cb-checked-bg);\n          path {\n            filter: drop-shadow(var(--cb-mark-shadow-inner));\n          }\n          &.minus {\n            display: none;\n          }\n          &.tick {\n            display: block;\n          }\n        }\n      }\n      &:indeterminate {\n        ~ .mark {\n          background: var(--cb-checked-bg);\n          border-color: var(--cb-checked-bg);\n          stroke-dashoffset: 0;\n          path {\n            filter: drop-shadow(var(--cb-mark-shadow-inner));\n          }\n          &.minus {\n            display: block;\n          }\n          &.tick {\n            display: none;\n          }\n        }\n      }\n      &:not(:disabled) {\n        &:hover:not(:checked) {\n          ~ .mark {\n            border-color: var(--cb-border-color-hover);\n          }\n        }\n        &:hover:checked,\n        &:focus-visible {\n          ~ .mark {\n            @include focus-outline;\n          }\n        }\n        &:active {\n          ~ .mark {\n            box-shadow: var(--input-focus-shadow);\n            outline-offset: 0;\n          }\n        }\n      }\n    }\n  }\n\n  .hint {\n    @include hint;\n  }\n}\n","import { Component, Host, h, Element, Prop, State, Watch } from '@stencil/core';\nimport { CheckboxProps } from '../../../interfaces';\nimport { hasSlot, initIdProps } from '../../../utils';\n@Component({\n  tag: 'go-checkbox',\n  styleUrl: 'go-checkbox.scss',\n  shadow: false,\n})\nexport class GoCheckbox implements CheckboxProps {\n  @Element() el: HTMLElement;\n\n  @Prop({ mutable: true }) checked?: boolean;\n  @Prop() indeterminate?: boolean;\n  @Prop() name: string;\n  @Prop() disabled?: boolean;\n  @Prop() value: any;\n  @Prop() label: string;\n  @Prop() hint?: string;\n  @Prop({ reflect: true }) error?: string;\n\n  controlId: string;\n  /**\n   * DOM id for hint message\n   */\n  @Prop({ mutable: true })\n  hintId?: string;\n\n  /**\n   * DOM id for error\n   */\n  @Prop({ mutable: true })\n  errorId?: string;\n\n  /**\n   * Allow empty value for `error` attribute and show error state\n   */\n  @State() hasError = false;\n\n  @Watch('error')\n  updateErrorState() {\n    this.hasError = typeof this.error !== 'undefined';\n  }\n\n  handleChange(e) {\n    this.checked = e.target.checked;\n  }\n\n  hasHintSlot: boolean;\n  componentWillLoad() {\n    this.hasHintSlot = hasSlot(this.el, 'hint');\n    initIdProps(this, this.el, ['hint', 'error', 'control'], 'go-checkbox-');\n    this.updateErrorState();\n  }\n\n  render() {\n    const {\n      label,\n      error,\n      controlId,\n      hint,\n      hintId,\n      hasHintSlot,\n      checked,\n      indeterminate,\n      name,\n      disabled,\n      value,\n      hasError,\n      errorId,\n    } = this;\n\n    const describedByIds = [];\n    if (hasHintSlot || hint) {\n      describedByIds.push(hintId);\n    }\n    if (hasError) {\n      describedByIds.push(errorId);\n    }\n    const props = {\n      id: controlId,\n      checked,\n      indeterminate,\n      name,\n      disabled,\n      value,\n    };\n    return (\n      <Host\n        class={{\n          error: hasError,\n          disabled: !!disabled,\n          indeterminate: !!indeterminate,\n        }}>\n        <div class=\"control-wrapper\">\n          <div class=\"box\">\n            <input\n              class=\"hidden-control\"\n              type=\"checkbox\"\n              {...props}\n              aria-invalid={String(hasError)}\n              aria-describedby={describedByIds.join(' ')}\n              onChange={(e) => this.handleChange(e)}\n            />\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              viewBox=\"0 0 24 24\"\n              class=\"mark minus\">\n              <path d=\"M5 12h14\" />\n            </svg>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              viewBox=\"0 0 24 24\"\n              class=\"mark tick\">\n              <path d=\"M20 6 9 17l-5-5\" />\n            </svg>\n          </div>\n          <div class=\"text\">\n            <label htmlFor={controlId}>{label}</label>\n            {hasHintSlot || hint ? (\n              <div class=\"hint\" id={hintId}>\n                <slot name=\"hint\">{hint}</slot>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {hasError ? (\n          <div class=\"error-msg\" id={errorId}>\n            {error}\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":"oJAAA,MAAMA,EAAgB,6+GACtB,MAAAC,EAAeD,E,MCOFE,EAAU,M,uQA4BD,K,CAGpB,gBAAAC,GACEC,KAAKC,gBAAkBD,KAAKE,QAAU,W,CAGxC,YAAAC,CAAaC,GACXJ,KAAKK,QAAUD,EAAEE,OAAOD,O,CAI1B,iBAAAE,GACEP,KAAKQ,YAAcC,EAAQT,KAAKU,GAAI,QACpCC,EAAYX,KAAMA,KAAKU,GAAI,CAAC,OAAQ,QAAS,WAAY,gBACzDV,KAAKD,kB,CAGP,MAAAa,GACE,MAAMC,MACJA,EAAKX,MACLA,EAAKY,UACLA,EAASC,KACTA,EAAIC,OACJA,EAAMR,YACNA,EAAWH,QACXA,EAAOY,cACPA,EAAaC,KACbA,EAAIC,SACJA,EAAQC,MACRA,EAAKnB,SACLA,EAAQoB,QACRA,GACErB,KAEJ,MAAMsB,EAAiB,GACvB,GAAId,GAAeO,EAAM,CACvBO,EAAeC,KAAKP,E,CAEtB,GAAIf,EAAU,CACZqB,EAAeC,KAAKF,E,CAEtB,MAAMG,EAAQ,CACZC,GAAIX,EACJT,UACAY,gBACAC,OACAC,WACAC,SAEF,OACEM,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACL3B,MAAOD,EACPkB,WAAYA,EACZF,gBAAiBA,IAEnBS,EAAA,OAAAE,IAAA,2CAAKC,MAAM,mBACTH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,OACTH,EAAA,QAAAI,OAAAC,OAAA,CAAAH,IAAA,2CACEC,MAAM,iBACNG,KAAK,YACDR,EAAK,gBACKS,OAAOhC,GAAS,mBACZqB,EAAeY,KAAK,KACtCC,SAAW/B,GAAMJ,KAAKG,aAAaC,MAErCsB,EAAA,OAAAE,IAAA,2CACEQ,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,iBACN,QAAO,kBACN,QAAO,eACV,IACbC,QAAQ,YACRV,MAAM,cACNH,EAAA,QAAAE,IAAA,2CAAMY,EAAE,cAEVd,EAAA,OAAAE,IAAA,2CACEQ,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,iBACN,QAAO,kBACN,QAAO,eACV,IACbC,QAAQ,YACRV,MAAM,aACNH,EAAA,QAAAE,IAAA,2CAAMY,EAAE,sBAGZd,EAAA,OAAAE,IAAA,2CAAKC,MAAM,QACTH,EAAA,SAAAE,IAAA,2CAAOa,QAAS3B,GAAYD,GAC3BL,GAAeO,EACdW,EAAA,OAAKG,MAAM,OAAOJ,GAAIT,GACpBU,EAAA,QAAMR,KAAK,QAAQH,IAEnB,OAGPd,EACCyB,EAAA,OAAKG,MAAM,YAAYJ,GAAIJ,GACxBnB,GAED,K"}