{"version":3,"names":["goAccordionItemCss","GoAccordionItemStyle0","GoAccordionItem","componentWillLoad","this","hasHeadingSlot","hasSlot","el","hasArrowSlot","panelId","uniqueId","headerId","parentGroup","closest","componentDidLoad","autoHeight","panelEl","style","setProperty","scrollHeight","onTransitionEnd","addEventListener","onTransitionStart","handleNavigation","key","nextElementSibling","focusOnControl","previousElementSibling","children","length","active","overflow","opened","emit","visibility","closed","opening","closing","toggle","close","open","querySelector","focus","render","headingTag","HeadingTag","h","Host","class","id","role","onClick","onKeyDown","e","name","heading","xmlns","fill","stroke","viewBox","focusable","d","ref"],"sources":["src/components/go-accordion/go-accordion-item.scss?tag=go-accordion-item","src/components/go-accordion/go-accordion-item.tsx"],"sourcesContent":["go-accordion-item {\n  @include reduced-motion {\n    --go-duration-normal: 0.01s;\n  }\n\n  display: block;\n  .heading {\n    .heading-control {\n      background: var(--heading-bg-color);\n      color: var(--heading-text-color);\n      font-size: var(--heading-font-size, 1rem);\n      border-radius: var(--heading-radius);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      border: none;\n      padding: var(--heading-padding-y) var(--heading-padding-x);\n      cursor: pointer;\n      @include transition(border-radius);\n      &:hover,\n      &:focus-visible {\n        --heading-bg-color: var(--heading-bg-color-hover);\n        --heading-text-color: var(--heading-fg-color-hover);\n      }\n\n      &:focus-visible {\n        @include focus-outline;\n      }\n    }\n    .arrow {\n      display: block;\n      color: currentColor;\n      @include transition(transform);\n\n      width: 1.5em;\n      height: 1.5em;\n    }\n  }\n  .panel-wrapper {\n    overflow: hidden;\n    max-height: 0;\n    transition: max-height var(--go-duration-normal) var(--go-timing-function);\n    background: var(--panel-bg-color);\n    .panel {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n      overflow: hidden;\n      padding: var(--panel-padding-y) var(--panel-padding-x);\n    }\n  }\n  &.autoHeight {\n    .panel-wrapper {\n      overflow: hidden;\n    }\n  }\n  &.active {\n    > .heading {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      transition: border-radius 0s;\n      .arrow {\n        transform: rotate(180deg);\n      }\n    }\n    > .panel-wrapper {\n      max-height: var(--body-max-height);\n    }\n  }\n}\n","import { Component, Host, h, Prop, State, Element, Method, Event, EventEmitter } from '@stencil/core';\nimport { hasSlot } from '../../utils/helper';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-accordion-item',\n  styleUrl: 'go-accordion-item.scss',\n  shadow: false,\n})\nexport class GoAccordionItem {\n  @Element() el: HTMLElement;\n\n  /**\n   * Heading text.\n   * This can be overwritten by `heading` slot\n   */\n  @Prop() heading?: string = null;\n\n  /**\n   * The HTML tag to be applied to the heading text.\n   * This can be overwritten by `heading` slot\n   */\n  @Prop() headingTag?: string = 'h3';\n\n  /**\n   * If expanded height should be automatically calculated. If true, the `--go-accordion-item-body-max-height` CSS variable will be set automatically to the content height\n   */\n  @Prop() autoHeight?: boolean = true;\n\n  /**\n   * If the accordion item should be opened by default\n   */\n  @Prop({ reflect: true, mutable: true }) active?: boolean = false;\n\n  @State() hasHeadingSlot: boolean = true;\n  @State() hasArrowSlot: boolean = true;\n\n  panelId: string;\n  headerId: string;\n  panelEl: HTMLElement;\n  animationHeightInterval: number; // number of px per frame of animation change.\n\n  parentGroup: HTMLGoAccordionElement;\n\n  /**\n   * Emitted when accordion item has opened\n   */\n  @Event() opened: EventEmitter;\n\n  /**\n   * Emitted when accordion item started opening\n   */\n  @Event() opening: EventEmitter;\n\n  /**\n   * Emitted when accordion item has closed\n   */\n  @Event() closed: EventEmitter;\n\n  /**\n   * Emitted when accordion item started closing\n   */\n  @Event() closing: EventEmitter;\n\n  componentWillLoad() {\n    this.hasHeadingSlot = hasSlot(this.el, 'heading');\n    this.hasArrowSlot = hasSlot(this.el, 'arrow');\n    this.panelId = uniqueId('go-accordion-item-panel-');\n    this.headerId = uniqueId('go-accordion-item-header-');\n    this.parentGroup = this.el.closest('go-accordion') as HTMLGoAccordionElement;\n  }\n  componentDidLoad() {\n    if (this.autoHeight) {\n      this.panelEl.style.setProperty('--body-max-height', this.panelEl.scrollHeight + 2 + 'px');\n    }\n    this.onTransitionEnd();\n    this.panelEl.addEventListener('transitionstart', () => {\n      this.onTransitionStart();\n    });\n    this.panelEl.addEventListener('transitionend', () => {\n      this.onTransitionEnd();\n    });\n  }\n\n  handleNavigation(key) {\n    if (key === 'ArrowDown') {\n      if (this.el.nextElementSibling) {\n        (this.el.nextElementSibling as HTMLGoAccordionItemElement).focusOnControl();\n      }\n    }\n    if (key === 'ArrowUp') {\n      if (this.el.previousElementSibling) {\n        (this.el.previousElementSibling as HTMLGoAccordionItemElement).focusOnControl();\n      }\n    }\n    if (key === 'Home') {\n      (this.parentGroup.children[0] as HTMLGoAccordionItemElement).focusOnControl();\n    }\n    if (key === 'End') {\n      (this.parentGroup.children[this.parentGroup.children.length - 1] as HTMLGoAccordionItemElement).focusOnControl();\n    }\n  }\n\n  onTransitionEnd() {\n    if (this.active) {\n      this.panelEl.style.overflow = 'auto';\n      this.opened.emit();\n    } else {\n      this.panelEl.style.overflow = 'hidden';\n      this.panelEl.style.visibility = 'hidden';\n      this.closed.emit();\n    }\n  }\n  onTransitionStart() {\n    if (this.active) {\n      this.panelEl.style.visibility = 'visible';\n      this.opening.emit();\n    } else {\n      this.closing.emit();\n    }\n  }\n\n  /**\n   * Toggle open state of accordion item\n   */\n  @Method()\n  async toggle() {\n    if (this.active) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes the accordion item\n   */\n  @Method()\n  async close() {\n    this.active = false;\n  }\n\n  /**\n   * Opens the accordion item.\n   */\n  @Method()\n  async open() {\n    this.active = true;\n  }\n\n  /**\n   * Focus on header control\n   */\n  @Method()\n  async focusOnControl() {\n    (this.el.querySelector('.heading-control') as HTMLElement).focus();\n  }\n\n  render() {\n    const { active, autoHeight, headingTag: HeadingTag, panelId, headerId } = this;\n    return (\n      <Host class={{ active, autoHeight }}>\n        <HeadingTag class=\"heading\">\n          <button\n            id={headerId}\n            class=\"heading-control\"\n            role=\"button\"\n            onClick={() => this.toggle()}\n            onKeyDown={(e) => this.handleNavigation(e.key)}\n            aria-expanded={active ? 'true' : 'false'}\n            aria-controls={panelId}>\n            {this.hasHeadingSlot ? <slot name=\"heading\"></slot> : this.heading}\n            <span class=\"arrow\">\n              {this.hasArrowSlot ? (\n                <slot name=\"arrow\"></slot>\n              ) : (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\">\n                  <path d=\"m6 9 6 6 6-6\" />\n                </svg>\n              )}\n            </span>\n          </button>\n        </HeadingTag>\n        <div class=\"panel-wrapper\" role=\"region\" id={panelId} aria-labelledby={headerId} ref={(el) => (this.panelEl = el as HTMLElement)}>\n          <div class=\"panel\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}