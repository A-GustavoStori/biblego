{"version":3,"names":["goProgressCss","GoProgressStyle0","GoProgress","updatePercentage","newValue","this","max","percentage","indeterminate","total","min","Math","round","componentWillLoad","value","render","label","labelledby","showPercentage","ariaAttrs","h","Host","key","Object","assign","class","track","role","style","transform"],"sources":["src/components/go-progress/go-progress.scss?tag=go-progress","src/components/go-progress/go-progress.tsx"],"sourcesContent":["go-progress {\n  --go-progress-color: var(--go-color-primary-600);\n  --go-progress-bar-height: 0.25rem;\n  --go-progress-padding: var(--go-progress-bar-height) 0;\n  --go-progress-radius: var(--radius-round);\n  --go-progress-track-color: var(--go-color-neutral-200);\n\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: var(--go-progress-padding);\n  .track {\n    flex: 1;\n    position: relative;\n    height: var(--go-progress-bar-height);\n    background-color: var(--go-progress-track-color);\n    border-radius: var(--go-progress-radius);\n    overflow: hidden;\n    .bar {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      background-color: var(--go-progress-color);\n      border-radius: var(--go-progress-radius);\n      transform: translateX(-100%);\n      @include transition(transform);\n    }\n    &.indeterminate {\n      .bar {\n        border-radius: var(--go-progress-radius);\n        transform-origin: left center;\n        animation: indeterminate-progress 1.5s linear infinite;\n        @include reduced-motion {\n          transform: translateX(0%) scaleX(30%);\n          animation: indeterminate-progress-rm 3s steps(6, jump-none) infinite alternate;\n        }\n      }\n    }\n  }\n}\n@keyframes indeterminate-progress {\n  0% {\n    transform: translateX(-10%) scaleX(0);\n  }\n  50% {\n    transform: translateX(0%) scaleX(70%);\n  }\n  100% {\n    transform: translateX(110%) scaleX(0);\n  }\n}\n\n@keyframes indeterminate-progress-rm {\n  0% {\n    transform-origin: left;\n  }\n\n  100% {\n    transform-origin: right;\n  }\n}\n","import { Component, Host, h, Element, Prop, Watch, State } from '@stencil/core';\n\n@Component({\n  tag: 'go-progress',\n  styleUrl: 'go-progress.scss',\n  shadow: false,\n})\nexport class GoProgress {\n  @Element() el: HTMLElement;\n  /**\n   * min value of the progress bar\n   */\n  @Prop() min?: number = 0;\n  /**\n   * Total amount of work required for progress to complete\n   */\n  @Prop() max?: number = 100;\n  /**\n   * How much of the task that has been completed\n   */\n  @Prop({ mutable: true }) value?: number;\n\n  /**\n   * Descriptive label for screen readers to identify the progress bar\n   */\n  @Prop() label?: string;\n\n  /**\n   * Id of the label element for the progress bar\n   */\n  @Prop() labelledby?: string;\n\n  /**\n   * Set progress to indeterminate state\n   */\n  @Prop({ mutable: true }) indeterminate?: boolean = false;\n\n  /**\n   * Display percentage of completion\n   */\n  @Prop() showPercentage?: boolean = false;\n\n  @State() percentage: number;\n\n  @Watch('value')\n  updatePercentage(newValue: number) {\n    if (typeof newValue !== 'number' || !this.max) {\n      this.percentage = 0;\n      this.indeterminate = true;\n    }\n    const total = this.max - this.min;\n    this.percentage = Math.round((newValue / total) * 100);\n  }\n\n  componentWillLoad() {\n    this.updatePercentage(this.value);\n  }\n\n  render() {\n    const { percentage, indeterminate, label, labelledby, value, max, min, showPercentage } = this;\n    let ariaAttrs = {\n      'aria-valuenow': indeterminate ? null : value,\n      'aria-valuemin': indeterminate ? null : min,\n      'aria-valuemax': indeterminate ? null : max,\n    };\n    return (\n      <Host>\n        <div class={{ track: true, indeterminate }} aria-label={label} aria-labelledby={labelledby} role=\"progressbar\" {...ariaAttrs}>\n          <slot></slot>\n          <span class=\"bar\" style={indeterminate ? null : { transform: `translateX(-${100 - percentage}%` }}></span>\n        </div>\n        {showPercentage ? <span class=\"percentage\">{percentage}%</span> : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":"oDAAA,MAAMA,EAAgB,+6CACtB,MAAAC,EAAeD,E,MCMFE,EAAU,M,kCAKE,E,SAIA,I,uFAmB4B,M,oBAKhB,M,0BAKnC,gBAAAC,CAAiBC,GACf,UAAWA,IAAa,WAAaC,KAAKC,IAAK,CAC7CD,KAAKE,WAAa,EAClBF,KAAKG,cAAgB,I,CAEvB,MAAMC,EAAQJ,KAAKC,IAAMD,KAAKK,IAC9BL,KAAKE,WAAaI,KAAKC,MAAOR,EAAWK,EAAS,I,CAGpD,iBAAAI,GACER,KAAKF,iBAAiBE,KAAKS,M,CAG7B,MAAAC,GACE,MAAMR,WAAEA,EAAUC,cAAEA,EAAaQ,MAAEA,EAAKC,WAAEA,EAAUH,MAAEA,EAAKR,IAAEA,EAAGI,IAAEA,EAAGQ,eAAEA,GAAmBb,KAC1F,IAAIc,EAAY,CACd,gBAAiBX,EAAgB,KAAOM,EACxC,gBAAiBN,EAAgB,KAAOE,EACxC,gBAAiBF,EAAgB,KAAOF,GAE1C,OACEc,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,MAAAG,OAAAC,OAAA,CAAAF,IAAA,2CAAKG,MAAO,CAAEC,MAAO,KAAMlB,iBAAe,aAAcQ,EAAK,kBAAmBC,EAAYU,KAAK,eAAkBR,GACjHC,EAAA,QAAAE,IAAA,6CACAF,EAAA,QAAAE,IAAA,2CAAMG,MAAM,MAAMG,MAAOpB,EAAgB,KAAO,CAAEqB,UAAW,eAAe,IAAMtB,SAEnFW,EAAiBE,EAAA,QAAMK,MAAM,cAAclB,EAAU,KAAY,K"}