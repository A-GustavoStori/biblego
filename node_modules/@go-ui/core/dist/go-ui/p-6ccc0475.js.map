{"version":3,"names":["mm","query","window","matchMedia","prefersDark","matches","prefersReducedMotion","watchDevice","callback","syncEl","document","createElement","setAttribute","body","appendChild","observer","ResizeObserver","entries","style","getComputedStyle","getPropertyValue","replace","observe","inheritAttributes","el","excludes","remove","attributes","attributeObject","i","length","name","value","indexOf","key","removeAttribute","inheritComponentAttrs","component","warning","Array","from","$attrs","removeAttrs","elPropName","propNames","Object","keys","getPrototypeOf","this","extractId","id","hasShadowDom","shadowRoot","attachShadow","hasSlot","slotName","querySelector","isDarkMode","darkByAttribute","documentElement","getAttribute","selectDirectChildren","elem","selector","prototype","filter","call","children","child","args","console","log","warn","initIdProps","instance","rootEl","idProps","prefix","uniqueId","forEach","parseJsonProp","prop","JSON5","parse","e"],"sources":["src/utils/match-media.ts","src/utils/helper.ts"],"sourcesContent":["/**\n * short hand for matchMedia\n * @param query media query string\n * @returns {MediaQueryList}\n */\nexport function mm(query: string): MediaQueryList {\n  return window.matchMedia(query);\n}\n/**\n * Checks if prefer dark mode\n * @returns {boolean} if user has dark mode set in OS\n */\nexport function prefersDark(): boolean {\n  return mm('(prefers-color-scheme: dark)').matches;\n}\n/**\n * Checks if prefers reduced motion\n * @returns {boolean} if user prefers reduced motion\n */\nexport function prefersReducedMotion(): boolean {\n  return mm('(prefers-reduced-motion: reduce)').matches;\n}\n\nexport type BuiltInDeviceTypes = 'mobile' | 'tablet' | 'desktop' | 'large';\n\nexport function watchDevice(callback: (device: BuiltInDeviceTypes) => void): void {\n  const syncEl = document.createElement('div');\n  syncEl.setAttribute('id', 'sync-mq');\n  document.body.appendChild(syncEl);\n  var observer = new ResizeObserver(function (entries) {\n    // get device type from body content\n    if (!entries[0]) {\n      return;\n    }\n    const style = getComputedStyle(syncEl, '::before').getPropertyValue('content');\n    callback(style.replace(/\"/g, '') as BuiltInDeviceTypes);\n  });\n\n  observer.observe(syncEl);\n}\n","import { prefersDark } from './match-media';\nimport { uniqueId } from 'lodash-es';\nimport JSON5 from 'json5';\n\ndeclare const __zone_symbol__requestAnimationFrame: any;\ndeclare const requestAnimationFrame: any;\n\n/**\n * Extract attributes set on the an element.\n * @param {HTMLElement} el - The element to check.\n * @param {string[]} [excludes=[]] - A list of attribute names to exclude.\n * @param {boolean} [remove=true] - Remove the attributes after extracting them.\n */\nexport const inheritAttributes = (el: HTMLElement, excludes: string[] = [], remove: boolean = true) => {\n  if (!el) {\n    return {};\n  }\n  const attributes = el.attributes as NamedNodeMap;\n  let attributeObject = {};\n  for (let i = 0; i < attributes.length; i++) {\n    const { name, value } = attributes[i];\n    // console.log(`${name} = ${value}`);\n    if (excludes.indexOf(name) === -1) {\n      attributeObject[name] = value;\n    }\n  }\n\n  if (remove) {\n    // remove inherited attributes from el\n    for (let key in attributeObject) {\n      el.removeAttribute(key);\n    }\n  }\n\n  return attributeObject;\n};\n\n/**\n * @deprecated use $attrs.bind(this)(true|false) in component\n * @param component stencil class instance\n * @param excludes exclude inheriting these attributes (besides class, style, id)\n */\nexport function inheritComponentAttrs(component, excludes: string[] = [], remove: boolean = true) {\n  if (!component.el) {\n    warning(`root element not found in component`, component);\n  }\n  return inheritAttributes(component.el, ['class', 'style', 'id', ...Array.from(excludes)], remove);\n}\n\n/**\n * get attributes that are not defined in a components props, without removing them from the host element\n * @returns list of attributes inherited from the host element\n */\nexport function $attrs(removeAttrs = false, elPropName = 'el') {\n  const propNames = Object.keys(Object.getPrototypeOf(this));\n  return inheritAttributes(\n    this[elPropName],\n    ['class', 'style', 'id', 'data-testid', 'slot', ...propNames],\n    removeAttrs,\n  );\n}\n\n/**\n * Extract the `id` from target element, then remove the original id attribute\n * @param el target element\n * @returns id specified in target element\n */\nexport function extractId(el: HTMLElement) {\n  const id = el.id;\n  el.removeAttribute('id');\n  return id;\n}\n\nexport function hasShadowDom(el: HTMLElement): boolean {\n  return !!el.shadowRoot && !!(el as any).attachShadow;\n}\n\nexport function hasSlot(el: HTMLElement, slotName?: string): boolean {\n  return !!el.querySelector('[slot=\"' + slotName + '\"]');\n}\n// export const clamp = (min: number, n: number, max: number) => {\n//   return Math.max(min, Math.min(n, max));\n// };\n\n// export const debounce = (func: (...args: any[]) => void, wait = 0) => {\n//   let timer: any;\n//   return (...args: any[]): any => {\n//     clearTimeout(timer);\n//     timer = setTimeout(func, wait, ...args);\n//   };\n// };\n\nexport const isDarkMode = () => {\n  const darkByAttribute =\n    document.documentElement.getAttribute('data-theme') === 'dark' ||\n    document.documentElement.getAttribute('color-theme') === 'dark';\n  return prefersDark() || darkByAttribute;\n};\n\n/*!\n * Get all direct descendant elements that match a selector\n * Dependency: the matches() polyfill: https://vanillajstoolkit.com/polyfills/matches/\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param  {Node}   elem     The element to get direct descendants for\n * @param  {String} selector The selector to match against\n * @return {Array}           The matching direct descendants\n */\nexport function selectDirectChildren(elem: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(elem.children, function (child) {\n    return child.matches(selector);\n  });\n}\n\nexport function warning(...args: any[]) {\n  console.log(`%c[Go UI warning]`, 'background: #e63a34; color: #fff; font-size: 24px;padding: 8px;');\n  console.warn(...args);\n}\n\n/**\n * Initialise id props (such as `labelId`, `hintId` etc) in stencil component\n * @param instance stencil component instance\n * @param rootEl stencil `@Element()` prop\n * @param idProps array of prop names such as `labelId` without the `Id` suffix, this array will be used to generate ids and assign them back to the class' props\n * @param prefix prefix for generated ids\n */\nexport function initIdProps(instance: any, rootEl: HTMLElement, idProps: string[], prefix: string) {\n  let id = extractId(rootEl);\n  if (!id) {\n    id = uniqueId(prefix);\n  }\n  instance.id = id;\n  idProps.forEach((key) => {\n    if (!instance[`${key}Id`]) {\n      instance[`${key}Id`] = `${id}-${key}`;\n    }\n  });\n}\n/**\n * parse json prop passed into a component\n * @param prop {T|string}\n */\nexport function parseJsonProp<T>(prop: T | string): T {\n  if (!prop) {\n    return null;\n  }\n  try {\n    return typeof prop === 'string' ? JSON5.parse<T>(prop) : prop;\n  } catch (e) {\n    warning('Could not parse prop', e);\n  }\n}\n"],"mappings":"iFAKgBA,EAAGC,GACjB,OAAOC,OAAOC,WAAWF,EAC3B,C,SAKgBG,IACd,OAAOJ,EAAG,gCAAgCK,OAC5C,C,SAKgBC,IACd,OAAON,EAAG,oCAAoCK,OAChD,C,SAIgBE,EAAYC,GAC1B,MAAMC,EAASC,SAASC,cAAc,OACtCF,EAAOG,aAAa,KAAM,WAC1BF,SAASG,KAAKC,YAAYL,GAC1B,IAAIM,EAAW,IAAIC,gBAAe,SAAUC,GAE1C,IAAKA,EAAQ,GAAI,CACf,M,CAEF,MAAMC,EAAQC,iBAAiBV,EAAQ,YAAYW,iBAAiB,WACpEZ,EAASU,EAAMG,QAAQ,KAAM,I,IAG/BN,EAASO,QAAQb,EACnB,C,MC1Bac,EAAoB,CAACC,EAAiBC,EAAqB,GAAIC,EAAkB,QAC5F,IAAKF,EAAI,CACP,MAAO,E,CAET,MAAMG,EAAaH,EAAGG,WACtB,IAAIC,EAAkB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CAC1C,MAAME,KAAEA,EAAIC,MAAEA,GAAUL,EAAWE,GAEnC,GAAIJ,EAASQ,QAAQF,MAAW,EAAG,CACjCH,EAAgBG,GAAQC,C,EAI5B,GAAIN,EAAQ,CAEV,IAAK,IAAIQ,KAAON,EAAiB,CAC/BJ,EAAGW,gBAAgBD,E,EAIvB,OAAON,CAAe,E,SAQRQ,EAAsBC,EAAWZ,EAAqB,GAAIC,EAAkB,MAC1F,IAAKW,EAAUb,GAAI,CACjBc,EAAQ,sCAAuCD,E,CAEjD,OAAOd,EAAkBc,EAAUb,GAAI,CAAC,QAAS,QAAS,QAASe,MAAMC,KAAKf,IAAYC,EAC5F,C,SAMgBe,EAAOC,EAAc,MAAOC,EAAa,MACvD,MAAMC,EAAYC,OAAOC,KAAKD,OAAOE,eAAeC,OACpD,OAAOzB,EACLyB,KAAKL,GACL,CAAC,QAAS,QAAS,KAAM,cAAe,UAAWC,GACnDF,EAEJ,C,SAOgBO,EAAUzB,GACxB,MAAM0B,EAAK1B,EAAG0B,GACd1B,EAAGW,gBAAgB,MACnB,OAAOe,CACT,C,SAEgBC,EAAa3B,GAC3B,QAASA,EAAG4B,cAAiB5B,EAAW6B,YAC1C,C,SAEgBC,EAAQ9B,EAAiB+B,GACvC,QAAS/B,EAAGgC,cAAc,UAAYD,EAAW,KACnD,C,MAaaE,EAAa,KACxB,MAAMC,EACJhD,SAASiD,gBAAgBC,aAAa,gBAAkB,QACxDlD,SAASiD,gBAAgBC,aAAa,iBAAmB,OAC3D,OAAOxD,KAAiBsD,CAAe;;;;;;;;YAWzBG,EAAqBC,EAAmBC,GACtD,OAAOxB,MAAMyB,UAAUC,OAAOC,KAAKJ,EAAKK,UAAU,SAAUC,GAC1D,OAAOA,EAAM/D,QAAQ0D,E,GAEzB,C,SAEgBzB,KAAW+B,GACzBC,QAAQC,IAAI,oBAAqB,mEACjCD,QAAQE,QAAQH,EAClB,C,SASgBI,EAAYC,EAAeC,EAAqBC,EAAmBC,GACjF,IAAI3B,EAAKD,EAAU0B,GACnB,IAAKzB,EAAI,CACPA,EAAK4B,EAASD,E,CAEhBH,EAASxB,GAAKA,EACd0B,EAAQG,SAAS7C,IACf,IAAKwC,EAAS,GAAGxC,OAAU,CACzBwC,EAAS,GAAGxC,OAAW,GAAGgB,KAAMhB,G,IAGtC,C,SAKgB8C,EAAiBC,GAC/B,IAAKA,EAAM,CACT,OAAO,I,CAET,IACE,cAAcA,IAAS,SAAWC,EAAMC,MAASF,GAAQA,C,CACzD,MAAOG,GACP9C,EAAQ,uBAAwB8C,E,CAEpC,Q"}