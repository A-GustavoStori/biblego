{"version":3,"names":["GoNavSubmenu","this","clickOutsideCleanUp","escapeCleanUp","hasHeaderSlot","open","isOpen","toggleEvent","emit","window","requestAnimationFrame","onClickOutside","el","close","onEscape","document","toggle","componentWillLoad","parentNavItem","closest","warning","hasSlot","render","columns","h","key","class","style","String","name","GoNavSubmenuTrigger","loadSubmenuEl","controls","submenuEl","getElementById","addEventListener","e","detail","toggleOpenState","componentDidLoad","Tag","onClick","type","undefined","xmlns","fill","stroke","viewBox","d"],"sources":["src/components/navigation/go-nav-bar/go-nav-submenu.tsx","src/components/navigation/go-nav-bar/go-nav-submenu-trigger.tsx"],"sourcesContent":["import { hasSlot, onClickOutside, onEscape, warning } from '@/utils';\nimport { Component, Method, Prop, h, State, Event, EventEmitter, Element } from '@stencil/core';\n\n@Component({\n  tag: 'go-nav-submenu',\n})\nexport class GoNavSubmenu {\n  @Element() el: HTMLElement;\n\n  @Prop() columns: number = 1;\n\n  @State() isOpen: boolean = false;\n\n  @Event({\n    eventName: 'toggle',\n    cancelable: true,\n    bubbles: true,\n  })\n  toggleEvent: EventEmitter;\n\n  @Method()\n  async open() {\n    this.isOpen = true;\n    this.toggleEvent.emit({ isOpen: true });\n\n    window.requestAnimationFrame(() => {\n      // click outside to close menus\n      this.clickOutsideCleanUp = onClickOutside(this.el, () => this.close());\n      // esc to close menus\n      this.escapeCleanUp = onEscape(document, () => this.close());\n    });\n  }\n\n  @Method()\n  async close() {\n    this.isOpen = false;\n    this.toggleEvent.emit({ isOpen: false });\n\n    this.clickOutsideCleanUp && this.clickOutsideCleanUp();\n    this.escapeCleanUp && this.escapeCleanUp();\n  }\n\n  @Method()\n  async toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  parentNavItem: HTMLGoNavItemElement;\n  clickOutsideCleanUp = null;\n  escapeCleanUp = null;\n  hasHeaderSlot = false;\n  componentWillLoad() {\n    this.parentNavItem = this.el.closest('go-nav-item');\n    if (!this.parentNavItem) {\n      warning('<go-nav-submenu> must be a child of <go-nav-item>', this.el);\n      return;\n    }\n\n    this.hasHeaderSlot = hasSlot(this.el, 'submenu-header');\n  }\n\n  render() {\n    const { columns, isOpen, hasHeaderSlot } = this;\n    return (\n      <div class={{ 'submenu-container': true, 'open': isOpen }} style={{ '--submenu-columns': String(columns) }}>\n        {hasHeaderSlot ? (\n          <div class=\"submenu-header\">\n            <slot name=\"submenu-header\"></slot>\n          </div>\n        ) : null}\n        <div class=\"submenu-body\">\n          <slot></slot>\n        </div>\n      </div>\n    );\n  }\n}\n","import { warning } from '@/utils';\nimport { Component, Prop, h, Element, State } from '@stencil/core';\n\n@Component({\n  tag: 'go-nav-submenu-trigger',\n})\nexport class GoNavSubmenuTrigger {\n  @Element() el: HTMLElement;\n\n  @Prop({ reflect: true }) controls: string;\n\n  @State() isOpen: boolean = false;\n\n  submenuEl: HTMLGoNavSubmenuElement;\n\n  loadSubmenuEl() {\n    if (this.controls) {\n      this.submenuEl = document.getElementById(this.controls) as HTMLGoNavSubmenuElement;\n      if (!this.submenuEl) {\n        warning('<go-nav-submenu-trigger> is missing <go-nav-submenu> with id: ' + this.controls, this.el);\n      }\n      this.submenuEl.addEventListener('toggle', (e: CustomEvent) => {\n        this.isOpen = e.detail.isOpen;\n      });\n    }\n  }\n\n  toggleOpenState() {\n    this.submenuEl.toggle();\n  }\n\n  componentDidLoad() {\n    this.loadSubmenuEl();\n  }\n\n  render() {\n    const Tag = 'button';\n    return (\n      <Tag\n        class=\"nav-item-inner\"\n        onClick={() => this.toggleOpenState()}\n        type=\"button\"\n        aria-haspopup=\"true\"\n        aria-controls={this.controls ? this.controls : undefined}\n        aria-expanded={this.isOpen ? 'true' : 'false'}>\n        <span class=\"nav-item-label\">\n          <slot></slot>\n        </span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          viewBox=\"0 0 24 24\">\n          <path d=\"m6 9 6 6 6-6\" />\n        </svg>\n      </Tag>\n    );\n  }\n}\n"],"mappings":"gMAMaA,EAAY,M,6DA8CvBC,KAAAC,oBAAsB,KACtBD,KAAAE,cAAgB,KAChBF,KAAAG,cAAgB,M,aA7CU,E,YAEC,K,CAU3B,UAAMC,GACJJ,KAAKK,OAAS,KACdL,KAAKM,YAAYC,KAAK,CAAEF,OAAQ,OAEhCG,OAAOC,uBAAsB,KAE3BT,KAAKC,oBAAsBS,EAAeV,KAAKW,IAAI,IAAMX,KAAKY,UAE9DZ,KAAKE,cAAgBW,EAASC,UAAU,IAAMd,KAAKY,SAAQ,G,CAK/D,WAAMA,GACJZ,KAAKK,OAAS,MACdL,KAAKM,YAAYC,KAAK,CAAEF,OAAQ,QAEhCL,KAAKC,qBAAuBD,KAAKC,sBACjCD,KAAKE,eAAiBF,KAAKE,e,CAI7B,YAAMa,GACJ,GAAIf,KAAKK,OAAQ,CACfL,KAAKY,O,KACA,CACLZ,KAAKI,M,EAQT,iBAAAY,GACEhB,KAAKiB,cAAgBjB,KAAKW,GAAGO,QAAQ,eACrC,IAAKlB,KAAKiB,cAAe,CACvBE,EAAQ,oDAAqDnB,KAAKW,IAClE,M,CAGFX,KAAKG,cAAgBiB,EAAQpB,KAAKW,GAAI,iB,CAGxC,MAAAU,GACE,MAAMC,QAAEA,EAAOjB,OAAEA,EAAMF,cAAEA,GAAkBH,KAC3C,OACEuB,EAAA,OAAAC,IAAA,2CAAKC,MAAO,CAAE,oBAAqB,KAAMrB,KAAQC,GAAUqB,MAAO,CAAE,oBAAqBC,OAAOL,KAC7FnB,EACCoB,EAAA,OAAKE,MAAM,kBACTF,EAAA,QAAMK,KAAK,oBAEX,KACJL,EAAA,OAAAC,IAAA,2CAAKC,MAAM,gBACTF,EAAA,QAAAC,IAAA,8C,iCCrEGK,EAAmB,M,6DAKH,K,CAI3B,aAAAC,GACE,GAAI9B,KAAK+B,SAAU,CACjB/B,KAAKgC,UAAYlB,SAASmB,eAAejC,KAAK+B,UAC9C,IAAK/B,KAAKgC,UAAW,CACnBb,EAAQ,iEAAmEnB,KAAK+B,SAAU/B,KAAKW,G,CAEjGX,KAAKgC,UAAUE,iBAAiB,UAAWC,IACzCnC,KAAKK,OAAS8B,EAAEC,OAAO/B,MAAM,G,EAKnC,eAAAgC,GACErC,KAAKgC,UAAUjB,Q,CAGjB,gBAAAuB,GACEtC,KAAK8B,e,CAGP,MAAAT,GACE,MAAMkB,EAAM,SACZ,OACEhB,EAACgB,EAAG,CAAAf,IAAA,2CACFC,MAAM,iBACNe,QAAS,IAAMxC,KAAKqC,kBACpBI,KAAK,SAAQ,gBACC,OAAM,gBACLzC,KAAK+B,SAAW/B,KAAK+B,SAAWW,UAAS,gBACzC1C,KAAKK,OAAS,OAAS,SACtCkB,EAAA,QAAAC,IAAA,2CAAMC,MAAM,kBACVF,EAAA,QAAAC,IAAA,8CAEFD,EAAA,OAAAC,IAAA,2CACEmB,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRvB,EAAA,QAAAC,IAAA,2CAAMuB,EAAE,kB"}