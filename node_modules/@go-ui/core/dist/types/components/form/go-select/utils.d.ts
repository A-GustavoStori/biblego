/**
 * This file is based on the good work of @smhigley:
 * https://github.com/microsoft/sonder-ui/blob/master/src/components/select/select.tsx
 */
import { SelectOption } from "../../../interfaces/index";
export declare enum Keys {
    Backspace = "Backspace",
    Clear = "Clear",
    Down = "ArrowDown",
    End = "End",
    Enter = "Enter",
    Escape = "Escape",
    Home = "Home",
    Left = "ArrowLeft",
    PageDown = "PageDown",
    PageUp = "PageUp",
    Right = "ArrowRight",
    Space = " ",
    Tab = "Tab",
    Up = "ArrowUp"
}
export declare enum MenuActions {
    Close = 0,
    CloseSelect = 1,
    First = 2,
    Last = 3,
    Next = 4,
    Open = 5,
    PageDown = 6,
    PageUp = 7,
    Previous = 8,
    Select = 9,
    Space = 10,
    Type = 11
}
export declare enum TreeActions {
    Close = 0,
    First = 1,
    Last = 2,
    Next = 3,
    Open = 4,
    Previous = 5,
    Select = 6,
    UpLevel = 7
}
export declare function filterOptions(options: SelectOption[], filter: string, exclude?: SelectOption[]): SelectOption[];
export declare function findMatches(options: SelectOption[], search: string): SelectOption[];
export declare function getActionFromKey(event: KeyboardEvent, menuOpen: boolean): MenuActions;
export declare function getIndexByLetter(options: SelectOption[], filter: string, startIndex?: number): number;
export declare function getUpdatedIndex(current: number, max: number, action: MenuActions): number;
export declare function isScrollable(element: HTMLElement): boolean;
export declare function maintainScrollVisibility(activeElement: HTMLElement, scrollParent: HTMLElement): void;
/**
 * parse multiple formats of options prop into SelectOption[]
 */
export declare const parseSelectOptions: (options: string | string[] | SelectOption[]) => SelectOption[] | null;
