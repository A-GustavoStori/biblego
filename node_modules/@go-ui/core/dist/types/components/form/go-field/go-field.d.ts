import { FormFieldProps } from '../../../interfaces';
export declare class GoField implements FormFieldProps {
    el: HTMLElement;
    idPrefix: string;
    controlId: string;
    /**
     * DOM id for label
     */
    labelId?: string;
    /**
     * DOM id for prefix
     */
    prefixId?: string;
    /**
     * DOM id for suffix
     */
    suffixId?: string;
    /**
     * DOM id for hint message
     */
    hintId?: string;
    /**
     * DOM id for error
     */
    errorId?: string;
    /**
     * Name of the input field
     */
    name: string;
    /**
     * Label of the input field
     */
    label: string;
    /**
     * If the input is disabled
     */
    disabled?: boolean;
    /**
     * Hint message for the input
     */
    hint?: string;
    /**
     * Error state of input, text provided will be shown as error message
     */
    error?: boolean | string;
    /**
     * If this input is read-only
     */
    readonly?: boolean;
    /**
     * Allow empty value for `error` attribute and show error state
     */
    hasError: boolean;
    /**
     * If specified, an input element with `type="hidden"` will be generated
     * and this hiddenName prop will be used as the `name` of the hidden input
     *
     * use `hiddenInputValue` prop to set the value of that field
     */
    hiddenInputName?: string;
    /**
     * Sets the value of the hidden input created by `hiddenInputName`
     */
    hiddenInputValue?: string;
    updateErrorState(): void;
    hasIconBefore: boolean;
    hasIconAfter: boolean;
    hasPrefix: boolean;
    hasSuffix: boolean;
    hasHintSlot: boolean;
    hasLabelSlot: boolean;
    componentWillLoad(): void;
    controlElSelector: string;
    controlEl: HTMLElement;
    componentDidLoad(): void;
    componentDidUpdate(): void;
    updateAttributes(): void;
    render(): any;
}
