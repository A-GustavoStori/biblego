import { EventEmitter } from '../../stencil-public-runtime';
export declare class GoDropdown {
    el: HTMLElement;
    /**
     * Query selector string for the trigger element.
     */
    triggerSelector: string;
    /**
     * keep track of active state
     */
    isActive: boolean;
    /**
     * Width of the dropdown, any CSS width values can be used.
     */
    width?: string;
    /**
     * If set, trigger click event will need to be handled manually.
     */
    noTriggerClickHandler: boolean;
    /**
     * If set, dropdown will take full width of its parent.
     */
    fullWidth?: boolean;
    /**
     * if set, dropdown cannot be opened
     */
    disabled?: boolean;
    /**
     * Emitted when dropdown is opened
     */
    opened: EventEmitter<void>;
    originEl: HTMLElement;
    /**
     * opens dropdown
     */
    open(): Promise<void>;
    /**
     * Emitted when dropdown is opened
     */
    closed: EventEmitter<void>;
    /**
     * closes dropdown
     */
    close(focusBackToTrigger?: boolean): Promise<void>;
    /**
     * toggles dropdown
     */
    toggle(): Promise<void>;
    private triggerEl;
    private cleanupAutoUpdate;
    componentWillLoad(): void;
    private escapeHandler;
    private focusOutHandler;
    private clickOutsideCleanUp;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    init(): Promise<void>;
    setTriggerExpanded(expanded: boolean): void;
    handleActiveChange(isActive: any): void;
    render(): any;
}
