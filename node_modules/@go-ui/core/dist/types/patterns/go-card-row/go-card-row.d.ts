/**
 * @slot default - Default slot, to be filled with `go-card` elements
 * @slot heading - Overwrite default `h2` heading for this card row section
 */
export declare class GoCardRow {
    el: HTMLElement;
    /**
     * By default, `go-card-row` stretches all cards inside to the tallest card in view, unless this property is set to true.
     */
    noStretch: boolean;
    /**
     * Number of columns from mobile breakpoint and up
     */
    cols: number;
    /**
     * Number of columns from tablet breakpoint and up
     */
    colsTablet: number;
    /**
     * Number of columns from desktop breakpoint and up
     */
    colsDesktop: number;
    /**
     * Number of columns from large breakpoint and up
     */
    colsLarge: number;
    /**
     * If set, cards will fade in one by one with the specified delay in milliseconds when they are in the viewport.
     * uses `IntersectionObserver`, [see browser compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)
     */
    stagger?: number;
    /**
     * If true, cards within the component will be wrapped inside a carousel
     */
    /**
     * Heading for this card row section
     */
    heading?: string;
    headingTag?: string;
    /**
     * View more link href
     */
    moreLinkHref?: string;
    /**
     * View more link text
     */
    moreLinkText?: string;
    hasHeadingSlot: boolean;
    /**
     * the DOM ref of direct parent of the cards
     */
    rowEl: HTMLElement;
    /**
     * class list for each card
     */
    cardClasses: string[];
    /**
     * intersection observer to check if cards are in view
     */
    inViewObserver: IntersectionObserver;
    componentWillLoad(): void;
    componentDidLoad(): Promise<void>;
    loadCards(): void;
    prepareCard(card: HTMLGoCardElement, colClasses: string[]): void;
    render(): any;
}
