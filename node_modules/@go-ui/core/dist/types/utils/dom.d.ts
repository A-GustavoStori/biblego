export declare const AUTO_FOCUS_TIMEOUT = 50;
/**
 * handle click outside of element
 * @param el target element
 * @param callback handler
 * @returns clean up function, call to remove event listener
 */
export declare function onClickOutside(el: HTMLElement, callback: (event: MouseEvent) => void): () => void;
/**
 * Add one time animationend event listener to given element, and remove it after fired once
 */
export declare function onAnimationEnd(el: HTMLElement, callback: () => void): void;
/**
 * Fade out and remove element
 * @param el target element
 */
export declare function fadeOutRemove(el: HTMLElement, callback?: () => void): void;
/**
 * Move an element into another parent
 * @param el Element to be moved
 * @param to Parent element to move el into
 */
export declare function moveEl(el: HTMLElement | Element, to: HTMLElement | Element): void;
export declare const tabIndexes: {
    disabled: string;
    tabbable: string;
};
/**
 * Get all focusable elements inside a given element
 * @param parent container element
 * @returns
 */
export declare function getFocusableChildren(parent: HTMLElement): HTMLElement[];
/**
 * Get the first focusable element in a given element
 * @param parent container element
 * @returns
 */
export declare function getFirstFocusableChild(parent: HTMLElement): HTMLElement;
/**
 * Get the last focusable element in a given element
 * @param parent container element
 * @returns
 */
export declare function getLastFocusableChild(parent: HTMLElement): HTMLElement;
/**
 * Trap focus
 * @param parent parent element that we trap focus within
 * @param focusOnFirst if true, automatically focus on first focusable element (default = true)
 *
 * @returns list of focusable child elements
 */
export declare function trapFocus(parent: HTMLElement, focusOnFirst?: boolean): HTMLElement[];
export declare function focusFirstWithin(parent: HTMLElement): void;
export declare function focusLastWithin(parent: HTMLElement): void;
/**
 *
 * Add event listener on escape key press
 * @param el the element to add event listener to
 */
export declare function onEscape(el: HTMLElement | Document, callback: (e: KeyboardEvent) => void): () => void;
