'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-348d3f4f.js');

const goButtonGroupCss = "go-button-group{--go-button-group-gap:1rem;display:flex;gap:var(--go-button-group-gap);flex-wrap:wrap;align-items:baseline}go-button-group.connected{flex-wrap:nowrap;gap:0}go-button-group.connected go-button{-webkit-margin-end:-0.0625rem;margin-inline-end:-0.0625rem}go-button-group.connected go-button:first-of-type .inner-button{border-top-right-radius:0;border-bottom-right-radius:0}go-button-group.connected go-button:last-of-type .inner-button{border-top-left-radius:0;border-bottom-left-radius:0}go-button-group.connected go-button:not(:first-of-type,:last-of-type){--go-btn-radius:0}";
const GoButtonGroupStyle0 = goButtonGroupCss;

const GoButtonGroup = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.block = undefined;
        this.connected = false;
    }
    async componentWillLoad() {
        // Make buttons inside take up full width on mobile.
        if (this.block) {
            this.el.querySelectorAll('go-button').forEach((button) => {
                button.setAttribute('block', this.block);
            });
        }
    }
    render() {
        const { connected } = this;
        return (index.h(index.Host, { key: '7c61599e31e82a4168e2caf394c5f0b54da3c8e6', role: "group", class: { connected } }, index.h("slot", { key: 'cbec52c7432c2e52a563d51e122e6f21310471f9' })));
    }
    get el() { return index.getElement(this); }
};
GoButtonGroup.style = GoButtonGroupStyle0;

exports.go_button_group = GoButtonGroup;

//# sourceMappingURL=go-button-group.cjs.entry.js.map