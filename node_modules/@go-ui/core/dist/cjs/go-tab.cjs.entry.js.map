{"file":"go-tab.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,QAAQ,GAAG,6FAA6F,CAAC;AAC/G,oBAAe,QAAQ;;MCUV,KAAK;;;;;;;4BA6ByB,QAAQ;wBAMpB,KAAK;;IAGlC,MAAM,SAAS,CAAC,MAAe;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxC,QACEA,QAACC,UAAI,qDAAC,QAAQ,EAAC,GAAG,EAAC,IAAI,EAAC,UAAU,EAAC,EAAE,EAAE,OAAO,qBAAmB,KAAK,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,IAC1GD,oEAAa,CACR,EACP;KACH;;;;;;;","names":["h","Host"],"sources":["src/components/go-tabs/go-tab.scss?tag=go-tab","src/components/go-tabs/go-tab.tsx"],"sourcesContent":["go-tab {\n  display: none;\n\n  &.active {\n    display: block;\n  }\n\n  &:focus-visible {\n    outline-offset: 0.5rem;\n  }\n}\n","import { Component, h, Prop, Element, Host, Method } from '@stencil/core';\nimport { TabIconPosition } from './tabs.type';\n\n/**\n * @slot icon - Slot for the tab icon (only 1 element allowed)\n * @slot icon-active - Slot for the tab icon (only 1 element allowed)\n */\n@Component({\n  tag: 'go-tab',\n  styleUrl: 'go-tab.scss',\n})\nexport class GoTab {\n  @Element() el: HTMLElement;\n\n  /**\n   * Label displayed on the tab\n   */\n  @Prop() label: string;\n\n  /**\n   * If this tab is currently active\n   * if multiple `go-tab` are active in the same `go-tabs`, first one is active.\n   */\n  @Prop({ mutable: true }) active: boolean;\n\n  /**\n   * `id` for the tab button element.\n   * If not provided, a unique id will be generated.\n   */\n  @Prop({ mutable: true }) tabId?: string;\n\n  /**\n   * id for the tab panel element\n   * If not provided, a unique id will be generated.\n   */\n  @Prop({ mutable: true }) panelId?: string;\n\n  /**\n   * Position of the icon, either 'before' or 'after'\n   */\n  @Prop() iconPosition?: TabIconPosition = 'before';\n\n  /**\n   * Only show `icon` and `icon-active` slot content\n   * \"Label\" prop is still required for screen reader announcement, but will not be shown visually\n   */\n  @Prop() iconOnly?: boolean = false;\n\n  @Method()\n  async setActive(active: boolean) {\n    this.active = active;\n  }\n\n  render() {\n    const { panelId, tabId, active } = this;\n    return (\n      <Host tabindex=\"0\" role=\"tabpanel\" id={panelId} aria-labelledby={tabId} class={{ 'tab-panel': true, active }}>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"version":3}