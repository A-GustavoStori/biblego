'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-348d3f4f.js');

const goDropdownItemCss = "";
const GoDropdownItemStyle0 = goDropdownItemCss;

const GoDropdownItem = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.selected = index.createEvent(this, "selected", 7);
        this.width = '100%';
        this.disabled = false;
        this.hasFocus = false;
    }
    async focusInControl() {
        var _a;
        (_a = this.controlEl) === null || _a === void 0 ? void 0 : _a.focus();
        this.controlEl.tabIndex = 0;
    }
    async focusOutControl() {
        this.controlEl.tabIndex = -1;
    }
    render() {
        const { width, hasFocus } = this;
        return (index.h("button", { key: '1f144f9e896738f1a8f3d48df9dc155741e2a891', type: "button", role: "menuitem", tabindex: hasFocus ? '0' : '-1', ref: (el) => (this.controlEl = el), "aria-disabled": this.disabled, onClick: (e) => {
                if (this.disabled) {
                    e.preventDefault();
                    return;
                }
                this.selected.emit(this.el);
            }, style: { '--dd-item-width': width } }, index.h("slot", { key: 'e3428e870c92fdc430b3ca4a4da617de15391920' })));
    }
    get el() { return index.getElement(this); }
};
GoDropdownItem.style = GoDropdownItemStyle0;

exports.go_dropdown_item = GoDropdownItem;

//# sourceMappingURL=go-dropdown-item.cjs.entry.js.map