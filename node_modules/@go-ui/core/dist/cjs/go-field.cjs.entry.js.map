{"file":"go-field.entry.cjs.js","mappings":"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","names":["hasSlot","initIdProps","warning","h","Host"],"sources":["src/components/form/go-field/go-field.scss?tag=go-field","src/components/form/go-field/go-field.tsx"],"sourcesContent":["go-field {\n display: block;\n}\n","import { Component, Host, h, Element, Prop, Watch, State } from '@stencil/core';\nimport { FormFieldProps } from '../../../interfaces';\nimport { hasSlot, initIdProps, warning } from '../../../utils';\n\n@Component({\n  tag: 'go-field',\n  styleUrl: 'go-field.scss',\n  shadow: false,\n})\nexport class GoField implements FormFieldProps {\n  @Element() el: HTMLElement;\n\n  @Prop() idPrefix: string;\n\n  @Prop() controlId: string;\n\n  /**\n   * DOM id for label\n   */\n  @Prop({ mutable: true })\n  labelId?: string;\n\n  /**\n   * DOM id for prefix\n   */\n  @Prop({ mutable: true })\n  prefixId?: string;\n\n  /**\n   * DOM id for suffix\n   */\n  @Prop({ mutable: true })\n  suffixId?: string;\n  /**\n   * DOM id for hint message\n   */\n  @Prop({ mutable: true })\n  hintId?: string;\n\n  /**\n   * DOM id for error\n   */\n  @Prop({ mutable: true })\n  errorId?: string;\n\n  /**\n   * Name of the input field\n   */\n  @Prop() name: string;\n\n  /**\n   * Label of the input field\n   */\n  @Prop() label: string;\n\n  /**\n   * If the input is disabled\n   */\n  @Prop() disabled?: boolean;\n  /**\n   * Hint message for the input\n   */\n  @Prop() hint?: string;\n  /**\n   * Error state of input, text provided will be shown as error message\n   */\n  @Prop() error?: boolean | string;\n  /**\n   * If this input is read-only\n   */\n  @Prop() readonly?: boolean;\n\n  /**\n   * Allow empty value for `error` attribute and show error state\n   */\n  @State() hasError = false;\n\n  /**\n   * If specified, an input element with `type=\"hidden\"` will be generated\n   * and this hiddenName prop will be used as the `name` of the hidden input\n   *\n   * use `hiddenInputValue` prop to set the value of that field\n   */\n  @Prop() hiddenInputName?: string;\n\n  /**\n   * Sets the value of the hidden input created by `hiddenInputName`\n   */\n  @Prop() hiddenInputValue?: string;\n\n  @Watch('error')\n  updateErrorState() {\n    this.hasError = !!this.error;\n  }\n\n  hasIconBefore: boolean;\n  hasIconAfter: boolean;\n  hasPrefix: boolean;\n  hasSuffix: boolean;\n  hasHintSlot: boolean;\n  hasLabelSlot: boolean;\n\n  componentWillLoad() {\n    this.hasIconBefore = hasSlot(this.el, 'icon-before');\n    this.hasIconAfter = hasSlot(this.el, 'icon-after');\n    this.hasPrefix = hasSlot(this.el, 'prefix');\n    this.hasSuffix = hasSlot(this.el, 'suffix');\n    this.hasHintSlot = hasSlot(this.el, 'hint');\n    this.hasLabelSlot = hasSlot(this.el, 'label');\n    initIdProps(this, this.el, ['label', 'prefix', 'suffix', 'hint', 'error'], this.idPrefix);\n    this.updateErrorState();\n  }\n\n  @Prop() controlElSelector = '.control';\n  controlEl: HTMLElement;\n  componentDidLoad() {\n    this.updateAttributes();\n  }\n  componentDidUpdate() {\n    this.updateAttributes();\n  }\n\n  updateAttributes() {\n    if (!this.controlEl) {\n      this.controlEl = this.el.querySelector(this.controlElSelector);\n      if (!this.controlEl) {\n        warning(\n          `Cannot find field control based on selector ${this.controlElSelector}. Make sure the element exists in the DOM`,\n        );\n        return;\n      }\n    }\n\n    const { hasPrefix, hasSuffix, prefixId, suffixId, labelId, hasHintSlot, hint, hintId, hasError, errorId } = this;\n\n    const labelledByIds = [];\n    if (hasPrefix) {\n      labelledByIds.push(prefixId);\n    }\n    labelledByIds.push(labelId);\n    if (hasSuffix) {\n      labelledByIds.push(suffixId);\n    }\n\n    const describedByIds = [];\n    if (hasHintSlot || hint) {\n      describedByIds.push(hintId);\n    }\n    if (hasError) {\n      describedByIds.push(errorId);\n    }\n    if (this.disabled) {\n      this.controlEl.setAttribute('disabled', 'true');\n      this.controlEl.setAttribute('aria-disabled', 'true');\n    } else {\n      this.controlEl.removeAttribute('disabled');\n      this.controlEl.removeAttribute('aria-disabled');\n    }\n    this.controlEl.setAttribute('aria-labelledby', labelledByIds.join(' '));\n    this.controlEl.setAttribute('aria-describedby', describedByIds.join(' '));\n  }\n\n  render() {\n    const {\n      controlId,\n      label,\n      hasLabelSlot,\n      hint,\n      disabled,\n      hasError,\n      error,\n      readonly,\n      hasIconAfter,\n      hasIconBefore,\n      hasPrefix,\n      hasSuffix,\n      hasHintSlot,\n      labelId,\n      hintId,\n      prefixId,\n      suffixId,\n      errorId,\n      hiddenInputName,\n      hiddenInputValue,\n    } = this;\n\n    const showLabel = hasLabelSlot || label;\n    const showHint = hasHintSlot || hint;\n    const showLabelWrapper = showLabel || showHint;\n    return (\n      <Host\n        class={{\n          'go-field': true,\n          'error': hasError,\n          'readonly': !!readonly,\n          'disabled': !!disabled,\n          'has-prefix': hasPrefix,\n          'has-suffix': hasSuffix,\n          'has-icon-before': hasIconBefore,\n          'has-icon-after': hasIconAfter,\n        }}>\n        {showLabelWrapper ? (\n          <div class=\"label-wrapper\">\n            {showLabel ? (\n              <label class=\"label\" htmlFor={controlId} id={labelId}>\n                {label}\n              </label>\n            ) : null}\n            {showHint ? (\n              <div class=\"hint\" id={hintId}>\n                <slot name=\"hint\">{hint}</slot>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n\n        <div class=\"control-wrapper\">\n          {hasPrefix ? (\n            <span class=\"prefix presuf\" aria-hidden=\"true\" id={prefixId}>\n              <slot name=\"prefix\"></slot>\n            </span>\n          ) : null}\n\n          {hasIconBefore ? (\n            <span class=\"control-icon icon-before\">\n              <slot name=\"icon-before\"></slot>\n            </span>\n          ) : null}\n          <slot></slot>\n\n          {hasSuffix ? (\n            <span class=\"suffix presuf\" aria-hidden=\"true\" id={suffixId}>\n              <slot name=\"suffix\"></slot>\n            </span>\n          ) : null}\n\n          {readonly || hasIconAfter ? (\n            <span class=\"control-icon icon-after\">\n              {readonly ? (\n                // prettier-ignore\n                <svg class=\"lock-icon\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\"><path d=\"M0 0h24v24H0V0z\"/><path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/></g><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/></svg>\n              ) : (\n                <slot name=\"icon-after\"></slot>\n              )}\n            </span>\n          ) : null}\n        </div>\n        {hasError ? (\n          <div id={errorId} class=\"error-msg\">\n            {error}\n          </div>\n        ) : null}\n\n        {hiddenInputName ? <input type=\"hidden\" name={hiddenInputName} value={hiddenInputValue} /> : null}\n      </Host>\n    );\n  }\n}\n"],"version":3}