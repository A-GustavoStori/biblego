{"file":"go-dropdown-menu.entry.cjs.js","mappings":"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","names":["uniqueId","h"],"sources":["src/components/go-dropdown-menu/go-dropdown-menu.scss?tag=go-dropdown-menu","src/components/go-dropdown-menu/go-dropdown-menu.tsx"],"sourcesContent":["@import '../../global/scss/dropdown/mixins';\ngo-dropdown-menu {\n  /**\n    @prop --dd-item-gap:\n      Gap between dropdown items\n      - default: 0\n  */\n  --dd-item-gap: 0;\n\n  .dropdown-menu-inner {\n    display: flex;\n    flex-direction: column;\n    gap: var(--dd-item-gap);\n  }\n\n  @include dropdown-item-vars;\n\n  [role='menuitem'] {\n    @include dropdown-item;\n  }\n    \n  go-dropdown-item {\n    &[disabled] {\n      [role='menuitem'] {\n        @include item-disabled-state;\n      }\n    }\n  }\n}\n","import { Component, h, Element, Prop, Method, Listen } from '@stencil/core';\nimport { DropdownProps } from '../../interfaces';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-dropdown-menu',\n  styleUrl: 'go-dropdown-menu.scss',\n  shadow: false,\n})\nexport class GoDropdownMenu implements DropdownProps {\n  @Element() el: HTMLElement;\n\n  /**\n   * @see [go-dropdown](go-dropdown#props)\n   */\n  @Prop() triggerSelector: string;\n  /**\n   * keep track of active state\n   */\n  @Prop({ reflect: true, mutable: true }) isActive: boolean = false;\n\n  /**\n   * customise width of dropdown menu\n   */\n  @Prop() width?: string;\n\n  /**\n   * DOM id for menu\n   */\n  @Prop({ mutable: true })\n  menuId?: string;\n\n  /**\n   * If persistent, the dropdown will not close by itself on interaction with elements inside the menu.\n   */\n  @Prop() persistent? = false;\n\n  triggerEl: HTMLElement;\n  dropdownEl: HTMLGoDropdownElement;\n  menuEl: HTMLElement;\n  menuItemEls?: HTMLElement[];\n  focusedMenuItemIndex = 0;\n  focusLastOnNextOpen = false;\n  /**\n   * open menu\n   * @param focusFirst if auto focus on first item\n   */\n  @Method()\n  async open() {\n    if (!this.dropdownEl.isActive) {\n      // open menu and focus on first item\n      this.dropdownEl.open();\n    }\n  }\n\n  @Method()\n  async close(focusBackToTrigger = false) {\n    this.dropdownEl.close(focusBackToTrigger);\n  }\n\n  componentWillLoad() {\n    this.triggerEl = document.querySelector(this.triggerSelector);\n    if (!this.menuId) {\n      this.menuId = uniqueId('go-dropdown-menu-');\n    }\n\n    this.setTriggerRoles();\n    this.addTriggerEventListeners();\n  }\n\n  componentDidLoad() {\n    this.addMenuItemEventListeners();\n  }\n\n  setTriggerRoles() {\n    this.triggerEl.setAttribute('aria-controls', this.menuId);\n  }\n  addTriggerEventListeners() {\n    this.triggerEl.addEventListener('click', () => {\n      if (this.isActive) {\n        this.close();\n      } else {\n        this.open();\n      }\n    });\n    this.triggerEl.addEventListener('keydown', (e) => {\n      if (!this.dropdownEl) {\n        return;\n      }\n      const key = e.key;\n      if (key === 'ArrowUp') {\n        this.focusLastOnNextOpen = true;\n        this.open();\n      }\n      if (key === 'ArrowDown') {\n        this.open();\n      }\n    });\n  }\n\n  addMenuItemEventListeners() {\n    if (!this.menuItemEls) {\n      this.menuItemEls = Array.from(this.menuEl.querySelectorAll('go-dropdown-item'));\n    }\n    if (!this.menuItemEls.length) {\n      // no `go-dropdown-item` found\n      return;\n    }\n\n    // up down arrow keys move focus between menu items\n    this.menuItemEls.forEach((item) => {\n      item.addEventListener('keydown', (e) => {\n        if (e.key === 'Tab') {\n          this.close();\n        }\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          this.focusedMenuItemIndex += 1;\n          if (this.focusedMenuItemIndex > this.menuItemEls.length - 1) {\n            this.focusedMenuItemIndex = 0;\n          }\n          this.focusMenuItem();\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          this.focusedMenuItemIndex -= 1;\n          if (this.focusedMenuItemIndex < 0) {\n            this.focusedMenuItemIndex = this.menuItemEls.length - 1;\n          }\n          this.focusMenuItem();\n        }\n      });\n    });\n  }\n\n  focusMenuItem() {\n    this.menuItemEls.forEach((dropdownItem: HTMLGoDropdownItemElement, i) => {\n      if (i === this.focusedMenuItemIndex) {\n        dropdownItem.focusInControl();\n      } else {\n        dropdownItem.focusOutControl();\n      }\n    });\n  }\n  handleDropdownOpened() {\n    this.isActive = true;\n    if (this.focusLastOnNextOpen) {\n      this.focusedMenuItemIndex = this.menuItemEls.length - 1;\n      this.focusLastOnNextOpen = false;\n    } else {\n      this.focusedMenuItemIndex = 0;\n    }\n\n    this.focusMenuItem();\n  }\n\n  handleDropdownClosed() {\n    this.isActive = false;\n  }\n\n  @Listen('selected')\n  handleItemSelected() {\n    if (!this.persistent) {\n      this.close();\n    }\n  }\n\n  render() {\n    const { triggerSelector, isActive, width, menuId } = this;\n    const dropdownProps = {\n      triggerSelector,\n      isActive,\n      width,\n    };\n    return (\n      <go-dropdown\n        ref={(el) => {\n          this.dropdownEl = el;\n        }}\n        noTriggerClickHandler={true}\n        onOpened={() => this.handleDropdownOpened()}\n        onClosed={() => this.handleDropdownClosed()}\n        {...dropdownProps}>\n        <slot name=\"prefix\"></slot>\n        <div\n          role=\"menu\"\n          class=\"dropdown-menu-inner\"\n          id={menuId}\n          ref={(el) => {\n            this.menuEl = el;\n          }}>\n          <slot></slot>\n        </div>\n        <slot name=\"suffix\"></slot>\n      </go-dropdown>\n    );\n  }\n}\n"],"version":3}