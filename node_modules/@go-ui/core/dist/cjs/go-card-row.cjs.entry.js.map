{"file":"go-card-row.entry.cjs.js","mappings":"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","names":["hasSlot","moveEl","h"],"sources":["src/patterns/go-card-row/go-card-row.scss?tag=go-card-row","src/patterns/go-card-row/go-card-row.tsx"],"sourcesContent":["go-card-row {\n  --card-row-gap: 1rem;\n\n  align-items: stretch;\n\n  --go-col-gap: var(--card-row-gap);\n  &.no-stretch {\n    align-items: flex-start;\n  }\n\n  go-card {\n    opacity: 0;\n    max-height: 200px;\n    &.loaded {\n      opacity: 1;\n      max-height: inherit;\n    }\n  }\n  .stagger {\n    go-card.loaded {\n      opacity: 0;\n    }\n  }\n\n  .card-col {\n    margin-bottom: var(--card-row-gap);\n  }\n}\n","import { Component, h, Element, Prop } from '@stencil/core';\nimport { moveEl } from '../../utils/dom';\nimport { hasSlot } from '../../utils/helper';\n\n/**\n * @slot default - Default slot, to be filled with `go-card` elements\n * @slot heading - Overwrite default `h2` heading for this card row section\n */\n@Component({\n  tag: 'go-card-row',\n  styleUrl: 'go-card-row.scss',\n  shadow: false,\n})\nexport class GoCardRow {\n  @Element() el: HTMLElement;\n\n  /**\n   * By default, `go-card-row` stretches all cards inside to the tallest card in view, unless this property is set to true.\n   */\n  @Prop() noStretch = false;\n\n  /**\n   * Number of columns from mobile breakpoint and up\n   */\n  @Prop() cols = 1;\n\n  /**\n   * Number of columns from tablet breakpoint and up\n   */\n  @Prop() colsTablet = 2;\n\n  /**\n   * Number of columns from desktop breakpoint and up\n   */\n  @Prop() colsDesktop = 3;\n\n  /**\n   * Number of columns from large breakpoint and up\n   */\n  @Prop() colsLarge = 4;\n\n  /**\n   * If set, cards will fade in one by one with the specified delay in milliseconds when they are in the viewport.\n   * uses `IntersectionObserver`, [see browser compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n   */\n  @Prop() stagger?: number;\n\n  /**\n   * If true, cards within the component will be wrapped inside a carousel\n   */\n  // @Prop() carousel = false;\n\n  /**\n   * Heading for this card row section\n   */\n  @Prop() heading?: string;\n\n  @Prop() headingTag?: string = 'h2';\n\n  /**\n   * View more link href\n   */\n  @Prop() moreLinkHref?: string;\n\n  /**\n   * View more link text\n   */\n  @Prop() moreLinkText?: string;\n\n  hasHeadingSlot: boolean;\n\n  /**\n   * the DOM ref of direct parent of the cards\n   */\n  rowEl: HTMLElement;\n\n  /**\n   * class list for each card\n   */\n  cardClasses = ['card-col'];\n\n  /**\n   * intersection observer to check if cards are in view\n   */\n  inViewObserver: IntersectionObserver;\n\n  componentWillLoad() {\n    // check if heading slot is used\n    this.hasHeadingSlot = hasSlot(this.el, 'heading');\n\n    // initialise intersection observer\n    if (this.stagger) {\n      this.inViewObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry, i) => {\n            if (!entry.isIntersecting) {\n              return;\n            }\n            const card = entry.target as HTMLElement;\n            // add stagger fade in effect\n            card.classList.add('stagger-fade-in');\n            card.style.cssText = `--stagger-delay: ${i * this.stagger}ms`;\n            // stop observing\n            this.inViewObserver.unobserve(card);\n          });\n        },\n        {\n          threshold: 0.2, // >= 1/5th of card is in view\n        },\n      );\n    }\n  }\n\n  async componentDidLoad() {\n    const { cols, colsTablet, colsDesktop, colsLarge } = this;\n\n    // mobile cols\n    this.cardClasses.push(`col-${Math.ceil(12 / cols)}`);\n    this.cardClasses.push(`col-tablet-${Math.ceil(12 / colsTablet)}`);\n    this.cardClasses.push(`col-desktop-${Math.ceil(12 / colsDesktop)}`);\n    this.cardClasses.push(`col-large-${Math.ceil(12 / colsLarge)}`);\n    this.loadCards();\n  }\n\n  loadCards() {\n    const newCards = this.el.querySelectorAll('go-card:not(.loaded)');\n    newCards.forEach((card: HTMLGoCardElement) => {\n      this.prepareCard(card, this.cardClasses);\n    });\n  }\n\n  prepareCard(card: HTMLGoCardElement, colClasses: string[]) {\n    // create wrapper container\n    const wrapper = document.createElement('div');\n    wrapper.classList.add(...colClasses);\n\n    // insert wrapper before el in the DOM tree\n    // card.parentNode.insertBefore(wrapper, card);\n\n    // move el into wrapper\n    moveEl(card, wrapper);\n\n    card.classList.add('loaded');\n    // move card into correct element\n    moveEl(wrapper, this.rowEl);\n\n    if (this.stagger) {\n      this.inViewObserver.observe(card);\n    }\n  }\n\n  render() {\n    const { noStretch, stagger, heading, moreLinkHref, moreLinkText, hasHeadingSlot, headingTag } = this;\n    const headingRowProps = {\n      heading,\n      moreLinkHref,\n      moreLinkText,\n      headingTag,\n    };\n    return (\n      <section>\n        <go-heading-row {...headingRowProps}>{hasHeadingSlot ? <slot name=\"heading\"></slot> : null}</go-heading-row>\n        <div\n          class={{\n            'card-row row': true,\n            'no-stretch': noStretch,\n            'stagger': !!stagger,\n          }}\n          ref={(el) => (this.rowEl = el)}>\n          <slot></slot>\n        </div>\n      </section>\n    );\n  }\n}\n"],"version":3}