'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-348d3f4f.js');
const helper = require('./helper-c1931cd5.js');
const uniqueId = require('./uniqueId-93e4ecef.js');
require('./index-c48c451e.js');

const goSkipLinkCss = "go-skip-link{--skip-link-padding:1rem 2rem;--skip-link-bg-color:var(--go-color-secondary-700);--skip-link-text-color:var(--go-color-lightest);position:fixed;top:1rem;left:1rem}go-skip-link a,go-skip-link a:focus-visible{display:block;padding:var(--skip-link-padding);background:var(--skip-link-bg-color);color:var(--skip-link-text-color);box-shadow:var(--shadow-2)}";
const GoSkipLinkStyle0 = goSkipLinkCss;

const GoSkipLink = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        /**
         * records if original target element has tabindex attribute set, if so, do not touch it
         */
        this.hasTabIndex = false;
        this.target = 'main';
        this.href = undefined;
    }
    componentWillLoad() {
        // get target element
        // check if id exists
        // if not, generate random id and set it in the link href
        const targetEl = document.querySelector(this.target);
        if (!targetEl) {
            helper.warning(`[go-skip-link] target ${this.target} not found.`);
            return;
        }
        if (targetEl.hasAttribute('tabindex')) {
            this.hasTabIndex = true;
        }
        if (targetEl.id) {
            this.setTabIndex(targetEl, targetEl.id);
            return;
        }
        // generate a random id then set href
        const id = uniqueId.uniqueId('skip-link-target-');
        targetEl.id = id;
        this.setTabIndex(targetEl, id);
    }
    setTabIndex(targetEl, id) {
        this.href = `#${id}`;
        if (!this.hasTabIndex) {
            targetEl.setAttribute('tabindex', '-1');
        }
    }
    render() {
        const { href } = this;
        return (index.h(index.Host, { key: '142d6a31279bf07c74991b29663317f8478f5cce' }, index.h("a", { key: 'd76db3a9e306eb1297f7aed2ae14f7f39ca25fd9', href: href, class: "visually-hidden-focusable" }, index.h("slot", { key: '7ecbda922a7b31e3d0aea151f4acaed6b178ed8c' }))));
    }
    get el() { return index.getElement(this); }
};
GoSkipLink.style = GoSkipLinkStyle0;

exports.go_skip_link = GoSkipLink;

//# sourceMappingURL=go-skip-link.cjs.entry.js.map