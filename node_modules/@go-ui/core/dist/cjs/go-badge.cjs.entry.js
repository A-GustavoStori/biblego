'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-348d3f4f.js');

const goBadgeCss = "go-badge{--badge-font-size:var(--go-size--1);--badge-size:2em;--badge-bg-color:var(--go-color-critical-600);--badge-fg-color:var(--go-color-lightest);--badge-dot-size:0.75rem;position:relative;display:inline-block}go-badge .badge-count{position:absolute;top:0;right:0;transform:translate(50%, -50%);font-size:var(--badge-font-size);font-variant-numeric:tabular-nums;text-align:center;min-width:var(--badge-size);min-height:var(--badge-size);padding:0 0.5rem;height:var(--badge-size);border-radius:var(--radius-round);color:var(--badge-fg-color);background-color:var(--badge-bg-color);font-weight:700;display:flex;align-items:center;justify-content:center;line-height:1}go-badge .badge-count.dot-only{min-width:var(--badge-dot-size);min-height:var(--badge-dot-size);font-size:0;padding:0}";
const GoBadgeStyle0 = goBadgeCss;

const GoBadge = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.count = undefined;
        this.min = 0;
        this.max = 99;
        this.label = undefined;
        this.dotOnly = false;
    }
    render() {
        const { count, min, max, label, dotOnly } = this;
        let displayCount = `${count}`;
        if (count < min) {
            return index.h("slot", null);
        }
        if (count > max) {
            displayCount = `${max}+`;
        }
        return (index.h(index.Host, null, index.h("slot", null), index.h("div", { class: { 'badge-count': true, 'dot-only': dotOnly } }, label ? index.h("span", { class: "visually-hidden" }, label) : null, count && !dotOnly ? index.h("span", { "aria-hidden": "true" }, displayCount) : null)));
    }
    get el() { return index.getElement(this); }
};
GoBadge.style = GoBadgeStyle0;

exports.go_badge = GoBadge;

//# sourceMappingURL=go-badge.cjs.entry.js.map