{"file":"form-6e13a9ec.js","mappings":";;;;;MAGa,cAAc,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;MAEpF,cAAc,GAAG;IAC5B,QAAQ;IACR,OAAO;IACP,OAAO;IACP,WAAW;IACX,SAAS;IACT,UAAU;IACV,UAAU;IACV,QAAQ;IACR,SAAS;IACT,MAAM;IACN,OAAO;IACP,UAAU;IACV,MAAM;IACN,UAAU;EACV;SAEc,cAAc,CAAC,YAAY;IACzC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO;QAC7B,KAAK,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;KACxC,CAAC,CAAC;IACH,MAAM,cAAc,GAAG;;QAErB,QAAQ,EAAE,QAAQ;KACnB,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;QACtC,MAAM,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;QAC5C,KAAK,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,eAAe,CAAC,CAAC;KAC5C,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC;SACe,cAAc,CAAC,MAAM;IACnC,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,cAAc,CAAC,OAAO,CAAC,CAAC,QAAQ;QAC9B,MAAM,CAAC,QAAQ,CAAC,GAAGA,cAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAC9C,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;SACe,oBAAoB,CAAC,YAAY,EAAE,WAAW,GAAG,EAAE;IACjE,OAAOC,4BAAqB,CAAC,YAAY,EAAE,CAAC,GAAG,cAAc,CAAC,GAAG,CAACC,mBAAS,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC;AACjG;;;;;;;;","names":["hasSlot","inheritComponentAttrs","kebabCase"],"sources":["src/utils/form.ts"],"sourcesContent":["import { hasSlot, inheritComponentAttrs } from './helper';\nimport { kebabCase } from 'lodash-es';\n\nexport const fieldSlotNames = ['icon-before', 'icon-after', 'prefix', 'suffix', 'hint', 'label'];\n\nexport const fieldPropNames = [\n  'prefix',\n  'value',\n  'error',\n  'controlId',\n  'labelId',\n  'prefixId',\n  'suffixId',\n  'hintId',\n  'errorId',\n  'name',\n  'label',\n  'disabled',\n  'hint',\n  'readonly',\n];\n\nexport function loadFieldProps(compInstance) {\n  let props = {};\n  fieldPropNames.forEach((propKey) => {\n    props[propKey] = compInstance[propKey];\n  });\n  const specialPropMap = {\n    // controlId: 'id',\n    idPrefix: 'prefix',\n  };\n  Object.keys(specialPropMap).forEach((key) => {\n    const instancePropKey = specialPropMap[key];\n    props[key] = compInstance[instancePropKey];\n  });\n  return props;\n}\nexport function loadFieldSlots(rootEl) {\n  let result = {};\n  fieldSlotNames.forEach((slotName) => {\n    result[slotName] = hasSlot(rootEl, slotName);\n  });\n  return result;\n}\nexport function inheritNonFieldAttrs(compInstance, ignoreAttrs = []) {\n  return inheritComponentAttrs(compInstance, [...fieldPropNames.map(kebabCase), ...ignoreAttrs]);\n}\n"],"version":3}