import { Host, h } from "@stencil/core";
import { warning, hasSlot } from "../../utils/helper";
import { parseJsonProp } from "../../utils";
export class GoFooter {
    constructor() {
        this.hasCopyRightSlot = false;
        this.hasFooterBottomSlot = false;
        this.links = undefined;
        this.navLabel = 'Footer';
        this.navCols = 1;
        this.navColsTablet = 3;
        this.navColsDesktop = 4;
        this.listHeadingTag = 'h4';
        this.navItems = undefined;
    }
    async watchItems(newItems) {
        this.navItems = parseJsonProp(newItems);
    }
    componentWillLoad() {
        var _a;
        this.navItems = parseJsonProp(this.links);
        if (((_a = this.navItems) === null || _a === void 0 ? void 0 : _a.length) > 0 && !this.navLabel) {
            warning('Please add a unique "nav-label" in order to put navigation items into the nav landmark for better accessibility.');
        }
        // check if copyright slot is empty
        this.hasCopyRightSlot = hasSlot(this.el, 'copyright');
        this.hasFooterBottomSlot = hasSlot(this.el, 'footer-bottom');
    }
    render() {
        const { navItems, navLabel, hasCopyRightSlot, hasFooterBottomSlot, navCols, navColsTablet, navColsDesktop } = this;
        return (h(Host, { key: '80b249ff0ad0f4968770ef8d5831ddb689a03e0c' }, h("footer", { key: 'bc860de5eec9caf5554a7a0994b7d6818c8fff7b' }, navItems ? (h("div", { class: "container nav-container" }, h("nav", { "aria-label": navLabel }, h("div", { class: "row" }, navItems === null || navItems === void 0 ? void 0 : navItems.map((item) => (h("go-nav-list", { block: true, class: `col-${12 / navCols} col-tablet-${12 / navColsTablet} col-desktop-${12 / navColsDesktop}`, items: item === null || item === void 0 ? void 0 : item.children }, h("go-nav-link", { block: true, slot: "header", item: item, showArrow: true })))))))) : (h("slot", null)), hasFooterBottomSlot ? (h("div", { class: "container" }, h("div", { class: "footer-bottom" }, h("slot", { name: "footer-bottom" })))) : null, hasCopyRightSlot ? (h("div", { class: "container" }, h("div", { class: "copyright" }, h("slot", { name: "copyright" })))) : null)));
    }
    static get is() { return "go-footer"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-footer.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-footer.css"]
        };
    }
    static get properties() {
        return {
            "links": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "INavItem[] | string",
                    "resolved": "INavItem[] | string",
                    "references": {
                        "INavItem": {
                            "location": "import",
                            "path": "../../interfaces",
                            "id": "src/interfaces/index.ts::INavItem"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Navigation links to be displayed."
                },
                "attribute": "links",
                "reflect": false
            },
            "navLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Label for navigation"
                },
                "attribute": "nav-label",
                "reflect": false,
                "defaultValue": "'Footer'"
            },
            "navCols": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Number of navigation columns"
                },
                "attribute": "nav-cols",
                "reflect": false,
                "defaultValue": "1"
            },
            "navColsTablet": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Number of navigation columns for tablet and up"
                },
                "attribute": "nav-cols-tablet",
                "reflect": false,
                "defaultValue": "3"
            },
            "navColsDesktop": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Number of navigation columns for desktop and up"
                },
                "attribute": "nav-cols-desktop",
                "reflect": false,
                "defaultValue": "4"
            },
            "listHeadingTag": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Heading tag for nav list"
                },
                "attribute": "list-heading-tag",
                "reflect": false,
                "defaultValue": "'h4'"
            }
        };
    }
    static get states() {
        return {
            "navItems": {}
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "links",
                "methodName": "watchItems"
            }];
    }
}
//# sourceMappingURL=go-footer.js.map
