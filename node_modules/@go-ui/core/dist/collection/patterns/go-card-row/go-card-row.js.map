{"version":3,"file":"go-card-row.js","sourceRoot":"","sources":["../../../src/patterns/go-card-row/go-card-row.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, Prop } from '@stencil/core';\nimport { moveEl } from '../../utils/dom';\nimport { hasSlot } from '../../utils/helper';\n\n/**\n * @slot default - Default slot, to be filled with `go-card` elements\n * @slot heading - Overwrite default `h2` heading for this card row section\n */\n@Component({\n  tag: 'go-card-row',\n  styleUrl: 'go-card-row.scss',\n  shadow: false,\n})\nexport class GoCardRow {\n  @Element() el: HTMLElement;\n\n  /**\n   * By default, `go-card-row` stretches all cards inside to the tallest card in view, unless this property is set to true.\n   */\n  @Prop() noStretch = false;\n\n  /**\n   * Number of columns from mobile breakpoint and up\n   */\n  @Prop() cols = 1;\n\n  /**\n   * Number of columns from tablet breakpoint and up\n   */\n  @Prop() colsTablet = 2;\n\n  /**\n   * Number of columns from desktop breakpoint and up\n   */\n  @Prop() colsDesktop = 3;\n\n  /**\n   * Number of columns from large breakpoint and up\n   */\n  @Prop() colsLarge = 4;\n\n  /**\n   * If set, cards will fade in one by one with the specified delay in milliseconds when they are in the viewport.\n   * uses `IntersectionObserver`, [see browser compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n   */\n  @Prop() stagger?: number;\n\n  /**\n   * If true, cards within the component will be wrapped inside a carousel\n   */\n  // @Prop() carousel = false;\n\n  /**\n   * Heading for this card row section\n   */\n  @Prop() heading?: string;\n\n  @Prop() headingTag?: string = 'h2';\n\n  /**\n   * View more link href\n   */\n  @Prop() moreLinkHref?: string;\n\n  /**\n   * View more link text\n   */\n  @Prop() moreLinkText?: string;\n\n  hasHeadingSlot: boolean;\n\n  /**\n   * the DOM ref of direct parent of the cards\n   */\n  rowEl: HTMLElement;\n\n  /**\n   * class list for each card\n   */\n  cardClasses = ['card-col'];\n\n  /**\n   * intersection observer to check if cards are in view\n   */\n  inViewObserver: IntersectionObserver;\n\n  componentWillLoad() {\n    // check if heading slot is used\n    this.hasHeadingSlot = hasSlot(this.el, 'heading');\n\n    // initialise intersection observer\n    if (this.stagger) {\n      this.inViewObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry, i) => {\n            if (!entry.isIntersecting) {\n              return;\n            }\n            const card = entry.target as HTMLElement;\n            // add stagger fade in effect\n            card.classList.add('stagger-fade-in');\n            card.style.cssText = `--stagger-delay: ${i * this.stagger}ms`;\n            // stop observing\n            this.inViewObserver.unobserve(card);\n          });\n        },\n        {\n          threshold: 0.2, // >= 1/5th of card is in view\n        },\n      );\n    }\n  }\n\n  async componentDidLoad() {\n    const { cols, colsTablet, colsDesktop, colsLarge } = this;\n\n    // mobile cols\n    this.cardClasses.push(`col-${Math.ceil(12 / cols)}`);\n    this.cardClasses.push(`col-tablet-${Math.ceil(12 / colsTablet)}`);\n    this.cardClasses.push(`col-desktop-${Math.ceil(12 / colsDesktop)}`);\n    this.cardClasses.push(`col-large-${Math.ceil(12 / colsLarge)}`);\n    this.loadCards();\n  }\n\n  loadCards() {\n    const newCards = this.el.querySelectorAll('go-card:not(.loaded)');\n    newCards.forEach((card: HTMLGoCardElement) => {\n      this.prepareCard(card, this.cardClasses);\n    });\n  }\n\n  prepareCard(card: HTMLGoCardElement, colClasses: string[]) {\n    // create wrapper container\n    const wrapper = document.createElement('div');\n    wrapper.classList.add(...colClasses);\n\n    // insert wrapper before el in the DOM tree\n    // card.parentNode.insertBefore(wrapper, card);\n\n    // move el into wrapper\n    moveEl(card, wrapper);\n\n    card.classList.add('loaded');\n    // move card into correct element\n    moveEl(wrapper, this.rowEl);\n\n    if (this.stagger) {\n      this.inViewObserver.observe(card);\n    }\n  }\n\n  render() {\n    const { noStretch, stagger, heading, moreLinkHref, moreLinkText, hasHeadingSlot, headingTag } = this;\n    const headingRowProps = {\n      heading,\n      moreLinkHref,\n      moreLinkText,\n      headingTag,\n    };\n    return (\n      <section>\n        <go-heading-row {...headingRowProps}>{hasHeadingSlot ? <slot name=\"heading\"></slot> : null}</go-heading-row>\n        <div\n          class={{\n            'card-row row': true,\n            'no-stretch': noStretch,\n            'stagger': !!stagger,\n          }}\n          ref={(el) => (this.rowEl = el)}>\n          <slot></slot>\n        </div>\n      </section>\n    );\n  }\n}\n"]}