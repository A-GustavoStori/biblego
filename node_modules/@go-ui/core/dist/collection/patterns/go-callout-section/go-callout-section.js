import { h } from "@stencil/core";
import { hasSlot } from "../../utils";
/**
 * @slot media - slot for media content (similar to [go-card](/docs/components/go-card#go-card-slots))
 * @slot heading - slot for heading text
 * @slot description - slot for description text
 * @slot actions - slot for actions
 */
export class GoCalloutSection {
    constructor() {
        this.parts = {
            media: false,
            heading: false,
            description: false,
            actions: false,
        };
        this.heading = undefined;
        this.headingTag = 'h2';
        this.description = undefined;
        this.imgSrc = undefined;
        this.imgAlt = '';
        this.imgPos = 'start';
    }
    componentWillLoad() {
        Object.keys(this.parts).forEach((key) => {
            this.parts[key] = this.shouldShow(key);
        });
    }
    shouldShow(key) {
        const isSlotPresent = hasSlot(this.el, key);
        if (key === 'heading') {
            return isSlotPresent || !!this.heading;
        }
        if (key === 'media') {
            return isSlotPresent || !!this.imgSrc;
        }
        if (key === 'description') {
            return isSlotPresent || !!this.description;
        }
        return isSlotPresent;
    }
    render() {
        const { parts, heading, headingTag: HeadingTag, description, imgSrc, imgAlt, imgPos } = this;
        return (h("div", { key: '2373434ae3e2d592367bcc8dbc3c1af1338717e6', class: { callout: true, reverse: imgPos === 'end' } }, parts.media ? (h("div", { class: "media" }, h("slot", { name: "media" }, h("img", { src: imgSrc, alt: imgAlt })))) : null, h("div", { key: '44c7a7c9342a9d281c5a155aeb4602fb183b4bb9', class: "text" }, parts.heading ? (h("div", { class: "heading" }, h("slot", { name: "heading" }, h(HeadingTag, { class: "heading-text" }, heading)))) : null, parts.description ? (h("div", { class: "description" }, h("slot", { name: "description" }, h("div", { innerHTML: description })))) : null, parts.actions ? (h("div", { class: "actions" }, h("slot", { name: "actions" }))) : null)));
    }
    static get is() { return "go-callout-section"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-callout-section.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-callout-section.css"]
        };
    }
    static get properties() {
        return {
            "heading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Heading text"
                },
                "attribute": "heading",
                "reflect": false
            },
            "headingTag": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "HTML tag to use for heading"
                },
                "attribute": "heading-tag",
                "reflect": false,
                "defaultValue": "'h2'"
            },
            "description": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Description text"
                },
                "attribute": "description",
                "reflect": false
            },
            "imgSrc": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Url of image"
                },
                "attribute": "img-src",
                "reflect": false
            },
            "imgAlt": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Alt text of image (default '' which marks the image decorative)"
                },
                "attribute": "img-alt",
                "reflect": false,
                "defaultValue": "''"
            },
            "imgPos": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'start' | 'end'",
                    "resolved": "\"end\" | \"start\"",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Image position, possible values are `start` and `end`"
                },
                "attribute": "img-pos",
                "reflect": false,
                "defaultValue": "'start'"
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=go-callout-section.js.map
