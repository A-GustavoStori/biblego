import { Host, h } from "@stencil/core";
import { watchDevice } from "../../utils/match-media";
import { hasSlot } from "../../utils/helper";
/**
 * @slot intro - Hero section intro text
 * @slot main - Main section
 */
export class GoContentLayout {
    constructor() {
        this.hasSidebar = false;
        this.pageHeading = undefined;
        this.preHeading = undefined;
        this.intro = undefined;
        this.breadcrumbs = undefined;
        this.heroImgSrc = undefined;
        this.heroImgAlt = undefined;
        this.noHero = false;
        this.toc = undefined;
        this.tocProps = undefined;
        this.sidebarMobilePosition = 'start';
        this.sidebarDesktopPosition = 'start';
        this.sidebarSticky = false;
        this.computedSidebarPosition = null;
    }
    async initToc() {
        if (this.tocEl) {
            await this.tocEl.init();
        }
    }
    async componentWillLoad() {
        this.hasSidebar = hasSlot(this.el, 'sidebar');
        // add resize observer to toggle between mobile and desktop
        watchDevice((device) => {
            const { sidebarMobilePosition, sidebarDesktopPosition } = this;
            const deviceSidebarPosition = {
                mobile: sidebarMobilePosition,
                tablet: sidebarMobilePosition,
                desktop: sidebarDesktopPosition,
                large: sidebarDesktopPosition,
            };
            this.computedSidebarPosition = deviceSidebarPosition[device];
        });
    }
    adjustSidebarPosition(pos) {
        var _a;
        if (!this.hasSidebar || !this.sidebarTemplate) {
            return;
        }
        const tempSidebar = this.sidebarTemplate;
        tempSidebar.style.display = 'block';
        tempSidebar.setAttribute('aria-hidden', 'false');
        if (pos === 'start') {
            this.sidebarContainerStart.appendChild(tempSidebar);
        }
        else {
            (_a = this.sidebarContainerEnd) === null || _a === void 0 ? void 0 : _a.appendChild(tempSidebar);
        }
    }
    componentDidLoad() {
        this.initToc();
    }
    render() {
        const { pageHeading, intro, preHeading, breadcrumbs, toc, tocProps, hasSidebar, computedSidebarPosition, sidebarSticky: sticky, noHero } = this;
        const classes = {
            start: computedSidebarPosition === 'start'
                ? {
                    'content-sidebar col-12 col-desktop-3': true,
                    sticky,
                }
                : null,
            end: computedSidebarPosition === 'end'
                ? {
                    'content-sidebar col-12 col-desktop-3 offset-desktop-1': true,
                    sticky,
                }
                : null,
        };
        return (h(Host, { key: '0688967fd783071d4a6fbf02263310904c7583b5' }, h("div", { key: '13d3bae3121425bb14fe10e84d30f653c3c1786c', ref: (el) => (this.sidebarTemplate = el), id: "sidebar-template", "aria-hidden": true, style: { display: 'none' } }, h("div", { key: '829f913334f4d69ea0737940640a49e869a173e5', class: { 'content-sidebar': true, sticky } }, toc && h("go-toc", Object.assign({}, tocProps, { ref: (el) => (this.tocEl = el) })), h("slot", { key: '531b9967e4f62ca4ceeafbf636ce47c486130683', name: "sidebar" }))), !noHero && (h("go-hero", { breadcrumbs: breadcrumbs, preHeading: preHeading, heading: pageHeading }, h("slot", { name: "full-width-bg" }), h("slot", { name: "intro" }, h("p", null, intro)))), h("div", { key: 'c4af2ec74840aecafaef818a8b56b486e83bdfeb', class: "container content-container" }, h("div", { key: '00f16676c7431e611e78461a8277770978c35fd5', class: "row" }, hasSidebar && h("aside", { ref: (el) => (this.sidebarContainerStart = el), class: classes.start }), h("main", { key: '5ca38737fcc9dbd354eedab4bbdc184e56932951', class: {
                'col-12 col-desktop-8 content-main': true,
                'offset-desktop-1': hasSidebar && computedSidebarPosition === 'start',
            } }, !hasSidebar && toc && h("go-toc", Object.assign({}, tocProps, { ref: (el) => (this.tocEl = el) })), h("slot", { key: '63183f5095c67abbde34e7f0958e2d7bacede424' })), hasSidebar && h("aside", { ref: (el) => (this.sidebarContainerEnd = el), class: classes.end })))));
    }
    static get is() { return "go-content-layout"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-content-layout.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-content-layout.css"]
        };
    }
    static get properties() {
        return {
            "pageHeading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "page-heading",
                "reflect": false
            },
            "preHeading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "pre-heading",
                "reflect": false
            },
            "intro": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "intro",
                "reflect": false
            },
            "breadcrumbs": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "INavItem[] | string",
                    "resolved": "INavItem[] | string",
                    "references": {
                        "INavItem": {
                            "location": "import",
                            "path": "../../interfaces",
                            "id": "src/interfaces/index.ts::INavItem"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "breadcrumbs",
                "reflect": false
            },
            "heroImgSrc": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "hero-img-src",
                "reflect": false
            },
            "heroImgAlt": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "hero-img-alt",
                "reflect": false
            },
            "noHero": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "no hero banner"
                },
                "attribute": "no-hero",
                "reflect": false,
                "defaultValue": "false"
            },
            "toc": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "If the \"On this page\" table of content section should be displayed"
                },
                "attribute": "toc",
                "reflect": false
            },
            "tocProps": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "TocProps",
                    "resolved": "TocProps",
                    "references": {
                        "TocProps": {
                            "location": "import",
                            "path": "../../components/go-toc/go-toc",
                            "id": "src/components/go-toc/go-toc.tsx::TocProps"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Props to pass into the table of content ([see `go-toc` props](/docs/components/go-toc#go-toc-props))"
                }
            },
            "sidebarMobilePosition": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "SidebarPosition",
                    "resolved": "\"end\" | \"start\"",
                    "references": {
                        "SidebarPosition": {
                            "location": "local",
                            "path": "/home/runner/work/go-ui/go-ui/packages/core/src/patterns/go-content-layout/go-content-layout.tsx",
                            "id": "src/patterns/go-content-layout/go-content-layout.tsx::SidebarPosition"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "sidebar position on mobile screens\npossible values are `start` and `end`"
                },
                "attribute": "sidebar-mobile-position",
                "reflect": false,
                "defaultValue": "'start'"
            },
            "sidebarDesktopPosition": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "SidebarPosition",
                    "resolved": "\"end\" | \"start\"",
                    "references": {
                        "SidebarPosition": {
                            "location": "local",
                            "path": "/home/runner/work/go-ui/go-ui/packages/core/src/patterns/go-content-layout/go-content-layout.tsx",
                            "id": "src/patterns/go-content-layout/go-content-layout.tsx::SidebarPosition"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "sidebar position on desktop screens\npossible values are `start` and `end`"
                },
                "attribute": "sidebar-desktop-position",
                "reflect": false,
                "defaultValue": "'start'"
            },
            "sidebarSticky": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "If sidebar should be sticky"
                },
                "attribute": "sidebar-sticky",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get states() {
        return {
            "computedSidebarPosition": {}
        };
    }
    static get methods() {
        return {
            "initToc": {
                "complexType": {
                    "signature": "() => Promise<void>",
                    "parameters": [],
                    "references": {
                        "Promise": {
                            "location": "global",
                            "id": "global::Promise"
                        }
                    },
                    "return": "Promise<void>"
                },
                "docs": {
                    "text": "",
                    "tags": []
                }
            }
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "computedSidebarPosition",
                "methodName": "adjustSidebarPosition"
            }];
    }
}
//# sourceMappingURL=go-content-layout.js.map
