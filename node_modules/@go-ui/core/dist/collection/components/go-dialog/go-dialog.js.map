{"version":3,"file":"go-dialog.js","sourceRoot":"","sources":["../../../src/components/go-dialog/go-dialog.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AAOrC,MAAM,OAAO,QAAQ;;QAqBnB,6FAA6F;QAC7F,cAAS,GAAW,QAAQ,CAAC,gBAAgB,CAAC,CAAC;sBAjBW,KAAK;0BAKjC,KAAK;;0BASL,IAAI;;IAQlC,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAGD,KAAK,CAAC,IAAI;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAGD,kBAAkB,CAAC,QAAiB;QAClC,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,yCAAyC;IACzC,kBAAkB;QAChB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QACvE,OAAO,CACL,mEACE,KAAK,EAAC,WAAW,EACjB,UAAU,EAAE,UAAU,EACtB,IAAI,EAAC,QAAQ,gBACF,MAAM,qBACA,SAAS,EAC1B,MAAM,EAAE,MAAM,iBACD,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EACtC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAClC,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC/C,4DAAK,KAAK,EAAC,iBAAiB,EAAC,EAAE,EAAE,SAAS;gBACxC,6DAAM,IAAI,EAAC,SAAS;oBAClB,EAAC,CAAC,qDAAC,KAAK,EAAC,SAAS,IAAE,OAAO,CAAK,CAC3B;gBACN,CAAC,UAAU,CAAC,CAAC,CAAC,CACb,iBACE,KAAK,EAAC,WAAW,EACjB,IAAI,QACJ,IAAI,QACJ,KAAK,QACL,OAAO,EAAC,MAAM,EACd,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,gBAChB,cAAc;oBACzB,0BACc,MAAM,EAClB,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,cAAc,kBACR,GAAG,oBACD,OAAO,qBACN,OAAO,EACvB,OAAO,EAAC,WAAW;wBACnB,YAAM,CAAC,EAAC,sBAAsB,GAAG,CAC7B,CACI,CACb,CAAC,CAAC,CAAC,IAAI,CACJ;YACN,8DAAa,CACF,CACd,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Element, Prop, Method, Watch } from '@stencil/core';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-dialog',\n  styleUrl: 'go-dialog.scss',\n  shadow: false,\n})\nexport class GoDialog {\n  @Element() el: HTMLElement;\n  /**\n   * If this dialog is active\n   */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n   * If persistent, the overlay will not be closed when the user clicks outside of it or presses the escape key.\n   */\n  @Prop() persistent: boolean = false;\n  /**\n   * Heading of the overlay content\n   */\n  @Prop() heading?: string;\n\n  /**\n   * HTML tag for the heading\n   */\n  @Prop() headingTag?: string = 'h2';\n\n  // aria-labelledby https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html\n  headingId: string = uniqueId('overlay-label-');\n\n  overlayEl: HTMLElement;\n\n  @Method()\n  async close() {\n    this.active = false;\n  }\n\n  @Method()\n  async open() {\n    this.active = true;\n  }\n\n  @Watch('active')\n  watchActiveHandler(isActive: boolean): void {\n    if (isActive) {\n      this.open();\n      return;\n    }\n    this.close();\n  }\n\n  // keep active state in sync with overlay\n  handleOverlayClose() {\n    this.close();\n  }\n\n  render() {\n    const { active, heading, persistent, headingId, headingTag: H } = this;\n    return (\n      <go-overlay\n        class=\"go-dialog\"\n        persistent={persistent}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={headingId}\n        active={active}\n        aria-hidden={active ? 'false' : 'true'}\n        ref={(el) => (this.overlayEl = el)}\n        onOverlayClose={() => this.handleOverlayClose()}>\n        <div class=\"overlay-heading\" id={headingId}>\n          <slot name=\"heading\">\n            <H class=\"heading\">{heading}</H>\n          </slot>\n          {!persistent ? (\n            <go-button\n              class=\"close-btn\"\n              flat\n              icon\n              stack\n              variant=\"text\"\n              onClick={() => this.close()}\n              aria-label=\"Close dialog\">\n              <svg\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M18 6 6 18M6 6l12 12\" />\n              </svg>\n            </go-button>\n          ) : null}\n        </div>\n        <slot></slot>\n      </go-overlay>\n    );\n  }\n}\n"]}