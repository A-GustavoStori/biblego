import { Host, h } from "@stencil/core";
export class GoSpinner {
    constructor() {
        this.ringColor = undefined;
        this.baseColor = undefined;
        this.size = undefined;
        this.ringWidth = undefined;
        this.duration = undefined;
        this.stacked = false;
        this.loading = true;
        this.loadingAnnouncement = 'Loading';
        this.isLoading = undefined;
    }
    componentWillLoad() {
        this.isLoading = this.loading;
    }
    loadingChanged(value) {
        this.isLoading = value;
    }
    render() {
        const { ringColor, baseColor, size, ringWidth, duration, stacked, isLoading, loadingAnnouncement } = this;
        let styles = {};
        if (ringColor) {
            styles['--spinner-ring-color'] = ringColor;
        }
        if (baseColor) {
            styles['--spinner-base-color'] = baseColor;
        }
        if (size) {
            styles['--spinner-size'] = size;
        }
        if (ringWidth) {
            styles['--spinner-ring-width'] = ringWidth;
        }
        if (duration) {
            styles['--spinner-duration'] = duration;
        }
        return (h(Host, { key: 'b0e25d5a20715c17b5797453c7b90a320866d7b8', style: styles, role: "status", class: { stacked, 'visually-hidden': !isLoading } }, isLoading
            ? [
                h("div", { "aria-hidden": "true", class: "spinner" }),
                h("slot", null, h("span", { class: "visually-hidden" }, loadingAnnouncement)),
            ]
            : null));
    }
    static get is() { return "go-spinner"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-spinner.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-spinner.css"]
        };
    }
    static get properties() {
        return {
            "ringColor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Set the ring color of the spinner."
                },
                "attribute": "ring-color",
                "reflect": false
            },
            "baseColor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Set the base color of the spinner."
                },
                "attribute": "base-color",
                "reflect": false
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Set the width and height of the spinner."
                },
                "attribute": "size",
                "reflect": false
            },
            "ringWidth": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Set the width of the spinner ring"
                },
                "attribute": "ring-width",
                "reflect": false
            },
            "duration": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Set how long it should take to complete one full rotation in milliseconds."
                },
                "attribute": "duration",
                "reflect": false
            },
            "stacked": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "If true, spinner and label will be stacked."
                },
                "attribute": "stacked",
                "reflect": false,
                "defaultValue": "false"
            },
            "loading": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "set the loading state"
                },
                "attribute": "loading",
                "reflect": true,
                "defaultValue": "true"
            },
            "loadingAnnouncement": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "screen reader announcement when loading"
                },
                "attribute": "loading-announcement",
                "reflect": false,
                "defaultValue": "'Loading'"
            }
        };
    }
    static get states() {
        return {
            "isLoading": {}
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "loading",
                "methodName": "loadingChanged"
            }];
    }
}
//# sourceMappingURL=go-spinner.js.map
