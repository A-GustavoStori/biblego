{"version":3,"file":"go-nav-drawer.js","sourceRoot":"","sources":["../../../../src/components/navigation/go-nav-drawer/go-nav-drawer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\n\nimport { INavItem } from '../../../interfaces';\nimport { inheritAttributes, trapFocus, parseJsonProp } from '../../../utils';\nimport { renderIcon } from '../nav-helpers';\n\n@Component({\n  tag: 'go-nav-drawer',\n  styleUrl: 'go-nav-drawer.scss',\n  shadow: false,\n})\nexport class GoNavDrawer {\n  @Element() el: HTMLElement;\n\n  /**\n   * Position where the navigation should appear from\n   */\n  @Prop({ reflect: true }) position?: 'left' | 'right' = 'left';\n\n  /**\n   * Navigation items to be rendered\n   */\n  @Prop() items?: INavItem[] | string;\n\n  @State() navItems: INavItem[] = null;\n\n  /**\n   * keep track of open state of drawer\n   */\n  @Prop({ mutable: true, reflect: true }) active = false;\n\n  /**\n   * label for screen readers\n   */\n  @Prop() label = 'Drawer';\n\n  /**\n   * if true, clicking on nav item will close the drawer automatically\n   */\n  @Prop() autoClose = false;\n\n  // keep track of open submenus\n  @State() currentSubMenus: HTMLElement[] = [];\n\n  /**\n   * Initialise the menu\n   * @param items {INavItem[]} menu items to be rendered\n   */\n  @Method()\n  @Watch('items')\n  async init(newItems: INavItem[] | string) {\n    this.navItems = parseJsonProp(newItems);\n  }\n\n  /**\n   * Emitted when the nav drawer is opened\n   */\n  @Event({\n    eventName: 'open',\n    cancelable: true,\n    bubbles: true,\n  })\n  openEvent: EventEmitter<void>;\n\n  @Method()\n  async open() {\n    this.active = true;\n    this.openEvent.emit();\n  }\n\n  /**\n   * Emitted when the nav drawer is closed\n   */\n  @Event({\n    eventName: 'close',\n    cancelable: true,\n    bubbles: true,\n  })\n  closeEvent: EventEmitter<void>;\n\n  /**\n   * Emitted when the nav item is clicked\n   */\n  @Event({\n    eventName: 'navItemClick',\n    cancelable: true,\n    bubbles: true,\n  })\n  navItemClickEvent: EventEmitter<INavItem>;\n\n  @Method()\n  async close() {\n    while (this.currentSubMenus.length > 0) {\n      await this.closeCurrentSubMenu();\n    }\n    this.active = false;\n    this.closeEvent.emit();\n  }\n\n  @Method()\n  async toggle() {\n    if (this.active) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  // Store attributes inherited from the host element\n  private inheritedAttrs = {};\n  componentWillLoad() {\n    this.inheritedAttrs = inheritAttributes(this.el, ['class', 'style', 'items', 'active', 'position'], false);\n    try {\n      this.navItems = parseJsonProp(this.items);\n    } catch (e) {\n      console.warn('Could not parse nav items.', e);\n    }\n  }\n\n  async closeCurrentSubMenu() {\n    if (this.currentSubMenus.length === 0) {\n      return;\n    }\n    const lastSubMenu = this.currentSubMenus.slice(-1)[0];\n    lastSubMenu.classList.remove('active');\n    lastSubMenu.querySelector('.nav-item-inner').setAttribute('aria-expanded', 'false');\n    this.currentSubMenus = this.currentSubMenus.slice(0, -1);\n  }\n\n  private openSubMenu(e: MouseEvent) {\n    const triggerBtn = e.target as HTMLElement;\n    const menuItem = triggerBtn.closest('li');\n    menuItem.classList.add('active');\n    triggerBtn.setAttribute('aria-expanded', 'true');\n    trapFocus(menuItem.querySelector('.nav-menu') as HTMLElement);\n    this.currentSubMenus = [...this.currentSubMenus, menuItem];\n  }\n\n  subMenus: { string: INavItem[] } = null;\n\n  handleNavItemClick(e, item: INavItem) {\n    if (item.linkAttrs?.onClick) {\n      (item.linkAttrs.onClick as EventListener)(e);\n    }\n    if (this.autoClose) {\n      this.close();\n    }\n    this.navItemClickEvent.emit(item);\n  }\n\n  renderNavItems(items: INavItem[], parentItem?: INavItem) {\n    const isSubNav = !!parentItem;\n\n    return (\n      <div class={{ 'nav-menu': true, 'is-sub-nav': isSubNav }}>\n        <div class=\"nav-drawer-header\">\n          <div class=\"header-row\">\n            {parentItem ? (\n              <go-button class=\"back-btn\" flat stack variant=\"text\" compact onClick={() => this.closeCurrentSubMenu()}>\n                <svg\n                  slot=\"prefix\"\n                  aria-hidden=\"true\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M19 12H5M12 19l-7-7 7-7\" />\n                </svg>\n                <span>Back</span>\n              </go-button>\n            ) : (\n              <span></span>\n            )}\n\n            {/* <div class=\"title\">{isSubNav ? parentItem.label : this.label}</div> */}\n            {!isSubNav && <div class=\"title\">{this.label}</div>}\n            <go-button class=\"close-btn\" flat stack variant=\"text\" compact onClick={() => this.close()}>\n              <svg\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M18 6 6 18M6 6l12 12\" />\n              </svg>\n              <span>Close</span>\n            </go-button>\n          </div>\n        </div>\n        {items?.length > 0 ? (\n          <nav aria-label={isSubNav ? parentItem.label : this.label}>\n            {isSubNav && parentItem.url ? (\n              <div class=\"parent-link\">\n                <go-link\n                  href={parentItem.url}\n                  {...parentItem.linkAttrs}\n                  onClick={(e) => this.handleNavItemClick(e, parentItem)}>\n                  <span class=\"nav-item-label\">\n                    {renderIcon(parentItem.icon)}\n                    <span>{parentItem.label}</span>\n                  </span>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    viewBox=\"0 0 24 24\">\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </go-link>\n              </div>\n            ) : null}\n            <ul>{items.map((item) => this.renderNavItem(item))}</ul>\n          </nav>\n        ) : null}\n      </div>\n    );\n  }\n\n  renderNavItem(item: INavItem) {\n    let Tag = 'a';\n    const hasChildren = item?.children?.length > 0;\n    if (item.isCurrent) {\n      Tag = 'span';\n    }\n    if (hasChildren) {\n      Tag = 'button';\n    }\n\n    let attrs = null;\n\n    if (Tag === 'a') {\n      attrs = {\n        href: item.url,\n        ...item.linkAttrs,\n        onClick: (e) => this.handleNavItemClick(e, item),\n      };\n    }\n    if (Tag === 'button') {\n      attrs = {\n        'type': 'button',\n        'aria-haspopup': 'true',\n        'aria-expanded': 'false',\n        'onClick': (e) => this.openSubMenu(e),\n      };\n    }\n    return (\n      <li class={{ 'nav-item': true, 'has-children': hasChildren, 'current': item.isCurrent }}>\n        <Tag class=\"nav-item-inner\" {...attrs}>\n          <span class=\"nav-item-label\">\n            {renderIcon(item.icon)}\n            <span>{item.label}</span>\n          </span>\n          {hasChildren ? (\n            <svg\n              class=\"children-indicator\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              viewBox=\"0 0 24 24\">\n              <path d=\"m9 18 6-6-6-6\" />\n            </svg>\n          ) : null}\n        </Tag>\n        {item.children ? this.renderNavItems(item.children, item) : null}\n      </li>\n    );\n  }\n\n  render() {\n    let { navItems, active, position, inheritedAttrs } = this;\n    return (\n      <go-overlay active={active} {...inheritedAttrs} onOverlayClose={() => this.close()}>\n        <div class={{ 'nav-drawer': true, 'open': active, [position]: !!position }}>\n          {navItems ? <div class=\"nav-container\">{this.renderNavItems(navItems)}</div> : <slot></slot>}\n        </div>\n      </go-overlay>\n    );\n  }\n}\n"]}