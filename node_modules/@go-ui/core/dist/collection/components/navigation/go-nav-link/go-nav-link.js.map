{"version":3,"file":"go-nav-link.js","sourceRoot":"","sources":["../../../../src/components/navigation/go-nav-link/go-nav-link.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Prop, Element, Event, EventEmitter, State, Watch } from '@stencil/core';\nimport { IIcon, INavItem, UnknownObject } from '../../../interfaces';\nimport { $attrs, parseJsonProp } from '../../../utils/helper';\n\n@Component({\n  tag: 'go-nav-link',\n  styleUrl: 'go-nav-link.scss',\n  shadow: false,\n})\nexport class GoNavLink {\n  @Element() el: HTMLElement;\n\n  /**\n   * navigation item\n   */\n  @Prop() item?: INavItem | string;\n\n  @State() parsedItem: INavItem;\n\n  // developers can also chose to not pass in an item prop\n  // but use the following INavItem keys as props to construct the link\n\n  @Prop() label?: string;\n  @Prop() url?: string;\n  @Prop() icon?: IIcon | string;\n  @Prop() description?: string;\n  @Prop() isCurrent?: boolean;\n  @Prop() linkAttrs?: UnknownObject | string;\n\n  @Watch('item')\n  parseNavItem() {\n    if (this.item) {\n      this.parsedItem = parseJsonProp(this.item);\n    }\n\n    // component props will override item data if both are present\n    const icon = parseJsonProp(this.icon) ?? this.parsedItem?.icon;\n    const linkAttrs = parseJsonProp(this.linkAttrs) ?? this.parsedItem?.linkAttrs;\n    this.parsedItem = {\n      ...this.parsedItem,\n      label: this.label ?? this.parsedItem?.label,\n      url: this.url ?? this.parsedItem?.url,\n      icon,\n      description: this.description ?? this.parsedItem?.description,\n      isCurrent: this.isCurrent ?? this.parsedItem?.isCurrent,\n      linkAttrs,\n    };\n  }\n\n  /**\n   * show arrow at the end of the link\n   */\n  @Prop() showArrow?: boolean = false;\n\n  /**\n   * full width\n   */\n  @Prop({ reflect: true }) block = false;\n\n  @Event({\n    eventName: 'navigate',\n    cancelable: true,\n    bubbles: true,\n  })\n  navEvent: EventEmitter;\n\n  private inheritedAttrs = {};\n  componentWillLoad() {\n    this.inheritedAttrs = $attrs.bind(this)();\n    this.parseNavItem();\n  }\n\n  render() {\n    const { inheritedAttrs } = this;\n    if (!this.parsedItem) {\n      return (\n        <a {...inheritedAttrs}>\n          <slot></slot>\n        </a>\n      );\n    }\n    const { isCurrent, url, icon, label, description } = this.parsedItem;\n\n    const isSpan = isCurrent || !url;\n\n    let Tag = isSpan ? 'span' : 'go-link';\n    let attrs = {\n      ...this.parsedItem.linkAttrs,\n      ...inheritedAttrs,\n    };\n    attrs = !isSpan\n      ? {\n          href: url,\n          onClick: (event) => {\n            this.navEvent.emit({ event, item: this.item });\n          },\n          ...attrs,\n        }\n      : { ...attrs };\n    attrs['class'] = ` nav-item-link ${attrs['class'] ? attrs['class'] : ''}${isCurrent ? ' current' : ''}`;\n    return (\n      <Host>\n        <Tag {...attrs}>\n          {icon ? typeof icon === 'string' ? <go-icon name={icon}></go-icon> : <go-icon {...icon}></go-icon> : null}\n          <span class=\"nav-link-text\">\n            <span class=\"nav-link-text-label\">{label}</span>\n            {description ? <span class=\"nav-link-text-description\">{description}</span> : null}\n          </span>\n\n          {url && this.showArrow ? (\n            <svg\n              class=\"arrow\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              viewBox=\"0 0 24 24\"\n              focusable=\"false\"\n              aria-hidden=\"true\">\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n          ) : null}\n        </Tag>\n      </Host>\n    );\n  }\n}\n"]}