import { h } from "@stencil/core";
import { parseJsonProp } from "../../../utils";
export class GoNavList {
    constructor() {
        this.items = undefined;
        this.navItems = undefined;
        this.block = false;
    }
    async watchItems(newItems) {
        this.navItems = parseJsonProp(newItems);
    }
    componentWillLoad() {
        this.navItems = parseJsonProp(this.items);
    }
    render() {
        const { navItems, block } = this;
        return (h("div", { key: '6092358291c84cfc1bf0731b509fc9a1facd55d8' }, h("slot", { key: 'aa1dde74e8e75c9dac77650ce57b61e7a87aae20', name: "header" }, h("div", { key: '32c278e8f90dc1dcaf55d4acc9066f0586dcf2a2', class: "nav-list-header" })), h("slot", { key: '5f16bb7db79257d70f584e409c8e3aae8b0d9696', name: "list" }, (navItems === null || navItems === void 0 ? void 0 : navItems.length) > 0 ? (h("ul", { class: "nav-list" }, navItems.map((item) => {
            var _a, _b;
            const isCurrent = item.isCurrent || ((_a = item === null || item === void 0 ? void 0 : item.children) === null || _a === void 0 ? void 0 : _a.some((item) => item.isCurrent));
            return (h("li", { class: { 'mb-1': true, 'is-current': isCurrent } }, ((_b = item.children) === null || _b === void 0 ? void 0 : _b.length) ? (h("go-nav-list", { block: block, items: item.children }, h("go-nav-link", { block: block, item: item, slot: "header" }))) : (h("go-nav-link", { block: block, item: item }))));
        }))) : null)));
    }
    static get is() { return "go-nav-list"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-nav-list.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-nav-list.css"]
        };
    }
    static get properties() {
        return {
            "items": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "INavItem[] | string",
                    "resolved": "INavItem[] | string",
                    "references": {
                        "INavItem": {
                            "location": "import",
                            "path": "../../../interfaces",
                            "id": "src/interfaces/index.ts::INavItem"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "list of navigation items to be displayed uuuuuu"
                },
                "attribute": "items",
                "reflect": false
            },
            "block": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Make the list full width"
                },
                "attribute": "block",
                "reflect": true,
                "defaultValue": "false"
            }
        };
    }
    static get states() {
        return {
            "navItems": {}
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "items",
                "methodName": "watchItems"
            }];
    }
}
//# sourceMappingURL=go-nav-list.js.map
