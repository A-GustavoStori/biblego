import { Host, h } from "@stencil/core";
import { hasSlot, initIdProps } from "../../../utils";
export class GoRadio {
    constructor() {
        this.checked = undefined;
        this.indeterminate = undefined;
        this.name = undefined;
        this.disabled = undefined;
        this.value = undefined;
        this.label = undefined;
        this.hint = undefined;
        this.error = undefined;
        this.controlId = undefined;
        this.hintId = undefined;
        this.errorId = undefined;
        this.hasError = false;
    }
    updateErrorState() {
        this.hasError = typeof this.error !== 'undefined';
    }
    componentWillLoad() {
        this.hasHintSlot = hasSlot(this.el, 'hint');
        initIdProps(this, this.el, ['hint', 'error', 'control'], 'go-radio-');
        this.updateErrorState();
    }
    render() {
        const { label, value, error, controlId, hint, hintId, hasHintSlot, checked, name, disabled, hasError, errorId } = this;
        const describedByIds = [];
        if (hasHintSlot || hint) {
            describedByIds.push(hintId);
        }
        if (hasError) {
            describedByIds.push(errorId);
        }
        const props = {
            id: controlId,
            checked,
            name,
            disabled,
            value,
        };
        return (h(Host, { key: '75cc6e73b7ac137ad89b18f0f624dbd7bc8f3c9a', class: {
                error: hasError,
                disabled: !!disabled,
            } }, h("div", { key: '67e3411f8b8ddbf514890f9b040cb329514a659b', class: "control-wrapper" }, h("div", { key: 'b7af3fbc16559ac6be09e3ea7f9b44a7e54cc929', class: "box" }, h("input", Object.assign({ key: 'f02218a33fc42a56e0298b7536da0b948c3b21e2' }, props, { type: "radio", class: "hidden-control", "aria-invalid": String(hasError), "aria-describedby": describedByIds.join(' ') })), h("span", { key: '8cc88f51d17e12a9fd2d15a64d5bc8653f78af05', class: "mark" }, h("span", { key: '363ab04516f45bfb5919f8b59c06d301189a974f', class: "dot" }))), h("div", { key: '1e57ffaf81431d0070850b63b19a65bdd3b188a3', class: "text" }, h("label", { key: '816ba31489793c5382cd7fbe73fe8ac6d25750d5', htmlFor: controlId }, label), hasHintSlot || hint ? (h("div", { class: "hint", id: hintId }, h("slot", { name: "hint" }, hint))) : null)), hasError ? (h("div", { class: "error-msg", id: errorId }, error)) : null));
    }
    static get is() { return "go-radio"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-radio.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-radio.css"]
        };
    }
    static get properties() {
        return {
            "checked": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "checked",
                "reflect": false
            },
            "indeterminate": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "indeterminate",
                "reflect": false
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "name",
                "reflect": false
            },
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "disabled",
                "reflect": false
            },
            "value": {
                "type": "any",
                "mutable": false,
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "value",
                "reflect": false
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "label",
                "reflect": false
            },
            "hint": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "hint",
                "reflect": false
            },
            "error": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "error",
                "reflect": true
            },
            "controlId": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "DOM id for native input control, default auto generated unique id"
                },
                "attribute": "control-id",
                "reflect": false
            },
            "hintId": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "DOM id for hint message"
                },
                "attribute": "hint-id",
                "reflect": false
            },
            "errorId": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "DOM id for error"
                },
                "attribute": "error-id",
                "reflect": false
            }
        };
    }
    static get states() {
        return {
            "hasError": {}
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "error",
                "methodName": "updateErrorState"
            }];
    }
}
//# sourceMappingURL=go-radio.js.map
