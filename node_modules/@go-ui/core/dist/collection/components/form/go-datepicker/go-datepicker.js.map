{"version":3,"file":"go-datepicker.js","sourceRoot":"","sources":["../../../../src/components/form/go-datepicker/go-datepicker.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAC/F,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AACrC,OAAO,qBAAqB,CAAC;AAC7B,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAG/F,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,iBAAiB,MAAM,gCAAgC,CAAC;AAE/D,OAAO,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,MAAM,SAAS,CAAC;AAExE,MAAM,eAAe,GAAG,YAAY,CAAC;AAMrC,MAAM,OAAO,YAAY;;QAuDvB,aAAQ,GAAG,gBAAgB,CAAC;QAC5B,iBAAY,GAA+B,EAAE,CAAC;QAC9C,cAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;;;;0BAvCL,IAAI;2BAKJ,EAAE;;sBAYP,eAAe;;;IAKzC,WAAW;;QACT,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,aAAa,mCACb,IAAI,CAAC,aAAa,KACrB,YAAY,EAAE,MAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,YAAY,mCAAI,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,EAC1F,WAAW,EAAE,MAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,WAAW,mCAAI,qBAAqB,CAAC,KAAK,EAAE,UAAU,CAAC,GACzF,CAAC;IACJ,CAAC;IAYD,iBAAiB;QACf,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QACpE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,KAAa;QACjB,OAAO,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAC3D,CAAC;IAED,gBAAgB,CAAC,CAAyC;QACxD,MAAM,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAED;;;;;;;OAOG;IACH,cAAc;QACZ,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAqB,CAAC;QAC/E,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE,CAAC;gBACzB,+BAA+B;gBAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,OAAO;YACT,CAAC;YACD,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAED,eAAe,CAAC,IAAU;QACxB,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;YACvB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;IAGD,iBAAiB,CAAC,QAAQ;QACxB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,mBAAmB,CAAC,QAAQ;QAC1B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QACD,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAC1D,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC/C,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,8BAA8B,IAAI,CAAC,IAAI,gBAAgB,CAAC,CAAC;QACjH,IAAI,eAAe,EAAE,CAAC;YACpB,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,MAAM;;QACJ,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QACrE,MAAM,UAAU,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,IAAI,GAAG,GAAG,MAAA,IAAI,CAAC,IAAI,mCAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC7E,OAAO,CACL,iFAAc,UAAU,IAAE,IAAI,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK;YACjF,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAChC,OAAO,CACL,gBAAU,IAAI,EAAE,QAAQ;wBACtB,YAAM,IAAI,EAAE,QAAQ,GAAS,CACpB,CACZ,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC;YACF,uFACE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,EACrC,KAAK,EAAC,SAAS,EACf,UAAU,EAAE,EAAE,EACd,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EACxB,IAAI,EAAE,GAAG,IAAI,cAAc,EAC3B,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,EACvC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IACzC,aAAa,EAAqB,CAC/B,CACZ,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, Element, State, Watch, EventEmitter, Event } from '@stencil/core';\nimport { uniqueId } from 'lodash-es';\nimport '@duetds/date-picker';\nimport { fieldSlotNames, loadFieldProps, loadFieldSlots, parseJsonProp } from '../../../utils';\nimport { FormFieldProps, GoChangeEventDetail } from '../../../interfaces';\nimport { DuetDatePickerProps } from './duet-date-picker';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { DuetDatePickerChangeEvent } from '@duetds/date-picker/dist/types/components/duet-date-picker/duet-date-picker';\nimport { getDefaultDateAdapter, getDefaultLocalization } from './utils';\n\nconst ISO_DATE_FORMAT = 'YYYY-MM-DD';\n@Component({\n  tag: 'go-datepicker',\n  styleUrl: 'go-datepicker.scss',\n  shadow: false,\n})\nexport class GoDatepicker implements FormFieldProps {\n  @Element() el: HTMLElement;\n  @Prop() labelId?: string;\n  @Prop() prefixId?: string;\n  @Prop() suffixId?: string;\n  @Prop() hintId?: string;\n  @Prop() errorId?: string;\n  @Prop() name: string;\n  @Prop() label: string;\n  @Prop() disabled?: boolean;\n  @Prop() hint?: string;\n  @Prop() error?: string | boolean;\n  @Prop() readonly?: boolean;\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * add date format into hint message\n   */\n  @Prop() hintFormat?: boolean = true;\n\n  /**\n   * Placeholder text\n   */\n  @Prop() placeholder?: string = '';\n\n  /**\n   * Duet Date Picker options\n   * https://www.npmjs.com/package/@duetds/date-picker#properties\n   */\n  @Prop() options?: string | Partial<DuetDatePickerProps>;\n\n  /**\n   * Specify the expected date format\n   * Supported formats: https://day.js.org/docs/en/parse/string-format#list-of-all-available-parsing-tokens\n   */\n  @Prop() format?: string = ISO_DATE_FORMAT;\n\n  @State() parsedOptions: Partial<DuetDatePickerProps>;\n\n  @Watch('options')\n  loadOptions() {\n    this.parsedOptions = parseJsonProp(this.options);\n    const dateFormat = this.format;\n    this.parsedOptions = {\n      ...this.parsedOptions,\n      localization: this.parsedOptions?.localization ?? getDefaultLocalization(this.placeholder),\n      dateAdapter: this.parsedOptions?.dateAdapter ?? getDefaultDateAdapter(dayjs, dateFormat),\n    };\n  }\n\n  @Event({\n    eventName: 'gochange',\n  })\n  goChange: EventEmitter<GoChangeEventDetail<string>>;\n\n  prefixer = 'go-datepicker-';\n  hasNamedSlot: { [key: string]: boolean } = {};\n  controlId = uniqueId(this.prefixer);\n  datepickerInputEl: HTMLInputElement;\n  datepickerEl: HTMLDuetDatePickerElement;\n  componentWillLoad() {\n    dayjs.extend(customParseFormat);\n    this.loadOptions();\n    this.hasNamedSlot = loadFieldSlots(this.el);\n  }\n\n  componentDidLoad() {\n    this.datepickerInputEl = this.el.querySelector('.duet-date__input');\n    this.passThroughReadonly(this.readonly);\n    this.removeDuetInputName();\n  }\n\n  toISO(value: string) {\n    return dayjs(value, this.format).format(ISO_DATE_FORMAT);\n  }\n\n  handleDuetChange(e: CustomEvent<DuetDatePickerChangeEvent>) {\n    const { valueAsDate } = e.detail;\n    if (!valueAsDate) {\n      return;\n    }\n    this.setValueIfValid(valueAsDate);\n  }\n\n  /**\n   * on datepicker blur check\n   * at this point\n   * the duet input field might have invalid values based on user input,\n   * this.value will have the last valid ISO date string\n   * we need to set the input value to that string\n   * or empty string if no valid value available\n   */\n  handleDuetBlur() {\n    const inputEl = this.el.querySelector('.duet-date__input') as HTMLInputElement;\n    if (inputEl) {\n      if (inputEl.value === '') {\n        // user cleared out input value\n        this.value = '';\n        return;\n      }\n      inputEl.value = this.value || '';\n    }\n  }\n\n  setValueIfValid(date: Date) {\n    const dateObj = dayjs(date);\n    if (!dateObj.isValid()) {\n      return;\n    }\n    this.value = dateObj.format(this.format);\n    this.goChange.emit({ value: this.value });\n  }\n\n  @Watch('readonly')\n  watchReadonlyProp(readonly) {\n    this.passThroughReadonly(readonly);\n  }\n\n  passThroughReadonly(readonly) {\n    if (!this.datepickerInputEl) {\n      return;\n    }\n    if (readonly) {\n      this.datepickerInputEl.setAttribute('readonly', 'true');\n    } else {\n      this.datepickerInputEl.removeAttribute('readonly');\n    }\n  }\n\n  /**\n   * removes duet hidden input in form data\n   * go-field is used to do this\n   * duet hidden input doesn't store formatted date\n   */\n  removeDuetInputName() {\n    if (!this.datepickerInputEl) {\n      return;\n    }\n    this.datepickerInputEl.removeAttribute('name');\n    const duetHiddenInput = this.datepickerEl.querySelector(`input[type=\"hidden\"][name=\"${this.name}-duet-hidden\"]`);\n    if (duetHiddenInput) {\n      duetHiddenInput.removeAttribute('name');\n    }\n  }\n\n  render() {\n    const { controlId: id, value, name, disabled, parsedOptions } = this;\n    const fieldProps = loadFieldProps(this);\n    const hint = `${this.hint ?? ''}${this.hintFormat ? ` ${this.format}` : ''}`;\n    return (\n      <go-field {...fieldProps} hint={hint} hiddenInputName={name} hiddenInputValue={value}>\n        {fieldSlotNames.map((slotName) => {\n          if (this.hasNamedSlot[slotName]) {\n            return (\n              <template slot={slotName}>\n                <slot name={slotName}></slot>\n              </template>\n            );\n          }\n        })}\n        <duet-date-picker\n          ref={(el) => (this.datepickerEl = el)}\n          class=\"control\"\n          identifier={id}\n          value={this.toISO(value)}\n          name={`${name}-duet-hidden`}\n          disabled={disabled}\n          onDuetBlur={() => this.handleDuetBlur()}\n          onDuetChange={(e) => this.handleDuetChange(e)}\n          {...parsedOptions}></duet-date-picker>\n      </go-field>\n    );\n  }\n}\n"]}