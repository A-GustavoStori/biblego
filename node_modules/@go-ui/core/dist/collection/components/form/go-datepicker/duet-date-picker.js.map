{"version":3,"file":"duet-date-picker.js","sourceRoot":"","sources":["../../../../src/components/form/go-datepicker/duet-date-picker.ts"],"names":[],"mappings":"AAsBA,MAAM,CAAN,IAAY,UAQX;AARD,WAAY,UAAU;IACpB,+CAAU,CAAA;IACV,+CAAU,CAAA;IACV,iDAAW,CAAA;IACX,qDAAa,CAAA;IACb,mDAAY,CAAA;IACZ,+CAAU,CAAA;IACV,mDAAY,CAAA;AACd,CAAC,EARW,UAAU,KAAV,UAAU,QAQrB","sourcesContent":["/**\n * Typescript file taken from duet-datepicker\n */\ntype MonthsNames = [string, string, string, string, string, string, string, string, string, string, string, string];\ntype DayNames = [string, string, string, string, string, string, string];\n\nexport type DuetLocalizedText = {\n  buttonLabel: string;\n  placeholder: string;\n  selectedDateMessage: string;\n  prevMonthLabel: string;\n  nextMonthLabel: string;\n  monthSelectLabel: string;\n  yearSelectLabel: string;\n  closeLabel: string;\n  calendarHeading: string;\n  dayNames: DayNames;\n  monthNames: MonthsNames;\n  monthNamesShort: MonthsNames;\n  locale: string | string[];\n};\n\nexport enum DaysOfWeek {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport type DuetDatePickerDirection = 'left' | 'right';\n\ntype CreateDate = (year: string, month: string, day: string) => Date;\nexport type DuetDateParser = (input: string, createDate: CreateDate) => Date | undefined;\nexport type DuetDateFormatter = (date: Date) => string;\nexport interface DuetDateAdapter {\n  parse: DuetDateParser;\n  format: DuetDateFormatter;\n}\n\nexport type DateDisabledPredicate = (date: Date) => boolean;\n\nexport interface DuetDatePickerProps {\n  /**\n   * Name of the date picker input.\n   */\n  name: string;\n\n  /**\n   * Adds a unique identifier for the date picker input. Use this instead of html `id` attribute.\n   */\n  identifier: string;\n\n  /**\n   * Makes the date picker input component disabled. This prevents users from being able to\n   * interact with the input, and conveys its inactive state to assistive technologies.\n   */\n  disabled: boolean;\n\n  /**\n   * Defines a specific role attribute for the date picker input.\n   */\n  role: string;\n\n  /**\n   * Forces the opening direction of the calendar modal to be always left or right.\n   * This setting can be useful when the input is smaller than the opening date picker\n   * would be as by default the picker always opens towards right.\n   */\n  direction: DuetDatePickerDirection;\n\n  /**\n   * Should the input be marked as required?\n   */\n  required: boolean;\n\n  /**\n   * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n   */\n  value: string;\n\n  /**\n   * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n   * This setting can be used alone or together with the max property.\n   */\n  min: string;\n\n  /**\n   * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n   * This setting can be used alone or together with the min property.\n   */\n  max: string;\n\n  /**\n   * Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\n   * Default is Monday.\n   */\n  firstDayOfWeek: DaysOfWeek;\n\n  /**\n   * Button labels, day names, month names, etc, used for localization.\n   * Default is English.\n   */\n  localization: DuetLocalizedText;\n\n  /**\n   * Date adapter, for custom parsing/formatting.\n   * Must be object with a `parse` function which accepts a `string` and returns a `Date`,\n   * and a `format` function which accepts a `Date` and returns a `string`.\n   * Default is IS0-8601 parsing and formatting.\n   */\n  dateAdapter: DuetDateAdapter;\n\n  /**\n   * Controls which days are disabled and therefore disallowed.\n   * For example, this can be used to disallow selection of weekends.\n   */\n  isDateDisabled: DateDisabledPredicate;\n}\n"]}