{"version":3,"file":"go-select.js","sourceRoot":"","sources":["../../../../src/components/form/go-select/go-select.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, Prop, State, Event, EventEmitter, Watch } from '@stencil/core';\nimport { FieldValue, GoChangeEventDetail, SelectOption, SelectProps } from '@/interfaces';\nimport { fieldSlotNames, inheritNonFieldAttrs, loadFieldSlots, loadFieldProps } from '@/utils';\nimport {\n  getActionFromKey,\n  getIndexByLetter,\n  getUpdatedIndex,\n  isScrollable,\n  maintainScrollVisibility,\n  MenuActions,\n  parseSelectOptions,\n} from './utils';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-select',\n  styleUrl: 'go-select.scss',\n  shadow: false,\n})\nexport class GoSelect implements SelectProps {\n  @Element() el: HTMLElement;\n\n  @Prop() name: string;\n  @Prop() label: string;\n  @Prop() labelId?: string;\n  @Prop() suffixId?: string;\n  @Prop() hintId?: string;\n  @Prop() errorId?: string;\n  @Prop() disabled?: boolean;\n  @Prop() hint?: string;\n  @Prop() error?: string | boolean;\n  @Prop() readonly?: boolean;\n  @Prop({ mutable: true }) value?: FieldValue;\n\n  /**\n   * Array of options.\n   * Note:\n   * Sometimes frameworks may incorrectly pass the result of Array.toString() into this prop,\n   * `go-select` tries to obsorb this issue by trying to do a `split(',')` on the options prop\n   * if a string is passed in.\n   * This means the accepted formats include:\n   * 1. array of objects of type `{label: string, value: string}`\n   * 2. array of strings (e.g. ['Apple', 'Orange', 'Banana'])\n   * 3. string, toString() result of format 2 (i.e. 'Apple,Orange,Banana')\n   * 4. string, option 1 or 2 passed in as string that can be parsed by [JSON5](https://json5.org/)\n   */\n  @Prop() options: SelectOption[] | string[] | string;\n\n  /**\n   * parsed options array\n   */\n  @State() parsedOptions: SelectOption[] = [];\n\n  /**\n   * common form control properties\n   */\n  @State() attrs: any;\n\n  hasNamedSlot: { [key: string]: boolean } = {};\n  prefixer = 'go-select-';\n  controlId = uniqueId(this.prefixer);\n  controlEl: HTMLElement;\n\n  async componentWillLoad() {\n    this.loadOptions();\n    this.attrs = inheritNonFieldAttrs(this, ['options']);\n    this.hasNamedSlot = loadFieldSlots(this.el);\n    if (this.value) {\n      this.loadValue();\n    }\n  }\n\n  @Watch('options')\n  loadOptions() {\n    this.parsedOptions = parseSelectOptions(this.options);\n  }\n\n  @Watch('value')\n  loadValue() {\n    this.activeIndex = this.parsedOptions.findIndex((option) => option.value === this.value);\n    this.selectOption(this.activeIndex);\n  }\n\n  /**\n   * Emit custom event with selected value\n   */\n  @Event({\n    eventName: 'gochange',\n  })\n  goChange: EventEmitter<GoChangeEventDetail<string>>;\n\n  // Active option index\n  @State() activeIndex = -1;\n\n  // Menu state\n  @State() open = false;\n\n  // Current accumulated search string\n  @State() searchString: string;\n\n  // Timeout after each typed character\n  @State() searchTimeout: number | null;\n\n  // Selected option index\n  @State() selectedIndex: number;\n\n  // input value\n  @State() selectedLabel = '';\n\n  @State() dropdownWidth = 'auto';\n\n  // save reference to active option\n  private activeOptionRef: HTMLElement;\n\n  // Prevent menu closing before click completed\n  private ignoreBlur = false;\n\n  // save reference to combobox element\n  private inputRef: HTMLElement;\n\n  // save reference to listbox\n  private listboxRef: HTMLGoDropdownElement;\n\n  @Watch('open')\n  handleDomOnOpen(isOpen) {\n    if (isOpen) {\n      this.listboxRef.open();\n      // adjust dropdown size\n      // - we use fixed positioning strategy to make dropdown \"break out\" of the clipping containers, now we need to calculate dropdown width up opening\n      // see https://floating-ui.com/docs/computePosition#strategy\n      if (this.inputRef) {\n        this.dropdownWidth = `${this.inputRef.offsetWidth}px`;\n      }\n      if (isScrollable(this.listboxRef) && this.activeOptionRef) {\n        maintainScrollVisibility(this.activeOptionRef, this.listboxRef);\n      }\n    } else {\n      this.listboxRef.close();\n    }\n  }\n\n  render() {\n    const {\n      parsedOptions,\n      activeIndex,\n      controlId: id,\n      open = false,\n      dropdownWidth,\n      value,\n      readonly,\n      disabled,\n      name,\n      attrs,\n    } = this;\n\n    const fieldProps = loadFieldProps(this);\n\n    const activeId = open ? `${id}-${activeIndex}` : '';\n\n    const controlAttrs = {\n      id,\n      name,\n      value,\n      ...attrs,\n    };\n    return [\n      <input type=\"hidden\" name={name} value={value} />,\n      <go-field {...fieldProps}>\n        {fieldSlotNames.map((slotName) => {\n          if (this.hasNamedSlot[slotName]) {\n            return (\n              <template slot={slotName}>\n                <slot name={slotName}></slot>\n              </template>\n            );\n          }\n        })}\n        <div class=\"combo\">\n          <div\n            {...controlAttrs}\n            role=\"combobox\"\n            aria-activedescendant={activeId}\n            aria-autocomplete=\"none\"\n            aria-haspopup=\"listbox\"\n            aria-expanded={`${open}`}\n            aria-labelledby={`${id} ${id}-value`}\n            aria-controls={`${id}-listbox`}\n            aria-disabled={disabled ? 'true' : undefined}\n            aria-readonly={readonly ? 'true' : undefined}\n            class=\"control\"\n            id={`${id}-value`}\n            ref={(el) => (this.inputRef = el)}\n            tabindex=\"0\"\n            onBlur={this.onComboBlur.bind(this)}\n            onKeyDown={this.onComboKeyDown.bind(this)}>\n            <span>{parsedOptions && parsedOptions[activeIndex]?.label ? parsedOptions[activeIndex].label : ''}</span>\n            <svg\n              class={{ arrow: true, open }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              aria-hidden=\"true\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              viewBox=\"0 0 24 24\">\n              <path d=\"m6 9 6 6 6-6\" />\n            </svg>\n          </div>\n          <go-dropdown\n            disabled={readonly || disabled}\n            trigger-selector={`#${id}-value`}\n            width={dropdownWidth}\n            onOpened={() => {\n              this.updateMenuState(true);\n            }}\n            onClosed={() => {\n              this.updateMenuState(false);\n            }}\n            role=\"listbox\"\n            ref={(el) => (this.listboxRef = el)}\n            id={`${id}-listbox`}>\n            {parsedOptions &&\n              parsedOptions.map((option, i) => {\n                return (\n                  <div\n                    class={{ 'current': this.activeIndex === i, 'combo-option': true }}\n                    id={`${id}-${i}`}\n                    aria-selected={this.activeIndex === i ? 'true' : undefined}\n                    ref={(el) => {\n                      if (this.activeIndex === i) {\n                        this.activeOptionRef = el;\n                      }\n                    }}\n                    role=\"option\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.onOptionClick(i);\n                    }}\n                    onMouseDown={this.onOptionMouseDown.bind(this)}>\n                    {option.label}\n                  </div>\n                );\n              })}\n          </go-dropdown>\n        </div>\n      </go-field>,\n    ];\n  }\n\n  private getSearchString(char: string) {\n    // reset typing timeout and start new timeout\n    // this allows us to make multiple-letter matches, like a native select\n    if (typeof this.searchTimeout === 'number') {\n      window.clearTimeout(this.searchTimeout);\n    }\n\n    this.searchTimeout = window.setTimeout(() => {\n      this.searchString = '';\n    }, 500);\n\n    // add most recent letter to saved search string\n    this.searchString += char;\n    return this.searchString;\n  }\n\n  private onComboKeyDown(event: KeyboardEvent) {\n    if (!this.parsedOptions) {\n      return;\n    }\n    const { key } = event;\n    const max = this.parsedOptions.length - 1;\n\n    const action = getActionFromKey(event, this.open);\n\n    switch (action) {\n      case MenuActions.Next:\n      case MenuActions.Last:\n      case MenuActions.First:\n      case MenuActions.Previous:\n        event.preventDefault();\n        return this.onOptionChange(getUpdatedIndex(this.activeIndex, max, action));\n      case MenuActions.CloseSelect:\n      case MenuActions.Space:\n        event.preventDefault();\n        this.selectOption(this.activeIndex);\n      case MenuActions.Close:\n        event.preventDefault();\n        return this.updateMenuState(false);\n      case MenuActions.Type:\n        // this.activeIndex = Math.max(0, getIndexByLetter(this.options, key));\n        this.onComboType(key);\n      case MenuActions.Open:\n        event.preventDefault();\n        return this.updateMenuState(true);\n    }\n  }\n\n  private onComboBlur() {\n    if (this.ignoreBlur) {\n      this.ignoreBlur = false;\n      return;\n    }\n\n    if (this.open) {\n      this.selectOption(this.activeIndex);\n      this.updateMenuState(false, false);\n    }\n  }\n\n  private onComboType(letter: string) {\n    // open the listbox if it is closed\n    this.updateMenuState(true);\n\n    // find the index of the first matching option\n    const searchString = this.getSearchString(letter);\n    const searchIndex = getIndexByLetter(this.parsedOptions, searchString, this.activeIndex + 1);\n\n    // if a match was found, go to it\n    if (searchIndex >= 0) {\n      this.onOptionChange(searchIndex);\n    }\n  }\n\n  private onOptionChange(index: number) {\n    this.activeIndex = index;\n  }\n\n  private onOptionClick(index: number) {\n    this.onOptionChange(index);\n    this.selectOption(index);\n    this.updateMenuState(false);\n  }\n\n  private onOptionMouseDown() {\n    this.ignoreBlur = true;\n  }\n\n  private selectOption(index: number) {\n    if (index < 0) {\n      return;\n    }\n    const selected = this.parsedOptions[index];\n    this.selectedLabel = selected.label;\n    this.selectedIndex = index;\n    this.value = selected.value;\n\n    this.goChange.emit({ value: selected.value });\n  }\n\n  private updateMenuState(open: boolean, callFocus = true) {\n    if (open && (this.readonly || this.disabled)) {\n      return;\n    }\n    this.open = open;\n    if (callFocus) {\n      this.inputRef.focus();\n    }\n  }\n}\n"]}