{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/components/form/go-select/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This file is based on the good work of @smhigley:\n * https://github.com/microsoft/sonder-ui/blob/master/src/components/select/select.tsx\n */\n\nimport { SelectOption } from '@/interfaces';\nimport { parseJsonProp } from '@/utils';\n\nexport enum Keys {\n  Backspace = 'Backspace',\n  Clear = 'Clear',\n  Down = 'ArrowDown',\n  End = 'End',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Home = 'Home',\n  Left = 'ArrowLeft',\n  PageDown = 'PageDown',\n  PageUp = 'PageUp',\n  Right = 'ArrowRight',\n  Space = ' ',\n  Tab = 'Tab',\n  Up = 'ArrowUp',\n}\n\nexport enum MenuActions {\n  Close,\n  CloseSelect,\n  First,\n  Last,\n  Next,\n  Open,\n  PageDown,\n  PageUp,\n  Previous,\n  Select,\n  Space,\n  Type,\n}\n\nexport enum TreeActions {\n  Close,\n  First,\n  Last,\n  Next,\n  Open,\n  Previous,\n  Select,\n  UpLevel,\n}\n\n// filter an array of options against an input string\n// returns an array of options that begin with the filter string, case-independent\nexport function filterOptions(\n  options: SelectOption[] = [],\n  filter: string,\n  exclude: SelectOption[] = [],\n): SelectOption[] {\n  let filterString = filter.toLowerCase().trim();\n  return options.filter((option) => {\n    const matches = option.label.toLowerCase().indexOf(filterString) === 0;\n    return matches && exclude.indexOf(option) < 0;\n  });\n}\n\n// return an array of exact option name matches from a comma-separated string\nexport function findMatches(options: SelectOption[], search: string): SelectOption[] {\n  const labels = search.split(',');\n  return labels\n    .map((label) => {\n      const match = options.filter((option) => label.trim().toLowerCase() === option.label.toLowerCase());\n      return match.length > 0 ? match[0] : null;\n    })\n    .filter((option) => option !== null);\n}\n\n// return combobox action from key press\nexport function getActionFromKey(event: KeyboardEvent, menuOpen: boolean): MenuActions {\n  const { key, altKey, ctrlKey, metaKey } = event;\n  const openKeys = ['ArrowDown', 'ArrowUp', 'Enter', ' ', 'Home', 'End']; // all keys that will open the combo\n\n  // handle opening when closed\n  if (!menuOpen && openKeys.includes(key)) {\n    return MenuActions.Open;\n  }\n\n  // handle typing characters when open or closed\n  if (\n    key === Keys.Backspace ||\n    key === Keys.Clear ||\n    (key.length === 1 && key !== ' ' && !altKey && !ctrlKey && !metaKey)\n  ) {\n    return MenuActions.Type;\n  }\n\n  // handle keys when open\n  if (menuOpen) {\n    if ((key === Keys.Down && !altKey) || key === Keys.Right) {\n      return MenuActions.Next;\n    } else if (key === Keys.Up && altKey) {\n      return MenuActions.CloseSelect;\n    } else if (key === Keys.Up || key === Keys.Left) {\n      return MenuActions.Previous;\n    } else if (key === Keys.Home) {\n      return MenuActions.First;\n    } else if (key === Keys.End) {\n      return MenuActions.Last;\n    } else if (key === Keys.PageUp) {\n      return MenuActions.PageUp;\n    } else if (key === Keys.PageDown) {\n      return MenuActions.PageDown;\n    } else if (key === Keys.Escape) {\n      return MenuActions.Close;\n    } else if (key === Keys.Enter) {\n      return MenuActions.CloseSelect;\n    } else if (key === Keys.Space) {\n      return MenuActions.Space;\n    }\n  }\n}\n\n// return the index of an option from an array of options, based on a search string\n// if the filter is multiple iterations of the same letter (e.g \"aaa\"), then cycle through first-letter matches\nexport function getIndexByLetter(options: SelectOption[], filter: string, startIndex = 0): number {\n  const orderedOptions = [...options.slice(startIndex), ...options.slice(0, startIndex)];\n  const firstMatch = filterOptions(orderedOptions, filter)[0];\n  const allSameLetter = (array) => array.every((letter) => letter === array[0]);\n\n  // first check if there is an exact match for the typed string\n  if (firstMatch) {\n    return options.indexOf(firstMatch);\n  }\n\n  // if the same letter is being repeated, cycle through first-letter matches\n  else if (allSameLetter(filter.split(''))) {\n    const matches = filterOptions(orderedOptions, filter[0]);\n    return options.indexOf(matches[0]);\n  }\n\n  // if no matches, return -1\n  else {\n    return -1;\n  }\n}\n\n// get updated option index\nexport function getUpdatedIndex(current: number, max: number, action: MenuActions): number {\n  switch (action) {\n    case MenuActions.First:\n      return 0;\n    case MenuActions.Last:\n      return max;\n    case MenuActions.Previous:\n      return Math.max(0, current - 1);\n    case MenuActions.Next:\n      return Math.min(max, current + 1);\n    default:\n      return current;\n  }\n}\n\n// check if an element is currently scrollable\nexport function isScrollable(element: HTMLElement): boolean {\n  return element && element.clientHeight < element.scrollHeight;\n}\n\n// ensure given child element is within the parent's visible scroll area\nexport function maintainScrollVisibility(activeElement: HTMLElement, scrollParent: HTMLElement) {\n  const { offsetHeight, offsetTop } = activeElement;\n  const { offsetHeight: parentOffsetHeight, scrollTop } = scrollParent;\n\n  const isAbove = offsetTop < scrollTop;\n  const isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;\n\n  if (isAbove) {\n    scrollParent.scrollTo(0, offsetTop);\n  } else if (isBelow) {\n    scrollParent.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight);\n  }\n}\n\n/**\n * parse multiple formats of options prop into SelectOption[]\n */\nexport const parseSelectOptions = (options: string | string[] | SelectOption[]): SelectOption[] | null => {\n  try {\n    // vue passes array of strings into prop as the result of Array.toString()\n    console.log('parseSelectOptions', { options });\n    if (typeof options === 'string' && !options.startsWith('[')) {\n      options = options.split(',');\n    }\n\n    const parsedOptions = parseJsonProp<SelectOption[] | string[]>(options);\n    if (parsedOptions) {\n      // format parsed options into SelectOption[]\n      return parsedOptions.map((option) =>\n        typeof option === 'string'\n          ? {\n              value: option,\n              label: option,\n            }\n          : option,\n      );\n    }\n  } catch (e) {\n    console.error(`Couldn't parse options: `, options, { e });\n  }\n};\n"]}