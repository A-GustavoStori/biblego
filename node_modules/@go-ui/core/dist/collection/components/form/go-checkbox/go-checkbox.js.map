{"version":3,"file":"go-checkbox.js","sourceRoot":"","sources":["../../../../src/components/form/go-checkbox/go-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, Prop, State, Watch } from '@stencil/core';\nimport { CheckboxProps } from '../../../interfaces';\nimport { hasSlot, initIdProps } from '../../../utils';\n@Component({\n  tag: 'go-checkbox',\n  styleUrl: 'go-checkbox.scss',\n  shadow: false,\n})\nexport class GoCheckbox implements CheckboxProps {\n  @Element() el: HTMLElement;\n\n  @Prop({ mutable: true }) checked?: boolean;\n  @Prop() indeterminate?: boolean;\n  @Prop() name: string;\n  @Prop() disabled?: boolean;\n  @Prop() value: any;\n  @Prop() label: string;\n  @Prop() hint?: string;\n  @Prop({ reflect: true }) error?: string;\n\n  controlId: string;\n  /**\n   * DOM id for hint message\n   */\n  @Prop({ mutable: true })\n  hintId?: string;\n\n  /**\n   * DOM id for error\n   */\n  @Prop({ mutable: true })\n  errorId?: string;\n\n  /**\n   * Allow empty value for `error` attribute and show error state\n   */\n  @State() hasError = false;\n\n  @Watch('error')\n  updateErrorState() {\n    this.hasError = typeof this.error !== 'undefined';\n  }\n\n  handleChange(e) {\n    this.checked = e.target.checked;\n  }\n\n  hasHintSlot: boolean;\n  componentWillLoad() {\n    this.hasHintSlot = hasSlot(this.el, 'hint');\n    initIdProps(this, this.el, ['hint', 'error', 'control'], 'go-checkbox-');\n    this.updateErrorState();\n  }\n\n  render() {\n    const {\n      label,\n      error,\n      controlId,\n      hint,\n      hintId,\n      hasHintSlot,\n      checked,\n      indeterminate,\n      name,\n      disabled,\n      value,\n      hasError,\n      errorId,\n    } = this;\n\n    const describedByIds = [];\n    if (hasHintSlot || hint) {\n      describedByIds.push(hintId);\n    }\n    if (hasError) {\n      describedByIds.push(errorId);\n    }\n    const props = {\n      id: controlId,\n      checked,\n      indeterminate,\n      name,\n      disabled,\n      value,\n    };\n    return (\n      <Host\n        class={{\n          error: hasError,\n          disabled: !!disabled,\n          indeterminate: !!indeterminate,\n        }}>\n        <div class=\"control-wrapper\">\n          <div class=\"box\">\n            <input\n              class=\"hidden-control\"\n              type=\"checkbox\"\n              {...props}\n              aria-invalid={String(hasError)}\n              aria-describedby={describedByIds.join(' ')}\n              onChange={(e) => this.handleChange(e)}\n            />\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              viewBox=\"0 0 24 24\"\n              class=\"mark minus\">\n              <path d=\"M5 12h14\" />\n            </svg>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              viewBox=\"0 0 24 24\"\n              class=\"mark tick\">\n              <path d=\"M20 6 9 17l-5-5\" />\n            </svg>\n          </div>\n          <div class=\"text\">\n            <label htmlFor={controlId}>{label}</label>\n            {hasHintSlot || hint ? (\n              <div class=\"hint\" id={hintId}>\n                <slot name=\"hint\">{hint}</slot>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {hasError ? (\n          <div class=\"error-msg\" id={errorId}>\n            {error}\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}