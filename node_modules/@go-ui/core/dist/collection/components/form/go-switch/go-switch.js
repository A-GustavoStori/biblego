import { Host, h } from "@stencil/core";
import { inheritAttributes } from "../../../utils/helper";
import { uniqueId, kebabCase } from "lodash-es";
export class GoSwitch {
    constructor() {
        // Store attributes inherited from the host element
        this.attrs = {};
        this.checked = undefined;
        this.name = undefined;
        this.label = undefined;
        this.disabled = undefined;
        this.value = undefined;
        this.stack = false;
        this.fullWidth = false;
        this.showOnOff = false;
        this.showOnOffOutside = false;
        this.activeLabel = 'On';
        this.inactiveLabel = 'Off';
    }
    handleChange(e) {
        this.checked = e.target.checked;
    }
    componentWillLoad() {
        const propNames = Object.keys(this['__proto__']);
        const attributeNames = propNames.map((name) => kebabCase(name));
        this.attrs = inheritAttributes(this.el, ['class', 'style', ...attributeNames]);
    }
    render() {
        const { checked, name, label, disabled, value, attrs, stack, fullWidth, showOnOff, showOnOffOutside, activeLabel, inactiveLabel, } = this;
        const inputId = (attrs === null || attrs === void 0 ? void 0 : attrs.id) ? attrs.id : uniqueId('go-switch-');
        return (h(Host, { key: '5205c5cc2d8ff827433dfe31289927dcec6cfc01', class: { stack, 'full-width': fullWidth } }, h("label", { key: '312120a1f35c7f4956544995380b85576bab6d07', htmlFor: inputId }, label), h("div", { key: '4877f7f01bb8503af40f52c306c1ddc96b05d78f', class: "switch-container" }, h("input", Object.assign({ key: '652dc70bdfac1a35ecb4a5b94b8ca8cce47e06f0', ref: (el) => (this.inputEl = el), type: "checkbox", role: "switch", id: inputId, name: name, disabled: disabled, checked: checked, value: value }, attrs, { onChange: (e) => this.handleChange(e) })), h("div", { key: '93b6eb2c496a939e359cade903182008c33dc7f8', class: "switch-group" }, h("span", { key: '19e88239b026e86f64218c2f7854a9dc7f9e338f', class: "switch-track" }, h("span", { key: 'c6990120f0da04598ebda7e4217227c2253fd4da', class: "switch-handle" }), showOnOff ? (h("span", { class: "switch-text", "aria-hidden": "true" }, checked ? activeLabel : inactiveLabel)) : null), showOnOffOutside ? (h("span", { class: "text-size-0", "aria-hidden": "true" }, checked ? activeLabel : inactiveLabel)) : null))));
    }
    static get is() { return "go-switch"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-switch.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-switch.css"]
        };
    }
    static get properties() {
        return {
            "checked": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "checked",
                "reflect": false
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Name of the input field"
                },
                "attribute": "name",
                "reflect": false
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Label of the input field"
                },
                "attribute": "label",
                "reflect": false
            },
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "If the input is disabled"
                },
                "attribute": "disabled",
                "reflect": false
            },
            "value": {
                "type": "any",
                "mutable": false,
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Value of the input field"
                },
                "attribute": "value",
                "reflect": false
            },
            "stack": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Display label on top of switch"
                },
                "attribute": "stack",
                "reflect": false,
                "defaultValue": "false"
            },
            "fullWidth": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "make this field full width"
                },
                "attribute": "full-width",
                "reflect": false,
                "defaultValue": "false"
            },
            "showOnOff": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "show on/off text in switch toggle"
                },
                "attribute": "show-on-off",
                "reflect": false,
                "defaultValue": "false"
            },
            "showOnOffOutside": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "show on/off text next to the switch toggle"
                },
                "attribute": "show-on-off-outside",
                "reflect": false,
                "defaultValue": "false"
            },
            "activeLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "\"on\" label to show when `showOnOff*` is set to true"
                },
                "attribute": "active-label",
                "reflect": false,
                "defaultValue": "'On'"
            },
            "inactiveLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "\"off\" label to show when `showOnOff*` is set to true"
                },
                "attribute": "inactive-label",
                "reflect": false,
                "defaultValue": "'Off'"
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=go-switch.js.map
