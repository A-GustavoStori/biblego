{"version":3,"file":"go-input.spec.js","sourceRoot":"","sources":["../../../../../src/components/form/go-input/test/go-input.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,uBAAuB;SAC9B,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,MAAM;YAChB,GAAG,EAAE,KAAK;YACV,SAAS,EAAE,IAAI;YACf,GAAG,EAAE,GAAG;YACR,SAAS,EAAE,GAAG;YACd,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,MAAM;YACnB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,GAAG;YACT,KAAK,EAAE,KAAK;SACb,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,yBAAyB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;iBAC9C,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBACX,OAAO,GAAG,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;YAClC,CAAC,CAAC;iBACD,IAAI,CAAC,GAAG,CAAC,cAAc;SAC3B,CAAC,CAAC;QACH,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,MAAM,YAAY,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACnB,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC/B,MAAM,CAAC,aAAa,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC3C,OAAO;YACT,CAAC;YACD,MAAM,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GoInput } from '../go-input';\ndescribe('go-input', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [GoInput],\n      html: `<go-input></go-input>`,\n    });\n    expect(page.root).toBeTruthy();\n  });\n  it('passes through attributes to native control', async () => {\n    const attrs = {\n      disabled: 'true',\n      max: '123',\n      maxlength: '10',\n      min: '0',\n      minlength: '1',\n      name: 'test',\n      pattern: 'test',\n      placeholder: 'test',\n      readonly: 'true',\n      required: 'true',\n      size: '20px',\n      step: '1',\n      value: '123',\n    };\n    const page = await newSpecPage({\n      components: [GoInput],\n      html: `<go-input type=\"text\" ${Object.keys(attrs)\n        .map((key) => {\n          return `${key}=\"${attrs[key]}\"`;\n        })\n        .join(' ')}></go-input>`,\n    });\n    const nativeControl = page.root.querySelector('input');\n    const keys = Object.keys(attrs);\n    const booleanAttrs = ['required', 'disabled', 'readonly'];\n    keys.forEach((key) => {\n      if (booleanAttrs.includes(key)) {\n        expect(nativeControl).toHaveAttribute(key);\n        return;\n      }\n      expect(nativeControl).toEqualAttribute(key, attrs[key]);\n    });\n  });\n});\n"]}