{"version":3,"file":"go-accordion.e2e.js","sourceRoot":"","sources":["../../../../src/components/go-accordion/test/go-accordion.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\nlet html = '';\ndescribe('go-accordion', () => {\n  // Set up html content\n  beforeAll(async () => {\n    const fs = require('fs');\n    const path = require('path');\n    html = fs.readFileSync(path.resolve(__dirname, '../usage/single.md'), 'utf8');\n  });\n\n  it('renders', async () => {\n    const page = await newE2EPage({ html });\n    const element = await page.find('go-accordion');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('passes automated a11y test', async () => {\n    const page = await newE2EPage({ html });\n    await expect(page).toPassA11y();\n  });\n\n  it('can be navigated by keyboard', async () => {\n    const page = await newE2EPage({ html });\n    let firstItem = (await page.findAll('go-accordion-item'))[0];\n    expect(firstItem).toHaveClass('active');\n    await page.keyboard.press('Tab');\n    await page.keyboard.press('Tab');\n    await page.keyboard.press('Enter');\n\n    await page.waitForTimeout(1000);\n\n    firstItem = (await page.findAll('go-accordion-item'))[0];\n    expect(firstItem).not.toHaveClass('active');\n    const secondItem = (await page.findAll('go-accordion-item'))[1];\n    expect(secondItem).toHaveClass('active');\n\n    const focusedBtn = await secondItem.find('button'); // 2nd accordion item\n    const activeInnerText = await page.evaluate(() => (document.activeElement as HTMLElement).innerText);\n    expect(focusedBtn.innerText).toEqual(activeInnerText);\n  });\n\n  it('supports multiple mode', async () => {\n    const fs = require('fs');\n    const path = require('path');\n    const html = fs.readFileSync(path.resolve(__dirname, '../usage/multiple.md'), 'utf8');\n\n    const page = await newE2EPage({ html });\n    let firstItem = (await page.findAll('go-accordion-item'))[0];\n    expect(firstItem).not.toHaveClass('active');\n    // open first\n    await page.keyboard.press('Tab');\n    await page.keyboard.press('Enter');\n\n    // open second\n    await page.keyboard.press('Tab');\n    await page.keyboard.press('Enter');\n\n    await page.waitForTimeout(1000);\n\n    // both should be active\n    firstItem = (await page.findAll('go-accordion-item'))[0];\n    expect(firstItem).toHaveClass('active');\n    const secondItem = (await page.findAll('go-accordion-item'))[1];\n    expect(secondItem).toHaveClass('active');\n  });\n});\n"]}