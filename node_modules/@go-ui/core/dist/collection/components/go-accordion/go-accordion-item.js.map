{"version":3,"file":"go-accordion-item.js","sourceRoot":"","sources":["../../../src/components/go-accordion/go-accordion-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, State, Element, Method, Event, EventEmitter } from '@stencil/core';\nimport { hasSlot } from '../../utils/helper';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-accordion-item',\n  styleUrl: 'go-accordion-item.scss',\n  shadow: false,\n})\nexport class GoAccordionItem {\n  @Element() el: HTMLElement;\n\n  /**\n   * Heading text.\n   * This can be overwritten by `heading` slot\n   */\n  @Prop() heading?: string = null;\n\n  /**\n   * The HTML tag to be applied to the heading text.\n   * This can be overwritten by `heading` slot\n   */\n  @Prop() headingTag?: string = 'h3';\n\n  /**\n   * If expanded height should be automatically calculated. If true, the `--go-accordion-item-body-max-height` CSS variable will be set automatically to the content height\n   */\n  @Prop() autoHeight?: boolean = true;\n\n  /**\n   * If the accordion item should be opened by default\n   */\n  @Prop({ reflect: true, mutable: true }) active?: boolean = false;\n\n  @State() hasHeadingSlot: boolean = true;\n  @State() hasArrowSlot: boolean = true;\n\n  panelId: string;\n  headerId: string;\n  panelEl: HTMLElement;\n  animationHeightInterval: number; // number of px per frame of animation change.\n\n  parentGroup: HTMLGoAccordionElement;\n\n  /**\n   * Emitted when accordion item has opened\n   */\n  @Event() opened: EventEmitter;\n\n  /**\n   * Emitted when accordion item started opening\n   */\n  @Event() opening: EventEmitter;\n\n  /**\n   * Emitted when accordion item has closed\n   */\n  @Event() closed: EventEmitter;\n\n  /**\n   * Emitted when accordion item started closing\n   */\n  @Event() closing: EventEmitter;\n\n  componentWillLoad() {\n    this.hasHeadingSlot = hasSlot(this.el, 'heading');\n    this.hasArrowSlot = hasSlot(this.el, 'arrow');\n    this.panelId = uniqueId('go-accordion-item-panel-');\n    this.headerId = uniqueId('go-accordion-item-header-');\n    this.parentGroup = this.el.closest('go-accordion') as HTMLGoAccordionElement;\n  }\n  componentDidLoad() {\n    if (this.autoHeight) {\n      this.panelEl.style.setProperty('--body-max-height', this.panelEl.scrollHeight + 2 + 'px');\n    }\n    this.onTransitionEnd();\n    this.panelEl.addEventListener('transitionstart', () => {\n      this.onTransitionStart();\n    });\n    this.panelEl.addEventListener('transitionend', () => {\n      this.onTransitionEnd();\n    });\n  }\n\n  handleNavigation(key) {\n    if (key === 'ArrowDown') {\n      if (this.el.nextElementSibling) {\n        (this.el.nextElementSibling as HTMLGoAccordionItemElement).focusOnControl();\n      }\n    }\n    if (key === 'ArrowUp') {\n      if (this.el.previousElementSibling) {\n        (this.el.previousElementSibling as HTMLGoAccordionItemElement).focusOnControl();\n      }\n    }\n    if (key === 'Home') {\n      (this.parentGroup.children[0] as HTMLGoAccordionItemElement).focusOnControl();\n    }\n    if (key === 'End') {\n      (this.parentGroup.children[this.parentGroup.children.length - 1] as HTMLGoAccordionItemElement).focusOnControl();\n    }\n  }\n\n  onTransitionEnd() {\n    if (this.active) {\n      this.panelEl.style.overflow = 'auto';\n      this.opened.emit();\n    } else {\n      this.panelEl.style.overflow = 'hidden';\n      this.panelEl.style.visibility = 'hidden';\n      this.closed.emit();\n    }\n  }\n  onTransitionStart() {\n    if (this.active) {\n      this.panelEl.style.visibility = 'visible';\n      this.opening.emit();\n    } else {\n      this.closing.emit();\n    }\n  }\n\n  /**\n   * Toggle open state of accordion item\n   */\n  @Method()\n  async toggle() {\n    if (this.active) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes the accordion item\n   */\n  @Method()\n  async close() {\n    this.active = false;\n  }\n\n  /**\n   * Opens the accordion item.\n   */\n  @Method()\n  async open() {\n    this.active = true;\n  }\n\n  /**\n   * Focus on header control\n   */\n  @Method()\n  async focusOnControl() {\n    (this.el.querySelector('.heading-control') as HTMLElement).focus();\n  }\n\n  render() {\n    const { active, autoHeight, headingTag: HeadingTag, panelId, headerId } = this;\n    return (\n      <Host class={{ active, autoHeight }}>\n        <HeadingTag class=\"heading\">\n          <button\n            id={headerId}\n            class=\"heading-control\"\n            role=\"button\"\n            onClick={() => this.toggle()}\n            onKeyDown={(e) => this.handleNavigation(e.key)}\n            aria-expanded={active ? 'true' : 'false'}\n            aria-controls={panelId}>\n            {this.hasHeadingSlot ? <slot name=\"heading\"></slot> : this.heading}\n            <span class=\"arrow\">\n              {this.hasArrowSlot ? (\n                <slot name=\"arrow\"></slot>\n              ) : (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\">\n                  <path d=\"m6 9 6 6 6-6\" />\n                </svg>\n              )}\n            </span>\n          </button>\n        </HeadingTag>\n        <div class=\"panel-wrapper\" role=\"region\" id={panelId} aria-labelledby={headerId} ref={(el) => (this.panelEl = el as HTMLElement)}>\n          <div class=\"panel\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}