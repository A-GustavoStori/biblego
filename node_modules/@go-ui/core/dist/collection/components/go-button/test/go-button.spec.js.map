{"version":3,"file":"go-button.spec.js","sourceRoot":"","sources":["../../../../src/components/go-button/test/go-button.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,yBAAyB;SAChC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,8BAA8B;SACrC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAgB,CAAC;QACxE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE;;;;;;2BAMe;SACtB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC9C,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7D,MAAM,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE;;;0BAGc;SACrB,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GoButton } from '../go-button';\ndescribe('go-button', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [GoButton],\n      html: `<go-button></go-button>`,\n    });\n    expect(page.root).toBeTruthy();\n  });\n\n  it('renders native button', async () => {\n    const page = await newSpecPage({\n      components: [GoButton],\n      html: `<go-button>Hello</go-button>`,\n    });\n    const button = (await page.root.querySelector('button')) as HTMLElement;\n    expect(button.innerText).toBe('Hello');\n  });\n\n  it('renders the props passed in', async () => {\n    const page = await newSpecPage({\n      components: [GoButton],\n      html: `\n      <go-button\n        outline\n        outline-fill\n        flat\n        disabled\n        >Hello</go-button>`,\n    });\n\n    expect(page.root).toHaveClass('outline');\n    expect(page.root).toHaveClass('outline-fill');\n    const nativeButton = await page.root.querySelector('button');\n    expect(nativeButton).toHaveAttribute('aria-disabled');\n    expect(nativeButton).toHaveAttribute('disabled');\n  });\n\n  it('renders <a> tag when href is passed in', async () => {\n    const page = await newSpecPage({\n      components: [GoButton],\n      html: `\n      <go-button\n        href=\"https://www.google.com\"\n        >Link</go-button>`,\n    });\n    const aTag = page.root.querySelector('a');\n    expect(aTag).toBeTruthy();\n    expect(aTag).toHaveClass('inner-button');\n    expect(aTag.getAttribute('href')).toEqual('https://www.google.com');\n    expect(page.root.querySelector('button')).toBeFalsy();\n  });\n});\n"]}