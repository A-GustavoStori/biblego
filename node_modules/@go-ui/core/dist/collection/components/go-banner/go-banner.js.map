{"version":3,"file":"go-banner.js","sourceRoot":"","sources":["../../../src/components/go-banner/go-banner.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAE9F,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAO7C,MAAM,OAAO,QAAQ;;uBAKgC,MAAM;;2BASzB,KAAK;yBAIhB,IAAI;uBAQG,KAAK;;IANjC,6CAA6C;IAC7C,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAID,mDAAmD;IACnD,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC1D,OAAO,CACL,EAAC,IAAI,qDACH,KAAK,EAAE;gBACL,UAAU,EAAE,OAAO;gBACnB,WAAW;gBACX,YAAY,EAAE,SAAS;gBACvB,YAAY,EAAE,CAAC,OAAO;aACvB;YACA,OAAO,CAAC,CAAC,CAAC,CACT,WAAK,KAAK,EAAC,UAAU;gBACnB,YAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACP,CAAC,CAAC,CAAC,IAAI;YAER,gEAAS,KAAK,EAAC,cAAc;gBAC3B,4DAAK,KAAK,EAAC,sBAAsB;oBAC9B,OAAO,CAAC,CAAC,CAAC,UAAI,KAAK,EAAC,IAAI,IAAE,OAAO,CAAM,CAAC,CAAC,CAAC,IAAI;oBAC/C,8DAAa,CACT;gBACL,WAAW,CAAC,CAAC,CAAC,CACb,WAAK,KAAK,EAAC,sBAAsB;oBAC/B,iBACE,OAAO,EAAC,MAAM,EACd,IAAI,QACJ,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,EACjC,KAAK,EAAE,IAAI;wBACX,YAAM,KAAK,EAAC,iBAAiB,cAAe;wBAC5C,0BACc,MAAM,EAClB,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,cAAc,kBACR,GAAG,oBACD,OAAO,qBACN,OAAO,EACvB,OAAO,EAAC,WAAW;4BACnB,YAAM,CAAC,EAAC,sBAAsB,GAAG,CAC7B,CACI,CACR,CACP,CAAC,CAAC,CAAC,IAAI,CACA,CACL,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Element, Prop, Event, EventEmitter, State } from '@stencil/core';\nimport { BannerVariants } from '../../interfaces';\nimport { hasSlot } from '../../utils/helper';\n\n@Component({\n  tag: 'go-banner',\n  styleUrl: 'go-banner.scss',\n  shadow: false,\n})\nexport class GoBanner {\n  @Element() el: HTMLElement;\n  /**\n   * Type of banner\n   */\n  @Prop({ reflect: true }) variant: BannerVariants = 'info';\n  /**\n   * Heading of banner\n   */\n  @Prop() heading?: string;\n\n  /**\n   * If the banner can be dismissed, a close button will be rendered\n   */\n  @Prop() dismissible?: boolean = false;\n\n  @Event() dismissed: EventEmitter<void>;\n\n  @State() isShowing = true;\n\n  // emit dismissed event on close button click\n  handleClose() {\n    this.isShowing = false;\n    this.dismissed.emit();\n  }\n\n  @State() hasIcon: boolean = false;\n\n  // Store attributes inherited from the host element\n  componentWillLoad() {\n    this.hasIcon = hasSlot(this.el, 'icon');\n  }\n\n  render() {\n    const { hasIcon, heading, dismissible, isShowing } = this;\n    return (\n      <Host\n        class={{\n          'has-icon': hasIcon,\n          dismissible,\n          'is-showing': isShowing,\n          'no-heading': !heading,\n        }}>\n        {hasIcon ? (\n          <div class=\"icon-col\">\n            <slot name=\"icon\"></slot>\n          </div>\n        ) : null}\n\n        <section class=\"banner-inner\">\n          <div class=\"banner-inner-content\">\n            {heading ? <h2 class=\"h5\">{heading}</h2> : null}\n            <slot></slot>\n          </div>\n          {dismissible ? (\n            <div class=\"banner-inner-dismiss\">\n              <go-button\n                variant=\"text\"\n                icon\n                class=\"dismissible-btn\"\n                flat={true}\n                onClick={() => this.handleClose()}\n                round={true}>\n                <span class=\"visually-hidden\">Dismiss</span>\n                <svg\n                  aria-hidden=\"true\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M18 6 6 18M6 6l12 12\" />\n                </svg>\n              </go-button>\n            </div>\n          ) : null}\n        </section>\n      </Host>\n    );\n  }\n}\n"]}