import { Host, h } from "@stencil/core";
import { uniqueId } from "lodash-es";
import { warning } from "../../utils/helper";
export class GoSkipLink {
    constructor() {
        /**
         * records if original target element has tabindex attribute set, if so, do not touch it
         */
        this.hasTabIndex = false;
        this.target = 'main';
        this.href = undefined;
    }
    componentWillLoad() {
        // get target element
        // check if id exists
        // if not, generate random id and set it in the link href
        const targetEl = document.querySelector(this.target);
        if (!targetEl) {
            warning(`[go-skip-link] target ${this.target} not found.`);
            return;
        }
        if (targetEl.hasAttribute('tabindex')) {
            this.hasTabIndex = true;
        }
        if (targetEl.id) {
            this.setTabIndex(targetEl, targetEl.id);
            return;
        }
        // generate a random id then set href
        const id = uniqueId('skip-link-target-');
        targetEl.id = id;
        this.setTabIndex(targetEl, id);
    }
    setTabIndex(targetEl, id) {
        this.href = `#${id}`;
        if (!this.hasTabIndex) {
            targetEl.setAttribute('tabindex', '-1');
        }
    }
    render() {
        const { href } = this;
        return (h(Host, { key: '142d6a31279bf07c74991b29663317f8478f5cce' }, h("a", { key: 'd76db3a9e306eb1297f7aed2ae14f7f39ca25fd9', href: href, class: "visually-hidden-focusable" }, h("slot", { key: '7ecbda922a7b31e3d0aea151f4acaed6b178ed8c' }))));
    }
    static get is() { return "go-skip-link"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-skip-link.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-skip-link.css"]
        };
    }
    static get properties() {
        return {
            "target": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Tell skip link which element to focus (supports any query selector)"
                },
                "attribute": "target",
                "reflect": false,
                "defaultValue": "'main'"
            }
        };
    }
    static get states() {
        return {
            "href": {}
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=go-skip-link.js.map
