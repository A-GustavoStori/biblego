{"version":3,"file":"go-badge.js","sourceRoot":"","sources":["../../../src/components/go-badge/go-badge.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOlE,MAAM,OAAO,OAAO;;;mBAUI,CAAC;mBAKD,EAAE;;uBAUL,KAAK;;IAExB,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QACjD,IAAI,YAAY,GAAW,GAAG,KAAK,EAAE,CAAC;QACtC,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;YAChB,OAAO,eAAa,CAAC;QACvB,CAAC;QACD,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;YAChB,YAAY,GAAG,GAAG,GAAG,GAAG,CAAC;QAC3B,CAAC;QAED,OAAO,CACL,EAAC,IAAI;YACH,eAAa;YACb,WAAK,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE;gBACrD,KAAK,CAAC,CAAC,CAAC,YAAM,KAAK,EAAC,iBAAiB,IAAE,KAAK,CAAQ,CAAC,CAAC,CAAC,IAAI;gBAC3D,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,2BAAkB,MAAM,IAAE,YAAY,CAAQ,CAAC,CAAC,CAAC,IAAI,CACtE,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Element, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'go-badge',\n  styleUrl: 'go-badge.scss',\n  shadow: false,\n})\nexport class GoBadge {\n  @Element() el: HTMLElement;\n  /**\n   * Number to be displayed on the badge\n   */\n  @Prop() count: number;\n\n  /**\n   * minimum number displayable on the badge, if count is less than min, the badge will not be displayed\n   */\n  @Prop() min: number = 0;\n\n  /**\n   * maximum number displayable on the badge, if count is greater than max, `{max}+` is displayed\n   */\n  @Prop() max: number = 99;\n\n  /**\n   * Provide a meaningful label for the badge\n   */\n  @Prop() label?: string;\n\n  /**\n   * If true, the badge will be displayed only as a dot, no number will be shown\n   */\n  @Prop() dotOnly? = false;\n\n  render() {\n    const { count, min, max, label, dotOnly } = this;\n    let displayCount: string = `${count}`;\n    if (count < min) {\n      return <slot></slot>;\n    }\n    if (count > max) {\n      displayCount = `${max}+`;\n    }\n\n    return (\n      <Host>\n        <slot></slot>\n        <div class={{ 'badge-count': true, 'dot-only': dotOnly }}>\n          {label ? <span class=\"visually-hidden\">{label}</span> : null}\n          {count && !dotOnly ? <span aria-hidden=\"true\">{displayCount}</span> : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}