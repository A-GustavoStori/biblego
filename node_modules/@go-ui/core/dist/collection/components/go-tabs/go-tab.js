import { h, Host } from "@stencil/core";
/**
 * @slot icon - Slot for the tab icon (only 1 element allowed)
 * @slot icon-active - Slot for the tab icon (only 1 element allowed)
 */
export class GoTab {
    constructor() {
        this.label = undefined;
        this.active = undefined;
        this.tabId = undefined;
        this.panelId = undefined;
        this.iconPosition = 'before';
        this.iconOnly = false;
    }
    async setActive(active) {
        this.active = active;
    }
    render() {
        const { panelId, tabId, active } = this;
        return (h(Host, { key: '260e446d24b1228c702c45b1ee98094be0137e17', tabindex: "0", role: "tabpanel", id: panelId, "aria-labelledby": tabId, class: { 'tab-panel': true, active } }, h("slot", { key: '98cf8d2a43908aa5dc6371f4f337d5029240cef2' })));
    }
    static get is() { return "go-tab"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-tab.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-tab.css"]
        };
    }
    static get properties() {
        return {
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Label displayed on the tab"
                },
                "attribute": "label",
                "reflect": false
            },
            "active": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "If this tab is currently active\nif multiple `go-tab` are active in the same `go-tabs`, first one is active."
                },
                "attribute": "active",
                "reflect": false
            },
            "tabId": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "`id` for the tab button element.\nIf not provided, a unique id will be generated."
                },
                "attribute": "tab-id",
                "reflect": false
            },
            "panelId": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "id for the tab panel element\nIf not provided, a unique id will be generated."
                },
                "attribute": "panel-id",
                "reflect": false
            },
            "iconPosition": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "TabIconPosition",
                    "resolved": "\"after\" | \"before\"",
                    "references": {
                        "TabIconPosition": {
                            "location": "import",
                            "path": "./tabs.type",
                            "id": "src/components/go-tabs/tabs.type.ts::TabIconPosition"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Position of the icon, either 'before' or 'after'"
                },
                "attribute": "icon-position",
                "reflect": false,
                "defaultValue": "'before'"
            },
            "iconOnly": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Only show `icon` and `icon-active` slot content\n\"Label\" prop is still required for screen reader announcement, but will not be shown visually"
                },
                "attribute": "icon-only",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get methods() {
        return {
            "setActive": {
                "complexType": {
                    "signature": "(active: boolean) => Promise<void>",
                    "parameters": [{
                            "name": "active",
                            "type": "boolean",
                            "docs": ""
                        }],
                    "references": {
                        "Promise": {
                            "location": "global",
                            "id": "global::Promise"
                        }
                    },
                    "return": "Promise<void>"
                },
                "docs": {
                    "text": "",
                    "tags": []
                }
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=go-tab.js.map
