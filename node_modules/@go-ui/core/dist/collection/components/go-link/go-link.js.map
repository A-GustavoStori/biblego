{"version":3,"file":"go-link.js","sourceRoot":"","sources":["../../../src/components/go-link/go-link.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAEvD,4EAA4E;AAC5E,iEAAiE;AAMjE,MAAM,OAAO,MAAM;;QAejB,mDAAmD;QAC3C,UAAK,GAAG,EAAE,CAAC;;;mCAHqB,KAAK;0BASd,KAAK;wBAEP,KAAK;;IAPlC,iBAAiB;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,uBAAuB,CAAC,CAAC,CAAC;IACvF,CAAC;IAOD,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC;IAC3C,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,OAAO;QACT,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,GAAW;QAC/B,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACxB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACxC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;QACf,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACrD,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;QAEhF,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1B,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YACnB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,mBAAmB,EAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,SAAS,mCACR,KAAK,KACR,IAAI,EACJ,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EACxB,MAAM,EAAE,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,GACnD,CAAC;QAEF,OAAO,CACL,0EAAO,SAAS;YACd,8DAAa;YACZ,UAAU,IAAI,QAAQ;gBACrB,CAAC,CAAC;oBACE,WAAK,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,WAAW,iBAAa,MAAM,EAAC,KAAK,EAAC,oBAAoB;wBACvG,YAAM,CAAC,EAAC,eAAe,EAAC,IAAI,EAAC,MAAM,GAAG;wBACtC,YAAM,CAAC,EAAC,oIAAoI,GAAG,CAC3I;oBACN,YAAM,KAAK,EAAC,iBAAiB,mCAAoC;iBAClE;gBACH,CAAC,CAAC,IAAI,CACN,CACL,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Element, State, Prop, Watch } from '@stencil/core';\nimport { inheritAttributes } from '../../utils/helper';\n\n// 1. check cross domain and add target=\"_blank\" + rel=\"noopener noreferrer\"\n// 2. check target=\"_blank\" and add visual + screen reader queues\n@Component({\n  tag: 'go-link',\n  styleUrl: 'go-link.scss',\n  shadow: false,\n})\nexport class GoLink {\n  @Element() el: HTMLElement;\n\n  /**\n   * The `href` of the link.\n   */\n  @Prop() href: string;\n\n  /**\n   * The `target` of the link.\n   */\n  @Prop() target?: '_blank' | '_self' | '_parent' | '_top';\n\n  @Prop() expandClickableArea?: boolean = false;\n\n  // Store attributes inherited from the host element\n  private attrs = {};\n  componentWillLoad() {\n    this.checkExternal();\n    this.attrs = inheritAttributes(this.el, ['href', 'target', 'expand-clickable-area']);\n  }\n\n  @State() isExternal: boolean = false;\n\n  @State() isNewTab: boolean = false;\n\n  @Watch('target')\n  checkNewTab() {\n    this.isNewTab = this.target === '_blank';\n  }\n\n  @Watch('href')\n  checkExternal() {\n    if (!this.href) {\n      return;\n    }\n    this.isExternal = this.isExternalURL(this.href);\n    if (this.isExternal) {\n      this.isNewTab = true;\n    }\n  }\n\n  private isExternalURL(url: string): boolean {\n    if (url.startsWith('#')) {\n      return false;\n    }\n    const tmp = document.createElement('a');\n    tmp.href = url;\n    const isExternal = tmp.host !== window.location.host;\n    tmp.remove();\n    return isExternal;\n  }\n\n  render() {\n    const { href, target, attrs, isExternal, isNewTab, expandClickableArea } = this;\n\n    let classes = ['go-link'];\n    if (attrs['class']) {\n      classes.push(attrs['class']);\n    }\n    if (expandClickableArea) {\n      classes.push('expand');\n    }\n    let linkAttrs = {\n      ...attrs,\n      href,\n      class: classes.join(' '),\n      target: isExternal || isNewTab ? '_blank' : target,\n    };\n\n    return (\n      <a {...linkAttrs}>\n        <slot></slot>\n        {isExternal || isNewTab\n          ? [\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"external-link-icon\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n              </svg>,\n              <span class=\"visually-hidden\">Opens in new a tab or window</span>,\n            ]\n          : null}\n      </a>\n    );\n  }\n}\n"]}