import { Host, h } from "@stencil/core";
import { hasSlot, warning } from "../../utils/helper";
/**
 * @slot default - content below the main heading
 */
export class GoHero {
    constructor() {
        this.hasFullWidthBg = false;
        this.heading = undefined;
        this.preHeading = undefined;
        this.breadcrumbs = undefined;
        this.imgSrc = undefined;
        this.imgAlt = undefined;
        this.hideImgOnMobile = false;
    }
    watchImgSrc(value) {
        if (value && !this.imgAlt) {
            warning('img-alt attribute is required when img-src is present');
        }
    }
    watchImgAlt(value) {
        if (value && !this.imgSrc) {
            warning('img-src attribute is not present, did you forget to add it?');
        }
    }
    componentWillLoad() {
        this.hasFullWidthBg = hasSlot(this.el, 'full-width-bg');
    }
    render() {
        const { heading, preHeading, breadcrumbs, imgAlt, imgSrc, hasFullWidthBg, hideImgOnMobile } = this;
        return (h(Host, { key: 'df0c63d107f0e47d46d706aff84d6fef7b869ca5', class: {
                'has-full-width-bg': hasFullWidthBg,
                'hide-img-on-mobile': !!hideImgOnMobile,
            } }, h("div", { key: '6073db59c9f5f89f7452df8daa562942eb198110' }, hasFullWidthBg ? (h("div", { class: "full-width-bg" }, h("slot", { name: "full-width-bg" }))) : null, h("div", { key: '37cbac69b69a21dde06f445524ee55e54abdf242', class: "container" }, h("div", { key: '94f3a65f89050bcb9c256c268c350607535154e0', class: "hero-container" }, h("div", { key: '40d0542bbc423131fcea8265f845d626aeb56c30', class: "hero-text" }, hasFullWidthBg ? h("div", { class: "hero-text-bg" }) : null, breadcrumbs ? h("go-breadcrumbs", { items: breadcrumbs }) : null, h("div", { key: 'aafef086a6555ec3c3936d853e4b4ce7ac61cade', class: "pre-heading text-size-2" }, preHeading), h("h1", { key: '014c347f22abf2f5c878e02df625c1b4b563002c', class: "text-display-2" }, heading), h("slot", { key: 'db3091ebbea24d61a01107d022d6a013a8a7ce8c' })), imgSrc && imgAlt ? (h("div", { class: "hero-image" }, h("img", { src: imgSrc, alt: imgAlt, class: "featured-img" }))) : null)))));
    }
    static get is() { return "go-hero"; }
    static get originalStyleUrls() {
        return {
            "$": ["go-hero.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["go-hero.css"]
        };
    }
    static get properties() {
        return {
            "heading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Hero heading (h1)"
                },
                "attribute": "heading",
                "reflect": false
            },
            "preHeading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Pre heading text - use only when required"
                },
                "attribute": "pre-heading",
                "reflect": false
            },
            "breadcrumbs": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "INavItem[] | string",
                    "resolved": "INavItem[] | string",
                    "references": {
                        "INavItem": {
                            "location": "import",
                            "path": "../../interfaces",
                            "id": "src/interfaces/index.ts::INavItem"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Breadcrumb navigation items"
                },
                "attribute": "breadcrumbs",
                "reflect": false
            },
            "imgSrc": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "hero image src url\n(requires img-alt attribute to be present to render)"
                },
                "attribute": "img-src",
                "reflect": false
            },
            "imgAlt": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "hero image alt text\n(requires img-src attribute to be present to render)"
                },
                "attribute": "img-alt",
                "reflect": false
            },
            "hideImgOnMobile": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "if we should hide hero img on mobile(`full-width-bg` slot not affected)"
                },
                "attribute": "hide-img-on-mobile",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "imgSrc",
                "methodName": "watchImgSrc"
            }, {
                "propName": "imgAlt",
                "methodName": "watchImgAlt"
            }];
    }
}
//# sourceMappingURL=go-hero.js.map
