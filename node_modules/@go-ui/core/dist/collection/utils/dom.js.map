{"version":3,"file":"dom.js","sourceRoot":"","sources":["../../src/utils/dom.ts"],"names":[],"mappings":"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","sourcesContent":["export const AUTO_FOCUS_TIMEOUT = 50;\n/**\n * handle click outside of element\n * @param el target element\n * @param callback handler\n * @returns clean up function, call to remove event listener\n */\nexport function onClickOutside(el: HTMLElement, callback: (event: MouseEvent) => void): () => void {\n  const handler = (e: MouseEvent) => {\n    if (el.contains(e.target as HTMLElement)) return;\n    callback(e);\n  };\n  document.addEventListener('click', handler);\n  return () => document.removeEventListener('click', handler);\n}\n\n/**\n * Add one time animationend event listener to given element, and remove it after fired once\n */\nexport function onAnimationEnd(el: HTMLElement, callback: () => void) {\n  el.addEventListener('animationend', callback, { once: true });\n}\n\n/**\n * Fade out and remove element\n * @param el target element\n */\nexport function fadeOutRemove(el: HTMLElement, callback?: () => void) {\n  // fade out DOM element then remove\n  el.classList.add('animate-fade-out');\n  onAnimationEnd(el, () => {\n    el.remove();\n    if (callback) callback();\n  });\n}\n\n/**\n * Move an element into another parent\n * @param el Element to be moved\n * @param to Parent element to move el into\n */\nexport function moveEl(el: HTMLElement | Element, to: HTMLElement | Element) {\n  to.appendChild(el);\n}\n\nexport const tabIndexes = {\n  disabled: '-1',\n  tabbable: '0',\n};\n\n/**\n * Get all focusable elements inside a given element\n * @param parent container element\n * @returns\n */\nexport function getFocusableChildren(parent: HTMLElement): HTMLElement[] {\n  const selectors = ['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex=\"-1\"])'];\n  return Array.from(parent.querySelectorAll(selectors.join(',')));\n}\n\n/**\n * Get the first focusable element in a given element\n * @param parent container element\n * @returns\n */\nexport function getFirstFocusableChild(parent: HTMLElement): HTMLElement {\n  return getFocusableChildren(parent)[0];\n}\n\n/**\n * Get the last focusable element in a given element\n * @param parent container element\n * @returns\n */\nexport function getLastFocusableChild(parent: HTMLElement): HTMLElement {\n  const list = getFocusableChildren(parent);\n  return list[list.length - 1];\n}\n/**\n * Trap focus\n * @param parent parent element that we trap focus within\n * @param focusOnFirst if true, automatically focus on first focusable element (default = true)\n *\n * @returns list of focusable child elements\n */\nexport function trapFocus(parent: HTMLElement, focusOnFirst = true): HTMLElement[] {\n  const focusableChildren = getFocusableChildren(parent);\n  const firstFocusableEl = focusableChildren[0];\n  const lastFocusableEl = focusableChildren[focusableChildren.length - 1];\n\n  lastFocusableEl?.addEventListener('keydown', (e: KeyboardEvent) => {\n    if (e.code === 'Tab' && !e.shiftKey) {\n      e.preventDefault();\n      firstFocusableEl?.focus();\n    }\n  });\n  firstFocusableEl?.addEventListener('keydown', (e: KeyboardEvent) => {\n    if (e.code === 'Tab' && e.shiftKey) {\n      e.preventDefault();\n      lastFocusableEl?.focus();\n    }\n  });\n  // focus on first focusable element automatically\n  if (focusOnFirst) {\n    setTimeout(() => firstFocusableEl?.focus(), AUTO_FOCUS_TIMEOUT);\n  }\n\n  return focusableChildren;\n}\n\nexport function focusFirstWithin(parent: HTMLElement): void {\n  const focusableChildren = getFocusableChildren(parent);\n  const firstFocusableEl = focusableChildren[0];\n  if (firstFocusableEl) {\n    setTimeout(() => {\n      firstFocusableEl.focus();\n    }, AUTO_FOCUS_TIMEOUT);\n  }\n}\n\nexport function focusLastWithin(parent: HTMLElement): void {\n  const lastFocusableChild = getLastFocusableChild(parent);\n  if (lastFocusableChild) {\n    setTimeout(() => {\n      lastFocusableChild.focus();\n    }, AUTO_FOCUS_TIMEOUT);\n  }\n}\n\n/**\n *\n * Add event listener on escape key press\n * @param el the element to add event listener to\n */\nexport function onEscape(el: HTMLElement | Document, callback: (e: KeyboardEvent) => void): () => void {\n  const handler = (e) => {\n    if (e.code === 'Escape') {\n      callback(e);\n    }\n  };\n  el.addEventListener('keydown', handler);\n\n  return () => el.removeEventListener('click', handler);\n}\n"]}