{"file":"go-dialog.js","mappings":";;;;;;AAAA,MAAM,WAAW,GAAG,wgCAAwgC,CAAC;AAC7hC,uBAAe,WAAW;;MCObA,UAAQ;;;;;QAsBnB,cAAS,GAAW,QAAQ,CAAC,gBAAgB,CAAC,CAAC;sBAjBW,KAAK;0BAKjC,KAAK;;0BASL,IAAI;;IAQlC,MAAM,KAAK;QACT,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IAGD,MAAM,IAAI;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACpB;IAGD,kBAAkB,CAAC,QAAiB;QAClC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,OAAO;SACR;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;IAGD,kBAAkB;QAChB,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QACvE,QACE,mEACE,KAAK,EAAC,WAAW,EACjB,UAAU,EAAE,UAAU,EACtB,IAAI,EAAC,QAAQ,gBACF,MAAM,qBACA,SAAS,EAC1B,MAAM,EAAE,MAAM,iBACD,MAAM,GAAG,OAAO,GAAG,MAAM,EACtC,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAClC,cAAc,EAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,IAC/C,4DAAK,KAAK,EAAC,iBAAiB,EAAC,EAAE,EAAE,SAAS,IACxC,6DAAM,IAAI,EAAC,SAAS,IAClB,EAAC,CAAC,qDAAC,KAAK,EAAC,SAAS,IAAE,OAAO,CAAK,CAC3B,EACN,CAAC,UAAU,IACV,iBACE,KAAK,EAAC,WAAW,EACjB,IAAI,QACJ,IAAI,QACJ,KAAK,QACL,OAAO,EAAC,MAAM,EACd,OAAO,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,gBAChB,cAAc,IACzB,0BACc,MAAM,EAClB,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,cAAc,kBACR,GAAG,oBACD,OAAO,qBACN,OAAO,EACvB,OAAO,EAAC,WAAW,IACnB,YAAM,CAAC,EAAC,sBAAsB,GAAG,CAC7B,CACI,IACV,IAAI,CACJ,EACN,8DAAa,CACF,EACb;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GoDialog"],"sources":["src/components/go-dialog/go-dialog.scss?tag=go-dialog","src/components/go-dialog/go-dialog.tsx"],"sourcesContent":["go-overlay.go-dialog {\n  --go-overlay-content-padding-y: 1.5rem;\n  --go-overlay-content-padding-x: 1.5rem;\n  --go-overlay-content-width: 80%;\n  --go-overlay-content-bg-color: var(--go-color-bg);\n  --go-overlay-content-max-width: 1140px;\n  --go-overlay-content-gap: 10vh;\n  --go-overlay-close-btn-text-color: currentColor;\n\n  display: grid;\n  place-items: center;\n\n  .overlay-content {\n    position: relative;\n    height: 100%;\n    width: 100%;\n    padding: var(--go-overlay-content-padding-y) var(--go-overlay-content-padding-x);\n    max-width: var(--go-overlay-content-max-width);\n    background: var(--go-overlay-content-bg-color);\n    @include tablet {\n      width: var(--go-overlay-content-width);\n      height: auto;\n      margin: var(--go-overlay-content-gap) auto;\n      border-radius: var(--radius-3);\n    }\n  }\n  .overlay-heading {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    .heading{\n      font-size: var(--go-size-3);\n      font-weight: 500;\n      line-height: 1.5;\n    }\n    .close-btn {\n      flex: 0;\n    }\n  }\n}\n","import { Component, h, Element, Prop, Method, Watch } from '@stencil/core';\nimport { uniqueId } from 'lodash-es';\n\n@Component({\n  tag: 'go-dialog',\n  styleUrl: 'go-dialog.scss',\n  shadow: false,\n})\nexport class GoDialog {\n  @Element() el: HTMLElement;\n  /**\n   * If this dialog is active\n   */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n   * If persistent, the overlay will not be closed when the user clicks outside of it or presses the escape key.\n   */\n  @Prop() persistent: boolean = false;\n  /**\n   * Heading of the overlay content\n   */\n  @Prop() heading?: string;\n\n  /**\n   * HTML tag for the heading\n   */\n  @Prop() headingTag?: string = 'h2';\n\n  // aria-labelledby https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html\n  headingId: string = uniqueId('overlay-label-');\n\n  overlayEl: HTMLElement;\n\n  @Method()\n  async close() {\n    this.active = false;\n  }\n\n  @Method()\n  async open() {\n    this.active = true;\n  }\n\n  @Watch('active')\n  watchActiveHandler(isActive: boolean): void {\n    if (isActive) {\n      this.open();\n      return;\n    }\n    this.close();\n  }\n\n  // keep active state in sync with overlay\n  handleOverlayClose() {\n    this.close();\n  }\n\n  render() {\n    const { active, heading, persistent, headingId, headingTag: H } = this;\n    return (\n      <go-overlay\n        class=\"go-dialog\"\n        persistent={persistent}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={headingId}\n        active={active}\n        aria-hidden={active ? 'false' : 'true'}\n        ref={(el) => (this.overlayEl = el)}\n        onOverlayClose={() => this.handleOverlayClose()}>\n        <div class=\"overlay-heading\" id={headingId}>\n          <slot name=\"heading\">\n            <H class=\"heading\">{heading}</H>\n          </slot>\n          {!persistent ? (\n            <go-button\n              class=\"close-btn\"\n              flat\n              icon\n              stack\n              variant=\"text\"\n              onClick={() => this.close()}\n              aria-label=\"Close dialog\">\n              <svg\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M18 6 6 18M6 6l12 12\" />\n              </svg>\n            </go-button>\n          ) : null}\n        </div>\n        <slot></slot>\n      </go-overlay>\n    );\n  }\n}\n"],"version":3}