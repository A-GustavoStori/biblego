import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';

const goDropdownItemCss = "";
const GoDropdownItemStyle0 = goDropdownItemCss;

const GoDropdownItem$1 = /*@__PURE__*/ proxyCustomElement(class GoDropdownItem extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.selected = createEvent(this, "selected", 7);
        this.width = '100%';
        this.disabled = false;
        this.hasFocus = false;
    }
    async focusInControl() {
        var _a;
        (_a = this.controlEl) === null || _a === void 0 ? void 0 : _a.focus();
        this.controlEl.tabIndex = 0;
    }
    async focusOutControl() {
        this.controlEl.tabIndex = -1;
    }
    render() {
        const { width, hasFocus } = this;
        return (h("button", { key: '1f144f9e896738f1a8f3d48df9dc155741e2a891', type: "button", role: "menuitem", tabindex: hasFocus ? '0' : '-1', ref: (el) => (this.controlEl = el), "aria-disabled": this.disabled, onClick: (e) => {
                if (this.disabled) {
                    e.preventDefault();
                    return;
                }
                this.selected.emit(this.el);
            }, style: { '--dd-item-width': width } }, h("slot", { key: 'e3428e870c92fdc430b3ca4a4da617de15391920' })));
    }
    get el() { return this; }
    static get style() { return GoDropdownItemStyle0; }
}, [4, "go-dropdown-item", {
        "width": [1],
        "disabled": [516],
        "hasFocus": [32],
        "focusInControl": [64],
        "focusOutControl": [64]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-dropdown-item"];
    components.forEach(tagName => { switch (tagName) {
        case "go-dropdown-item":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoDropdownItem$1);
            }
            break;
    } });
}
defineCustomElement$1();

const GoDropdownItem = GoDropdownItem$1;
const defineCustomElement = defineCustomElement$1;

export { GoDropdownItem, defineCustomElement };

//# sourceMappingURL=go-dropdown-item.js.map