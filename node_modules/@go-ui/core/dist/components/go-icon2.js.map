{"file":"go-icon2.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,8TAA8T,CAAC;AACjV,qBAAe,SAAS;;MCqBX,MAAM;;;;QA8BT,UAAK,GAAG,EAAS,CAAC;uBAxBuE,gBAAgB;;;;;;IAyBjH,iBAAiB;QACf,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAC1D,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;QACvC;;QAEE,EAAC,IAAI,oEACU,KAAK,GAAG,OAAO,GAAG,MAAM,EACrC,KAAK,EAAE;gBACL,aAAa,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI;gBACjC,cAAc,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI;aACrC,IAAG,KAAK,GAAG,YAAM,KAAK,EAAC,iBAAiB,IAAE,KAAK,CAAQ,GAAG,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,YAAM,KAAK,EAAE,GAAG,OAAO,YAAY,aAAa,GAAG,aAAa,GAAG,EAAE,EAAE,IAAG,IAAI,CAAQ,GAAG,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAG,KAAK,EAAE,GAAG,OAAO,OAAO,IAAI,YAAY,aAAa,GAAG,aAAa,GAAG,EAAE,EAAE,GAAM,GAAG,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAG,KAAK,EAAE,MAAM,OAAO,IAAI,IAAI,YAAY,aAAa,GAAG,aAAa,GAAG,EAAE,EAAE,GAAM,GAAG,IAAI,CAAQ,EAC3b;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/go-icon/go-icon.scss?tag=go-icon","src/components/go-icon/go-icon.tsx"],"sourcesContent":["go-icon {\n  --icon-size: 1em;\n  --icon-color: currentColor;\n\n  &[icon-set^='material'] {\n    --icon-size: 1.5em;\n    vertical-align: middle;\n    .go-icon {\n      transform: rotate(0.03deg); // https://github.com/google/material-design-icons/issues/648\n      line-height: 1em;\n      display: inherit;\n    }\n  }\n\n  display: inline-block;\n  line-height: 1;\n  .go-icon {\n    font-size: var(--icon-size);\n    color: var(--icon-color);\n  }\n}\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\nimport { IconProps } from '../../interfaces';\nimport { $attrs } from '../../utils/helper';\nexport type MaterialIconVariants =\n  | `material-icons`\n  | `material-icons-outlined`\n  | `material-icons-round`\n  | `material-icons-sharp`;\n/**\n * https://fontawesome.com/v5.15/how-to-use/on-the-web/referencing-icons/basic-use\n */\nexport type FontAwesomeVariants = 'fas' | 'far' | 'fal' | 'fad' | 'fab';\n/**\n * https://boxicons.com/usage @see type\n */\nexport type BoxiconVariants = 'bx' | 'bxs' | 'bxl';\n\n@Component({\n  tag: 'go-icon',\n  styleUrl: 'go-icon.scss',\n  shadow: false,\n})\nexport class GoIcon implements IconProps {\n  @Element() el: HTMLElement;\n  /**\n   * Specify the icon set being referenced.\n   * Icon font CSS files must be included in the page.\n   */\n  @Prop({ reflect: true }) iconSet: MaterialIconVariants | FontAwesomeVariants | BoxiconVariants = 'material-icons';\n\n  /**\n   * Name of the icon\n   */\n  @Prop() name: string;\n\n  /**\n   * Size of the icon, supports CSS units and variables.\n   * Default: 1.5em for material icons, 1em for other icon sets.\n   */\n  @Prop() size?: string;\n\n  /**\n   * Color of the icon,  supports CSS units and variables.\n   * Default: `currentColor`\n   */\n  @Prop() color?: string;\n\n  /**\n   * provide label for screen reader\n   */\n  @Prop() label?: string;\n\n  private attrs = {} as any;\n  componentWillLoad() {\n    this.attrs = $attrs.bind(this)(false);\n  }\n\n  render() {\n    const { iconSet, name, size, color, label, attrs } = this;\n    const { class: customClasses } = attrs;\n    return (\n      // prettier-ignore\n      <Host\n        aria-hidden={label ? 'false' : 'true'}\n        style={{\n          '--icon-size': size ? size : null,\n          '--icon-color': color ? color : null,\n        }}>{label ? <span class=\"visually-hidden\">{label}</span> : null}{iconSet.startsWith('material') ? <span class={`${iconSet} go-icon ${customClasses ? customClasses : ''}`}>{name}</span> : null}{iconSet.startsWith('fa') ? <i class={`${iconSet} fa-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}{iconSet.startsWith('bx') ? <i class={`bx ${iconSet}-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}</Host>\n    );\n  }\n}\n"],"version":3}