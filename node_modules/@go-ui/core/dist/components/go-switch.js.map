{"file":"go-switch.js","mappings":";;;;;AAAA,MAAM,WAAW,GAAG,s2FAAs2F,CAAC;AAC33F,uBAAe,WAAW;;MCSbA,UAAQ;;;;;QAuDX,UAAK,GAAG,EAAS,CAAC;;;;;;qBAlCV,KAAK;yBAKD,KAAK;yBAKL,KAAK;gCAKE,KAAK;2BAKF,IAAI;6BAKF,KAAK;;IAIrC,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;KACjC;IAID,iBAAiB;QACf,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACjD,MAAM,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC;KAChF;IAED,MAAM;QACJ,MAAM,EACJ,OAAO,EACP,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,WAAW,EACX,aAAa,GACd,GAAG,IAAI,CAAC;QACT,MAAM,OAAO,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,EAAE,IAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC9D,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,IAC7C,8DAAO,OAAO,EAAE,OAAO,IAAG,KAAK,CAAS,EACxC,4DAAK,KAAK,EAAC,kBAAkB,IAC3B,4EACE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAChC,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,QAAQ,EACb,EAAE,EAAE,OAAO,EACX,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,IACR,KAAK,IACT,QAAQ,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IACrC,EACF,4DAAK,KAAK,EAAC,cAAc,IACvB,6DAAM,KAAK,EAAC,cAAc,IACxB,6DAAM,KAAK,EAAC,eAAe,GAAQ,EAClC,SAAS,IACR,YAAM,KAAK,EAAC,aAAa,iBAAa,MAAM,IACzC,OAAO,GAAG,WAAW,GAAG,aAAa,CACjC,IACL,IAAI,CACH,EACN,gBAAgB,IACf,YAAM,KAAK,EAAC,aAAa,iBAAa,MAAM,IACzC,OAAO,GAAG,WAAW,GAAG,aAAa,CACjC,IACL,IAAI,CACJ,CACF,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GoSwitch"],"sources":["src/components/form/go-switch/go-switch.scss?tag=go-switch","src/components/form/go-switch/go-switch.tsx"],"sourcesContent":["go-switch {\n  /**\n    @prop --switch-width:\n      width of switch control\n      - default: 4rem\n  */\n  --switch-width: 4rem;\n\n  /**\n    @prop --switch-height:\n      height of switch control\n      - default: 2rem\n  */\n  --switch-height: 2rem;\n\n  /**\n    @prop --switch-bg-color:\n      default background color of switch control\n      - default: var(--go-color-neutral-500)\n  */\n  --switch-bg-color: var(--go-color-neutral-500);\n\n  /**\n    @prop --switch-bg-color-checked:\n      background color of switch control when checked\n      - default: var(--go-color-primary-600)\n  */\n  --switch-bg-color-checked: var(--go-color-primary-600);\n\n  /**\n    @prop --switch-label-gap:\n      gap between label and switch control\n      - default: 1rem\n  */\n  --switch-label-gap: 1rem;\n\n  /**\n    @prop --switch-radius:\n      border radius of switch control\n      - default: var(--radius-round)\n  */\n  --switch-radius: var(--radius-round);\n\n  /**\n    @prop --switch-handle-color:\n      color of the switch handle\n      - default: #fff\n  */\n  --switch-handle-color: #fff;\n\n  /**\n    @prop --switch-handle-gap:\n      gap between handle circle and the edge of the switch\n      - default: 4px\n  */\n  --switch-handle-gap: 4px;\n\n  /**\n    @prop --switch-handle-shadow:\n      box shadow for the handle circle\n      - default: var(--shadow-2)\n  */\n  --switch-handle-shadow: var(--shadow-2);\n\n  /**\n    @prop --switch-shadow:\n      shadow on the switch track\n      - default: var(--inner-shadow-1)\n  */\n  --switch-shadow: var(--inner-shadow-1);\n\n  /**\n    @prop --switch-text-color:\n      Text color for on off label\n      - default: #fff\n  */\n  --switch-text-color: #fff;\n  --switch-handle-size: calc(min(var(--switch-width), var(--switch-height)) - 2 * var(--switch-handle-gap));\n\n  /**\n    @prop --switch-text-size:\n      Inner text size of switch\n      - default: max(calc(var(--switch-handle-size) / 2), 14px)\n  */\n  --switch-text-size: max(calc(var(--switch-handle-size) / 2), 14px);\n\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(--switch-label-gap);\n  &.stack {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--form-label-gap);\n  }\n  &.full-width {\n    display: flex;\n    justify-content: space-between;\n    label {\n      flex-grow: 1;\n    }\n  }\n  label {\n    cursor: pointer;\n    font-weight: 700;\n  }\n\n  .switch-container {\n    position: relative;\n  }\n  .switch-group {\n    display: flex;\n    align-items: center;\n    gap: calc(var(--switch-label-gap) / 2);\n  }\n  .switch-track {\n    @include transition(background-color, outline-offset var(--go-duration-fast));\n\n    display: block;\n    position: relative;\n    padding-inline: var(--switch-handle-gap);\n    width: var(--switch-width);\n    height: var(--switch-height);\n    background: var(--switch-bg-color);\n    border-radius: var(--switch-radius);\n    box-shadow: var(--switch-shadow);\n\n    .switch-text {\n      position: absolute;\n      top: 50%;\n      left: auto;\n      right: 20%;\n      transform: translateY(-50%);\n      color: var(--switch-text-color);\n      font-size: var(--switch-text-size);\n      line-height: 1;\n      font-weight: 500;\n    }\n  }\n\n  .switch-handle {\n    display: block;\n    position: absolute;\n    top: var(--switch-handle-gap);\n    left: var(--switch-handle-gap);\n    bottom: var(--switch-handle-gap);\n    z-index: 1;\n    background: var(--switch-handle-color);\n    width: var(--switch-handle-size);\n    height: var(--switch-handle-size);\n    border-radius: var(--switch-radius);\n    box-shadow: var(--switch-handle-shadow);\n    @include transition(transform var(--go-duration-fast));\n  }\n\n  input {\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n    outline: none;\n    cursor: pointer;\n    &:checked {\n      ~ .switch-group {\n        .switch-track {\n          --switch-bg-color: var(--switch-bg-color-checked);\n          .switch-handle {\n            transform: translateX(calc(var(--switch-width) - var(--switch-handle-size) - 2 * var(--switch-handle-gap)));\n          }\n          .switch-text {\n            left: 20%;\n            right: auto;\n          }\n        }\n      }\n    }\n\n    &:focus-visible {\n      &:active {\n        ~ .switch-group {\n          .switch-track {\n            outline-offset: 0;\n          }\n        }\n      }\n      ~ .switch-group {\n        .switch-track {\n          outline: var(--go-focus-outline-width) solid var(--switch-bg-color);\n          outline-offset: var(--go-focus-outline-offset);\n        }\n      }\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\nimport { inheritAttributes } from '../../../utils/helper';\nimport { uniqueId, kebabCase } from 'lodash-es';\nimport { CheckboxProps } from '../../../interfaces/form';\n\n@Component({\n  tag: 'go-switch',\n  styleUrl: 'go-switch.scss',\n  shadow: false,\n})\nexport class GoSwitch implements CheckboxProps {\n  @Prop({ mutable: true })\n  checked?: boolean;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  disabled?: boolean;\n\n  @Prop()\n  value: any;\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Display label on top of switch\n   */\n  @Prop() stack = false;\n\n  /**\n   * make this field full width\n   */\n  @Prop() fullWidth = false;\n\n  /**\n   * show on/off text in switch toggle\n   */\n  @Prop() showOnOff = false;\n\n  /**\n   * show on/off text next to the switch toggle\n   */\n  @Prop() showOnOffOutside = false;\n\n  /**\n   * \"on\" label to show when `showOnOff*` is set to true\n   */\n  @Prop() activeLabel: string = 'On';\n\n  /**\n   * \"off\" label to show when `showOnOff*` is set to true\n   */\n  @Prop() inactiveLabel: string = 'Off';\n\n  inputEl: HTMLInputElement;\n\n  handleChange(e) {\n    this.checked = e.target.checked;\n  }\n\n  // Store attributes inherited from the host element\n  private attrs = {} as any;\n  componentWillLoad() {\n    const propNames = Object.keys(this['__proto__']);\n    const attributeNames = propNames.map((name) => kebabCase(name));\n    this.attrs = inheritAttributes(this.el, ['class', 'style', ...attributeNames]);\n  }\n\n  render() {\n    const {\n      checked,\n      name,\n      label,\n      disabled,\n      value,\n      attrs,\n      stack,\n      fullWidth,\n      showOnOff,\n      showOnOffOutside,\n      activeLabel,\n      inactiveLabel,\n    } = this;\n    const inputId = attrs?.id ? attrs.id : uniqueId('go-switch-');\n    return (\n      <Host class={{ stack, 'full-width': fullWidth }}>\n        <label htmlFor={inputId}>{label}</label>\n        <div class=\"switch-container\">\n          <input\n            ref={(el) => (this.inputEl = el)}\n            type=\"checkbox\"\n            role=\"switch\"\n            id={inputId}\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            value={value}\n            {...attrs}\n            onChange={(e) => this.handleChange(e)}\n          />\n          <div class=\"switch-group\">\n            <span class=\"switch-track\">\n              <span class=\"switch-handle\"></span>\n              {showOnOff ? (\n                <span class=\"switch-text\" aria-hidden=\"true\">\n                  {checked ? activeLabel : inactiveLabel}\n                </span>\n              ) : null}\n            </span>\n            {showOnOffOutside ? (\n              <span class=\"text-size-0\" aria-hidden=\"true\">\n                {checked ? activeLabel : inactiveLabel}\n              </span>\n            ) : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}