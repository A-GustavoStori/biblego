import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';
import { w as warning } from './helper.js';

const GoNavSubmenuTrigger = /*@__PURE__*/ proxyCustomElement(class GoNavSubmenuTrigger extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.controls = undefined;
        this.isOpen = false;
    }
    loadSubmenuEl() {
        if (this.controls) {
            this.submenuEl = document.getElementById(this.controls);
            if (!this.submenuEl) {
                warning('<go-nav-submenu-trigger> is missing <go-nav-submenu> with id: ' + this.controls, this.el);
            }
            this.submenuEl.addEventListener('toggle', (e) => {
                this.isOpen = e.detail.isOpen;
            });
        }
    }
    toggleOpenState() {
        this.submenuEl.toggle();
    }
    componentDidLoad() {
        this.loadSubmenuEl();
    }
    render() {
        const Tag = 'button';
        return (h(Tag, { key: '0afb1549dd2e97a8e0b65ab254720b894be26040', class: "nav-item-inner", onClick: () => this.toggleOpenState(), type: "button", "aria-haspopup": "true", "aria-controls": this.controls ? this.controls : undefined, "aria-expanded": this.isOpen ? 'true' : 'false' }, h("span", { key: '6bbbeafa1cdfccd4b2cf37440863a8f5154e3e4e', class: "nav-item-label" }, h("slot", { key: '685ccffaf7270fee2aa2106aa6c0e2bafe21b5e5' })), h("svg", { key: '9f8b1a268ad2f5a790c13fda3b6839a774e52f8b', xmlns: "http://www.w3.org/2000/svg", fill: "none", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round", viewBox: "0 0 24 24" }, h("path", { key: 'd6be239226be1c3a2fba2ee68dcbacaddb44c4c8', d: "m6 9 6 6 6-6" }))));
    }
    get el() { return this; }
}, [4, "go-nav-submenu-trigger", {
        "controls": [513],
        "isOpen": [32]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-nav-submenu-trigger"];
    components.forEach(tagName => { switch (tagName) {
        case "go-nav-submenu-trigger":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoNavSubmenuTrigger);
            }
            break;
    } });
}
defineCustomElement();

export { GoNavSubmenuTrigger as G, defineCustomElement as d };

//# sourceMappingURL=go-nav-submenu-trigger2.js.map