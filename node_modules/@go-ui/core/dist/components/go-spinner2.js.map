{"file":"go-spinner2.js","mappings":";;AAAA,MAAM,YAAY,GAAG,qpBAAqpB,CAAC;AAC3qB,wBAAe,YAAY;;MCMd,SAAS;;;;;;;;;uBA+BQ,KAAK;uBAKW,IAAI;mCAKV,SAAS;;;IAI/C,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;KAC/B;IAGD,cAAc,CAAC,KAAc;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAED,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;QAC1G,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,sBAAsB,CAAC,GAAG,SAAS,CAAC;SAC5C;QACD,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,sBAAsB,CAAC,GAAG,SAAS,CAAC;SAC5C;QACD,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;SACjC;QACD,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,sBAAsB,CAAC,GAAG,SAAS,CAAC;SAC5C;QACD,IAAI,QAAQ,EAAE;YACZ,MAAM,CAAC,oBAAoB,CAAC,GAAG,QAAQ,CAAC;SACzC;QACD,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,SAAS,EAAE,IACjF,SAAS;cACN;gBACE,0BAAiB,MAAM,EAAC,KAAK,EAAC,SAAS,GAAO;gBAC9C,gBACE,YAAM,KAAK,EAAC,iBAAiB,IAAE,mBAAmB,CAAQ,CACrD;aACR;cACD,IAAI,CACH,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/go-spinner/go-spinner.scss?tag=go-spinner","src/components/go-spinner/go-spinner.tsx"],"sourcesContent":["go-spinner {\n  --spinner-ring-color: var(--go-color-primary-800);\n  --spinner-base-color: var(--go-color-neutral-300);\n  --spinner-size: 1.5rem;\n  --spinner-ring-width: calc(var(--spinner-size) / 10);\n  --spinner-duration: 500ms;\n  --spinner-gap: 0.5rem;\n\n  display: inline-flex;\n  gap: var(--spinner-gap);\n  align-items: center;\n  &.stacked {\n    flex-direction: column;\n  }\n  .spinner {\n    border: var(--spinner-ring-width) solid var(--spinner-base-color);\n    border-radius: 50%;\n    border-top-color: var(--spinner-ring-color);\n    width: var(--spinner-size);\n    height: var(--spinner-size);\n    animation: spin var(--spinner-duration) linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, Watch, State } from '@stencil/core';\n\n@Component({\n  tag: 'go-spinner',\n  styleUrl: 'go-spinner.scss',\n  shadow: false,\n})\nexport class GoSpinner {\n  @Element() el: HTMLElement;\n\n  /**\n   * Set the ring color of the spinner.\n   */\n  @Prop() ringColor?: string;\n\n  /**\n   * Set the base color of the spinner.\n   */\n  @Prop() baseColor?: string;\n\n  /**\n   * Set the width and height of the spinner.\n   */\n  @Prop() size?: string;\n\n  /**\n   * Set the width of the spinner ring\n   */\n  @Prop() ringWidth?: string;\n\n  /**\n   * Set how long it should take to complete one full rotation in milliseconds.\n   */\n  @Prop() duration?: number;\n\n  /**\n   * If true, spinner and label will be stacked.\n   */\n  @Prop() stacked?: boolean = false;\n\n  /**\n   * set the loading state\n   */\n  @Prop({ reflect: true }) loading: boolean = true;\n\n  /**\n   * screen reader announcement when loading\n   */\n  @Prop() loadingAnnouncement: string = 'Loading';\n\n  @State() isLoading: boolean;\n\n  componentWillLoad() {\n    this.isLoading = this.loading;\n  }\n\n  @Watch('loading')\n  loadingChanged(value: boolean) {\n    this.isLoading = value;\n  }\n\n  render() {\n    const { ringColor, baseColor, size, ringWidth, duration, stacked, isLoading, loadingAnnouncement } = this;\n    let styles = {};\n    if (ringColor) {\n      styles['--spinner-ring-color'] = ringColor;\n    }\n    if (baseColor) {\n      styles['--spinner-base-color'] = baseColor;\n    }\n    if (size) {\n      styles['--spinner-size'] = size;\n    }\n    if (ringWidth) {\n      styles['--spinner-ring-width'] = ringWidth;\n    }\n    if (duration) {\n      styles['--spinner-duration'] = duration;\n    }\n    return (\n      <Host style={styles} role=\"status\" class={{ stacked, 'visually-hidden': !isLoading }}>\n        {isLoading\n          ? [\n              <div aria-hidden=\"true\" class=\"spinner\"></div>,\n              <slot>\n                <span class=\"visually-hidden\">{loadingAnnouncement}</span>\n              </slot>,\n            ]\n          : null}\n      </Host>\n    );\n  }\n}\n"],"version":3}