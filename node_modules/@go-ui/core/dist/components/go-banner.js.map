{"file":"go-banner.js","mappings":";;;;;AAAA,MAAM,WAAW,GAAG,gnDAAgnD,CAAC;AACroD,uBAAe,WAAW;;MCQbA,UAAQ;;;;;uBAKgC,MAAM;;2BASzB,KAAK;yBAIhB,IAAI;uBAQG,KAAK;;;IALjC,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACvB;;IAKD,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KACzC;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC1D,QACE,EAAC,IAAI,qDACH,KAAK,EAAE;gBACL,UAAU,EAAE,OAAO;gBACnB,WAAW;gBACX,YAAY,EAAE,SAAS;gBACvB,YAAY,EAAE,CAAC,OAAO;aACvB,IACA,OAAO,IACN,WAAK,KAAK,EAAC,UAAU,IACnB,YAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,IACJ,IAAI,EAER,gEAAS,KAAK,EAAC,cAAc,IAC3B,4DAAK,KAAK,EAAC,sBAAsB,IAC9B,OAAO,GAAG,UAAI,KAAK,EAAC,IAAI,IAAE,OAAO,CAAM,GAAG,IAAI,EAC/C,8DAAa,CACT,EACL,WAAW,IACV,WAAK,KAAK,EAAC,sBAAsB,IAC/B,iBACE,OAAO,EAAC,MAAM,EACd,IAAI,QACJ,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EACjC,KAAK,EAAE,IAAI,IACX,YAAM,KAAK,EAAC,iBAAiB,cAAe,EAC5C,0BACc,MAAM,EAClB,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,cAAc,kBACR,GAAG,oBACD,OAAO,qBACN,OAAO,EACvB,OAAO,EAAC,WAAW,IACnB,YAAM,CAAC,EAAC,sBAAsB,GAAG,CAC7B,CACI,CACR,IACJ,IAAI,CACA,CACL,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GoBanner"],"sources":["src/components/go-banner/go-banner.scss?tag=go-banner","src/components/go-banner/go-banner.tsx"],"sourcesContent":["go-banner {\n  /**\n    @prop --banner-border-width:\n      Define the border width for hte left decorative banner bar.\n      - default: 0.5rem\n  */\n  --banner-border-width: 0.5rem;\n\n  /**\n    @prop --banner-border-color:\n      Define the border color for left decorative banner bar.\n      - default: var(--go-color-primary-300)\n  */\n  --banner-border-color: var(--go-color-primary-300);\n\n  /**\n    @prop --banner-radius:\n      Define border radius for banner.\n      - default: var(--radius-2)\n  */\n  --banner-radius: var(--radius-2);\n\n  /**\n    @prop --banner-padding-x:\n      Horizontal padding of banner area\n      - default: 1rem\n  */\n  --banner-padding-x: 1rem;\n\n  /**\n    @prop --banner-padding-y:\n      Vertical padding of banner area\n      - default: 1rem\n  */\n  --banner-padding-y: 1rem;\n\n  /**\n    @prop --banner-heading-gap\n    The gap between the heading and the content.\n    - default 0.5rem\n  */\n  --banner-heading-gap: 0.5rem;\n\n  /**\n    @prop --banner-bg-color:\n      Background color for banner.\n      - default: var(--go-color-primary-200)\n  */\n  --banner-bg-color: var(--go-color-primary-200);\n\n  /**\n    @prop --banner-fg-color:\n      Foreground color for banner\n      - default: var(--go-color-darkest)\n  */\n  --banner-fg-color: var(--go-color-darkest);\n\n  /**\n    @prop --banner-shadow:\n      Shadow for banner\n      - default: var(--shadow-1)\n  */\n  --banner-shadow: var(--shadow-1);\n\n  /**\n    @prop --banner-icon-bar-padding:\n      Padding for icon bar\n      - default: 0.5rem\n  */\n  --banner-icon-bar-padding: 0.5rem;\n\n  border-left: var(--banner-border-width) solid var(--banner-border-color);\n  border-radius: var(--banner-radius);\n  background-color: var(--banner-bg-color);\n  color: var(--banner-fg-color);\n  box-shadow: var(--banner-shadow);\n  display: none;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n\n  &.is-showing {\n    display: flex;\n  }\n\n  &[variant='success'] {\n    --banner-border-color: var(--go-color-success-300);\n    --banner-bg-color: var(--go-color-success-100);\n    --banner-fg-color: var(--go-color-darkest);\n  }\n  &[variant='critical'] {\n    --banner-border-color: var(--go-color-critical-300);\n    --banner-bg-color: var(--go-color-critical-100);\n    --banner-fg-color: var(--go-color-darkest);\n  }\n  .icon-col {\n    background: var(--banner-border-color);\n    color: var(--banner-icon-color);\n    padding: 0 calc(var(--banner-border-width) + var(--banner-icon-bar-padding)) 0 var(--banner-icon-bar-padding);\n    display: flex;\n    align-items: center;\n  }\n  .banner-inner {\n    display: flex;\n    width: 100%;\n    padding: var(--banner-padding-y) var(--banner-padding-x);\n  }\n  .banner-inner-content {\n    flex: 1;\n    h2 {\n      margin-bottom: var(--banner-heading-gap);\n    }\n    p:first-child {\n      margin-top: 0;\n    }\n    p:last-child {\n      margin-bottom: 0;\n    }\n  }\n  .banner-inner-dismiss {\n    margin-inline-start: auto;\n  }\n}\n","import { Component, Host, h, Element, Prop, Event, EventEmitter, State } from '@stencil/core';\nimport { BannerVariants } from '../../interfaces';\nimport { hasSlot } from '../../utils/helper';\n\n@Component({\n  tag: 'go-banner',\n  styleUrl: 'go-banner.scss',\n  shadow: false,\n})\nexport class GoBanner {\n  @Element() el: HTMLElement;\n  /**\n   * Type of banner\n   */\n  @Prop({ reflect: true }) variant: BannerVariants = 'info';\n  /**\n   * Heading of banner\n   */\n  @Prop() heading?: string;\n\n  /**\n   * If the banner can be dismissed, a close button will be rendered\n   */\n  @Prop() dismissible?: boolean = false;\n\n  @Event() dismissed: EventEmitter<void>;\n\n  @State() isShowing = true;\n\n  // emit dismissed event on close button click\n  handleClose() {\n    this.isShowing = false;\n    this.dismissed.emit();\n  }\n\n  @State() hasIcon: boolean = false;\n\n  // Store attributes inherited from the host element\n  componentWillLoad() {\n    this.hasIcon = hasSlot(this.el, 'icon');\n  }\n\n  render() {\n    const { hasIcon, heading, dismissible, isShowing } = this;\n    return (\n      <Host\n        class={{\n          'has-icon': hasIcon,\n          dismissible,\n          'is-showing': isShowing,\n          'no-heading': !heading,\n        }}>\n        {hasIcon ? (\n          <div class=\"icon-col\">\n            <slot name=\"icon\"></slot>\n          </div>\n        ) : null}\n\n        <section class=\"banner-inner\">\n          <div class=\"banner-inner-content\">\n            {heading ? <h2 class=\"h5\">{heading}</h2> : null}\n            <slot></slot>\n          </div>\n          {dismissible ? (\n            <div class=\"banner-inner-dismiss\">\n              <go-button\n                variant=\"text\"\n                icon\n                class=\"dismissible-btn\"\n                flat={true}\n                onClick={() => this.handleClose()}\n                round={true}>\n                <span class=\"visually-hidden\">Dismiss</span>\n                <svg\n                  aria-hidden=\"true\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  viewBox=\"0 0 24 24\">\n                  <path d=\"M18 6 6 18M6 6l12 12\" />\n                </svg>\n              </go-button>\n            </div>\n          ) : null}\n        </section>\n      </Host>\n    );\n  }\n}\n"],"version":3}