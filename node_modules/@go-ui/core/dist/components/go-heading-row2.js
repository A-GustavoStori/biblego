import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$2 } from './go-icon2.js';
import { d as defineCustomElement$1 } from './go-nav-link2.js';

const goHeadingRowCss = "go-heading-row{--heading-row-alignment:center;--heading-row-justify:space-between;--heading-row-gap-bottom:var(--go-size-1);--heading-row-inner-gap:0 var(--go-outer-gutter);--heading-row-inner-gap-wide:var(--heading-row-inner-gap)}go-heading-row .heading-row{display:block;margin-bottom:var(--heading-row-gap-bottom);padding:var(--heading-row-inner-gap)}@media (min-width: 600px){go-heading-row .heading-row{display:flex;align-items:var(--heading-row-alignment);justify-content:var(--heading-row-justify);padding:var(--heading-row-inner-gap-wide)}}";
const GoHeadingRowStyle0 = goHeadingRowCss;

const GoHeadingRow = /*@__PURE__*/ proxyCustomElement(class GoHeadingRow extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.heading = undefined;
        this.headingTag = 'h2';
        this.moreLinkHref = undefined;
        this.moreLinkText = undefined;
    }
    componentWillLoad() {
        this.hasHeadingSlot = !!this.el.querySelector('slot[name="heading"]');
        this.hasActionSlot = !!this.el.querySelector('slot[name="action"]');
    }
    render() {
        const { heading, moreLinkHref, moreLinkText, hasHeadingSlot, hasActionSlot, headingTag: HeadingTag } = this;
        const shouldRenderHeading = heading || hasHeadingSlot;
        const shouldRenderMoreLink = (moreLinkHref && moreLinkText) || hasActionSlot;
        return (h(Host, { key: '5e2070f28506c8f26bb35f5b7aacb7b4680dea05' }, shouldRenderHeading || shouldRenderMoreLink ? (h("div", { class: "heading-row" }, shouldRenderHeading ? (h("slot", { name: "heading" }, h(HeadingTag, null, heading))) : (h("span", null)), shouldRenderMoreLink ? (h("slot", { name: "action" }, h("go-nav-link", { item: {
                url: moreLinkHref,
                label: moreLinkText,
            }, showArrow: true }))) : null)) : null));
    }
    get el() { return this; }
    static get style() { return GoHeadingRowStyle0; }
}, [4, "go-heading-row", {
        "heading": [1],
        "headingTag": [1, "heading-tag"],
        "moreLinkHref": [1, "more-link-href"],
        "moreLinkText": [1, "more-link-text"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-heading-row", "go-icon", "go-nav-link"];
    components.forEach(tagName => { switch (tagName) {
        case "go-heading-row":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoHeadingRow);
            }
            break;
        case "go-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "go-nav-link":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { GoHeadingRow as G, defineCustomElement as d };

//# sourceMappingURL=go-heading-row2.js.map