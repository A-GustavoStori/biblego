import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const goContentCss = "go-content{--iframe-embed-aspect-ratio:16/9}go-content>*+*,go-content go-md>*+*{margin-top:1.5em}go-content figure{margin:0}go-content figcaption{text-align:center}go-content img,go-content video{max-width:100%;width:100%}@media (min-width: 600px){go-content img,go-content video{width:auto}}go-content iframe{width:100%;height:unset;aspect-ratio:var(--iframe-embed-aspect-ratio)}go-content table{width:100%}go-content kbd{padding:0.25em 0.5em;border-radius:var(--radius-2);background-color:var(--go-color-code-bg);color:var(--go-color-code-fg);box-shadow:var(--shadow-1)}";
const GoContentStyle0 = goContentCss;

const GoContent$1 = /*@__PURE__*/ proxyCustomElement(class GoContent extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
    }
    render() {
        return (h(Host, { key: 'f546a54797eb7b21efc4d026b3c41f84154b8072' }, h("slot", { key: '31ab5e470fe868c31a42ca485e847139961d65c2' })));
    }
    static get style() { return GoContentStyle0; }
}, [4, "go-content"]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-content"];
    components.forEach(tagName => { switch (tagName) {
        case "go-content":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoContent$1);
            }
            break;
    } });
}
defineCustomElement$1();

const GoContent = GoContent$1;
const defineCustomElement = defineCustomElement$1;

export { GoContent, defineCustomElement };

//# sourceMappingURL=go-content.js.map