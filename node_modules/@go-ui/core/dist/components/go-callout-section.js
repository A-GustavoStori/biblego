import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';
import { b as hasSlot } from './helper.js';

const goCalloutSectionCss = "go-callout-section{--section-inner-gap:5%;--section-media-width:45%;--section-text-width:50%;--section-text-inner-gap:1rem;--image-fit:contain;--image-object-position:top;display:block}go-callout-section .callout{display:flex;flex-direction:column;gap:var(--section-inner-gap)}@media (min-width: 600px){go-callout-section .callout{flex-direction:row;align-items:stretch}}@media (min-width: 600px){go-callout-section .callout.reverse{flex-direction:row-reverse}}@media (min-width: 600px){go-callout-section .media{width:var(--section-media-width)}}go-callout-section .media img{width:100%;height:100%;object-fit:var(--image-fit);object-position:var(--image-object-position)}go-callout-section .text{display:flex;flex-direction:column;gap:var(--section-text-inner-gap)}@media (min-width: 600px){go-callout-section .text{width:var(--section-text-width)}}go-callout-section .text .actions{margin-top:auto}";
const GoCalloutSectionStyle0 = goCalloutSectionCss;

const GoCalloutSection$1 = /*@__PURE__*/ proxyCustomElement(class GoCalloutSection extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.parts = {
            media: false,
            heading: false,
            description: false,
            actions: false,
        };
        this.heading = undefined;
        this.headingTag = 'h2';
        this.description = undefined;
        this.imgSrc = undefined;
        this.imgAlt = '';
        this.imgPos = 'start';
    }
    componentWillLoad() {
        Object.keys(this.parts).forEach((key) => {
            this.parts[key] = this.shouldShow(key);
        });
    }
    shouldShow(key) {
        const isSlotPresent = hasSlot(this.el, key);
        if (key === 'heading') {
            return isSlotPresent || !!this.heading;
        }
        if (key === 'media') {
            return isSlotPresent || !!this.imgSrc;
        }
        if (key === 'description') {
            return isSlotPresent || !!this.description;
        }
        return isSlotPresent;
    }
    render() {
        const { parts, heading, headingTag: HeadingTag, description, imgSrc, imgAlt, imgPos } = this;
        return (h("div", { key: '2373434ae3e2d592367bcc8dbc3c1af1338717e6', class: { callout: true, reverse: imgPos === 'end' } }, parts.media ? (h("div", { class: "media" }, h("slot", { name: "media" }, h("img", { src: imgSrc, alt: imgAlt })))) : null, h("div", { key: '44c7a7c9342a9d281c5a155aeb4602fb183b4bb9', class: "text" }, parts.heading ? (h("div", { class: "heading" }, h("slot", { name: "heading" }, h(HeadingTag, { class: "heading-text" }, heading)))) : null, parts.description ? (h("div", { class: "description" }, h("slot", { name: "description" }, h("div", { innerHTML: description })))) : null, parts.actions ? (h("div", { class: "actions" }, h("slot", { name: "actions" }))) : null)));
    }
    get el() { return this; }
    static get style() { return GoCalloutSectionStyle0; }
}, [4, "go-callout-section", {
        "heading": [1],
        "headingTag": [1, "heading-tag"],
        "description": [1],
        "imgSrc": [1, "img-src"],
        "imgAlt": [1, "img-alt"],
        "imgPos": [1, "img-pos"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-callout-section"];
    components.forEach(tagName => { switch (tagName) {
        case "go-callout-section":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoCalloutSection$1);
            }
            break;
    } });
}
defineCustomElement$1();

const GoCalloutSection = GoCalloutSection$1;
const defineCustomElement = defineCustomElement$1;

export { GoCalloutSection, defineCustomElement };

//# sourceMappingURL=go-callout-section.js.map