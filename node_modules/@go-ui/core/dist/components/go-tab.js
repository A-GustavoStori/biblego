import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const goTabCss = "go-tab{display:none}go-tab.active{display:block}go-tab:focus-visible{outline-offset:0.5rem}";
const GoTabStyle0 = goTabCss;

const GoTab$1 = /*@__PURE__*/ proxyCustomElement(class GoTab extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.label = undefined;
        this.active = undefined;
        this.tabId = undefined;
        this.panelId = undefined;
        this.iconPosition = 'before';
        this.iconOnly = false;
    }
    async setActive(active) {
        this.active = active;
    }
    render() {
        const { panelId, tabId, active } = this;
        return (h(Host, { key: '260e446d24b1228c702c45b1ee98094be0137e17', tabindex: "0", role: "tabpanel", id: panelId, "aria-labelledby": tabId, class: { 'tab-panel': true, active } }, h("slot", { key: '98cf8d2a43908aa5dc6371f4f337d5029240cef2' })));
    }
    get el() { return this; }
    static get style() { return GoTabStyle0; }
}, [4, "go-tab", {
        "label": [1],
        "active": [1028],
        "tabId": [1025, "tab-id"],
        "panelId": [1025, "panel-id"],
        "iconPosition": [1, "icon-position"],
        "iconOnly": [4, "icon-only"],
        "setActive": [64]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-tab"];
    components.forEach(tagName => { switch (tagName) {
        case "go-tab":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoTab$1);
            }
            break;
    } });
}
defineCustomElement$1();

const GoTab = GoTab$1;
const defineCustomElement = defineCustomElement$1;

export { GoTab, defineCustomElement };

//# sourceMappingURL=go-tab.js.map