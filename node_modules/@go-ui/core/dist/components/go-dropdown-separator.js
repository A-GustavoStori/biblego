import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const goDropdownSeparatorCss = "go-dropdown-separator{--dd-separator-line-color:var(--go-color-neutral-300);display:block}go-dropdown-separator hr{border:none;border-top:0.0625rem solid var(--dd-separator-line-color)}";
const GoDropdownSeparatorStyle0 = goDropdownSeparatorCss;

const GoDropdownSeparator$1 = /*@__PURE__*/ proxyCustomElement(class GoDropdownSeparator extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
    }
    render() {
        return (h(Host, { key: '5a535907d4e98df6e259e4733124cd0a560fa454' }, h("hr", { key: '0e9ded95d2f774e9703542e617b210690c427501' })));
    }
    static get style() { return GoDropdownSeparatorStyle0; }
}, [0, "go-dropdown-separator"]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["go-dropdown-separator"];
    components.forEach(tagName => { switch (tagName) {
        case "go-dropdown-separator":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, GoDropdownSeparator$1);
            }
            break;
    } });
}
defineCustomElement$1();

const GoDropdownSeparator = GoDropdownSeparator$1;
const defineCustomElement = defineCustomElement$1;

export { GoDropdownSeparator, defineCustomElement };

//# sourceMappingURL=go-dropdown-separator.js.map