{"file":"go-toc2.js","mappings":";;;;;AAAA,MAAM,QAAQ,GAAG,qlBAAqlB,CAAC;AACvmB,oBAAe,QAAQ;;MCcV,KAAK;;;;QAoBhB,YAAO,GAAW,QAAQ,CAAC,iBAAiB,CAAC,CAAC;qBAdrB,cAAc;wBAKX,IAAI;0BAKF,EAAE;;;IAMhC,iBAAiB;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;;;;;;;IASD,MAAM,IAAI;QACR,MAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;;YAEjB,OAAO;SACR;QACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACxB;;;;;;IAOO,UAAU,CAAC,KAA0B;QAC3C,MAAM,QAAQ,GAAe,EAAE,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;gBACZ,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC;aAC3B;YACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAEpC,QAAQ,CAAC,IAAI,CAAC;gBACZ,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE;gBAClB,KAAK,EAAE,IAAI,CAAC,WAAW;aACxB,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QACrC,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IACpC,WAAK,KAAK,EAAC,QAAQ,IACjB,8BAAsB,OAAO,IAC3B,WAAK,KAAK,EAAC,aAAa,iBAAa,MAAM,GAAO,EAClD,WAAK,EAAE,EAAE,OAAO,IACd,YAAM,IAAI,EAAC,OAAO,IAChB,YAAM,KAAK,EAAE,mBAAmB,UAAU,EAAE,IAAG,IAAI,CAAC,KAAK,CAAQ,CAC5D,CACH,EACN,UAAI,KAAK,EAAC,aAAa,IACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAChC,UAAI,KAAK,EAAC,aAAa,IACrB,mBAAa,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,GAAgB,CAC9C,CACN,CAAC,CACC,CACD,CACF,IACJ,IAAI,CACH,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/go-toc/go-toc.scss?tag=go-toc","src/components/go-toc/go-toc.tsx"],"sourcesContent":["go-toc {\n  --toc-border-width: 0.25rem;\n  --toc-border-color: var(--go-color-primary-900);\n  --toc-border-gap: 2rem;\n  --toc-padding: 1.5rem 0;\n\n  display: block;\n  .go-toc {\n    padding: var(--toc-padding);\n    nav {\n      position: relative;\n    }\n  }\n  .go-toc-line {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: var(--toc-border-width);\n    background: var(--toc-border-color);\n    border-radius: var(--radius-round);\n    height: 100%;\n  }\n  .go-toc-title {\n    padding-left: var(--toc-border-gap);\n    margin-bottom: 1rem;\n  }\n  .go-toc-list {\n    padding-left: var(--toc-border-gap);\n    list-style: none;\n    margin: 0;\n    go-link {\n      --nav-link-current-bar-width: 0;\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, State, Method } from '@stencil/core';\nimport { INavItem } from '../../interfaces';\nimport { uniqueId } from 'lodash-es';\n\nexport interface TocProps {\n  label?: string;\n  selector?: string;\n  labelClass?: string;\n}\n\n@Component({\n  tag: 'go-toc',\n  styleUrl: 'go-toc.scss',\n  shadow: false,\n})\nexport class GoToc implements TocProps {\n  @Element() el: HTMLElement;\n\n  /**\n   * Label for the TOC\n   */\n  @Prop() label?: string = 'On this page';\n\n  /**\n   * Selector for the TOC items\n   */\n  @Prop() selector?: string = 'h2';\n\n  /**\n   * Custom classes to be applied to the label\n   */\n  @Prop() labelClass?: string = '';\n\n  @State() tocItems?: INavItem[];\n\n  labelId: string = uniqueId('go-toc-heading-');\n\n  componentWillLoad() {\n    this.init();\n  }\n\n  /**\n   * Query the DOM and generate TOC\n   * If content in scope is dynamically loaded, it may not be available when this toc component loads.\n   * call this `init` method and have the toc regenerate the links\n   * @returns void\n   */\n  @Method()\n  async init() {\n    const items = document.querySelectorAll(this.selector);\n    if (!items.length) {\n      // warning('TOC selector (' + this.selector + ') yield no result.');\n      return;\n    }\n    this.setupItems(items);\n  }\n\n  /**\n   * Initialise the TOC items from the given list of elements\n   * If the element doesn't have a `id` attribute, generate an unique id and set it to the element\n   * Finally set the tocItems state with url and label\n   */\n  private setupItems(items: NodeListOf<Element>) {\n    const tocItems: INavItem[] = [];\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n\n      if (!item.id) {\n        item.id = `toc-item-${i}`;\n      }\n      item.setAttribute('tabindex', '-1');\n\n      tocItems.push({\n        url: `#${item.id}`,\n        label: item.textContent,\n      });\n    }\n\n    this.tocItems = tocItems;\n  }\n\n  render() {\n    const { labelId, labelClass } = this;\n    return (\n      <Host>\n        {this.tocItems && this.tocItems.length ? (\n          <div class=\"go-toc\">\n            <nav aria-labelledby={labelId}>\n              <div class=\"go-toc-line\" aria-hidden=\"true\"></div>\n              <div id={labelId}>\n                <slot name=\"label\">\n                  <span class={`go-toc-title h5 ${labelClass}`}>{this.label}</span>\n                </slot>\n              </div>\n              <ul class=\"go-toc-list\">\n                {this.tocItems.map(({ label, url }) => (\n                  <li class=\"go-toc-item\">\n                    <go-nav-link item={{ label, url }}></go-nav-link>\n                  </li>\n                ))}\n              </ul>\n            </nav>\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"version":3}