{"file":"go-hero2.js","mappings":";;;;;;AAAA,MAAM,SAAS,GAAG,ymEAAymE,CAAC;AAC5nE,qBAAe,SAAS;;MCmBX,MAAM;;;;QAgDjB,mBAAc,GAAG,KAAK,CAAC;;;;;;+BAhBY,KAAK;;IAGxC,WAAW,CAAC,KAAa;QACvB,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACzB,OAAO,CAAC,uDAAuD,CAAC,CAAC;SAClE;KACF;IAGD,WAAW,CAAC,KAAa;QACvB,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACzB,OAAO,CAAC,6DAA6D,CAAC,CAAC;SACxE;KACF;IAID,iBAAiB;QACf,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;KACzD;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC;QACnG,QACE,EAAC,IAAI,qDACH,KAAK,EAAE;gBACL,mBAAmB,EAAE,cAAc;gBACnC,oBAAoB,EAAE,CAAC,CAAC,eAAe;aACxC,IACD,8DACG,cAAc,IACb,WAAK,KAAK,EAAC,eAAe,IACxB,YAAM,IAAI,EAAC,eAAe,GAAQ,CAC9B,IACJ,IAAI,EAER,4DAAK,KAAK,EAAC,WAAW,IACpB,4DAAK,KAAK,EAAC,gBAAgB,IACzB,4DAAK,KAAK,EAAC,WAAW,IACnB,cAAc,GAAG,WAAK,KAAK,EAAC,cAAc,GAAO,GAAG,IAAI,EACxD,WAAW,GAAG,sBAAgB,KAAK,EAAE,WAAW,GAAmB,GAAG,IAAI,EAC3E,4DAAK,KAAK,EAAC,yBAAyB,IAAE,UAAU,CAAO,EACvD,2DAAI,KAAK,EAAC,gBAAgB,IAAE,OAAO,CAAM,EACzC,8DAAa,CACT,EACL,MAAM,IAAI,MAAM,IACf,WAAK,KAAK,EAAC,YAAY,IACrB,WAAK,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAC,cAAc,GAAG,CAClD,IACJ,IAAI,CACJ,CACF,CACF,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/go-hero/go-hero.scss?tag=go-hero","src/components/go-hero/go-hero.tsx"],"sourcesContent":["go-hero {\n  /**\n    @prop --hero-padding-top:\n      Top padding of hero container\n      - default: 0\n  */\n  --hero-padding-top: 0;\n\n  /**\n    @prop --hero-padding-bottom:\n      Bottom padding of hero container\n      - default: 0\n  */\n  --hero-padding-bottom: 0;\n  --hero-breadcrumb-gap: 2rem;\n  --hero-pre-heading-gap: 0;\n  --hero-bg-color: var(--go-color-primary-100);\n  --hero-fg-color: var(--go-color-darkest);\n  --hero-text-flex-basis: 60%;\n  --hero-image-flex-basis: 40%;\n  --hero-container-gap: 2rem;\n\n  /**\n    @prop --hero-text-bg-blur-on-img:\n      Blur effect for hero text when `full-width-bg` slot is used.\n      - default: 10px\n  */\n  --hero-text-bg-blur-on-img: 10px;\n\n  /**\n    @prop --hero-text-box-padding:\n      Padding on hero text\n      - default: 2rem\n  */\n  --hero-text-box-padding: 2rem;\n\n  /**\n    @prop --hero-img-aspect-ratio:\n      Aspect ratio of hero image (e.g. 16/9 or 4/3)\n      - default: 4/3\n  */\n  --hero-img-aspect-ratio: 4/3;\n\n  /**\n    @prop --hero-img-fit:\n      object-fit for image (e.g. cover/contain/etc)\n      - default: cover\n  */\n  --hero-img-fit: cover;\n  /**\n    @prop --hero-img-position:\n      object-position for hero image\n      - default: center\n  */\n  --hero-img-position: center;\n\n  /**\n    @prop --hero-full-width-bg-padding:\n      Padding for outer hero section (from go-hero top to text box top) when `full-width-bg` is slotted\n      - default: 4rem 0\n  */\n  --hero-full-width-bg-padding: 4rem 0;\n\n  /**\n    @prop --hero-bg-opacity-on-img:\n      Opacity of background on hero text box when `full-width-bg` is slotted\n      - default: 0.5\n  */\n  --hero-bg-opacity-on-img: 0.5;\n\n  display: block;\n  background-color: var(--hero-bg-color);\n  color: var(--hero-fg-color);\n  position: relative;\n  overflow: hidden;\n\n  .full-width-bg {\n    position: absolute;\n    z-index: 0;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    > img {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  &.has-full-width-bg {\n    .hero-container {\n      padding: var(--hero-full-width-bg-padding);\n    }\n    .hero-text {\n      position: relative;\n      backdrop-filter: blur(var(--hero-text-bg-blur-on-img));\n    }\n    .hero-text-bg {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: -1;\n      background-color: var(--hero-bg-color);\n      opacity: var(--hero-bg-opacity-on-img);\n    }\n  }\n\n  &.hide-img-on-mobile {\n    .hero-image {\n      display: none;\n      @include desktop {\n        display: block;\n      }\n    }\n  }\n\n  .hero-container {\n    position: relative;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    padding-top: var(--hero-padding-top);\n    padding-bottom: var(--hero-padding-bottom);\n    gap: var(--hero-container-gap);\n    @include desktop {\n      flex-direction: row;\n    }\n  }\n\n  .hero-text {\n    padding: var(--hero-text-box-padding);\n    go-breadcrumbs {\n      margin-bottom: var(--hero-breadcrumb-gap);\n    }\n    .pre-heading {\n      margin-bottom: var(--hero-pre-heading-gap);\n    }\n\n    @include desktop {\n      flex: 0 1 var(--hero-text-flex-basis);\n    }\n  }\n  .hero-image {\n    @include desktop {\n      flex: 0 1 var(--hero-image-flex-basis);\n    }\n    .featured-img {\n      width: 100%;\n      height: 100%;\n      object-fit: var(--hero-img-fit);\n      object-position: var(--hero-img-position);\n      aspect-ratio: var(--hero-img-aspect-ratio);\n    }\n  }\n}\n","import { Component, Host, h, Element, Prop, Watch } from '@stencil/core';\nimport { INavItem } from '../../interfaces';\nimport { hasSlot, warning } from '../../utils/helper';\n\nexport interface HeroProps {\n  heading: string;\n  preHeading?: string;\n  breadcrumb?: INavItem[] | string;\n  imgSrc?: string;\n  imgAlt?: string;\n}\n\n/**\n * @slot default - content below the main heading\n */\n@Component({\n  tag: 'go-hero',\n  styleUrl: 'go-hero.scss',\n  shadow: false,\n})\nexport class GoHero implements HeroProps {\n  @Element() el: HTMLElement;\n\n  /**\n   * Hero heading (h1)\n   */\n  @Prop() heading: string;\n\n  /**\n   * Pre heading text - use only when required\n   */\n  @Prop() preHeading?: string;\n\n  /**\n   * Breadcrumb navigation items\n   */\n  @Prop() breadcrumbs?: INavItem[] | string;\n  /**\n   * hero image src url\n   * (requires img-alt attribute to be present to render)\n   */\n  @Prop() imgSrc?: string;\n\n  /**\n   * hero image alt text\n   * (requires img-src attribute to be present to render)\n   */\n  @Prop() imgAlt?: string;\n\n  /**\n   * if we should hide hero img on mobile(`full-width-bg` slot not affected)\n   */\n  @Prop() hideImgOnMobile: boolean = false;\n\n  @Watch('imgSrc')\n  watchImgSrc(value: string) {\n    if (value && !this.imgAlt) {\n      warning('img-alt attribute is required when img-src is present');\n    }\n  }\n\n  @Watch('imgAlt')\n  watchImgAlt(value: string) {\n    if (value && !this.imgSrc) {\n      warning('img-src attribute is not present, did you forget to add it?');\n    }\n  }\n\n  hasFullWidthBg = false;\n\n  componentWillLoad() {\n    this.hasFullWidthBg = hasSlot(this.el, 'full-width-bg');\n  }\n\n  render() {\n    const { heading, preHeading, breadcrumbs, imgAlt, imgSrc, hasFullWidthBg, hideImgOnMobile } = this;\n    return (\n      <Host\n        class={{\n          'has-full-width-bg': hasFullWidthBg,\n          'hide-img-on-mobile': !!hideImgOnMobile,\n        }}>\n        <div>\n          {hasFullWidthBg ? (\n            <div class=\"full-width-bg\">\n              <slot name=\"full-width-bg\"></slot>\n            </div>\n          ) : null}\n\n          <div class=\"container\">\n            <div class=\"hero-container\">\n              <div class=\"hero-text\">\n                {hasFullWidthBg ? <div class=\"hero-text-bg\"></div> : null}\n                {breadcrumbs ? <go-breadcrumbs items={breadcrumbs}></go-breadcrumbs> : null}\n                <div class=\"pre-heading text-size-2\">{preHeading}</div>\n                <h1 class=\"text-display-2\">{heading}</h1>\n                <slot></slot>\n              </div>\n              {imgSrc && imgAlt ? (\n                <div class=\"hero-image\">\n                  <img src={imgSrc} alt={imgAlt} class=\"featured-img\" />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}